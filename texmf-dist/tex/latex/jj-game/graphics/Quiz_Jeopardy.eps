%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: Quiz_Jeopardy.eps
%%Creator: Adobe Illustrator(R) 12
%%AI8_CreatorVersion: 12.0.1
%AI9_PrintingDataBegin
%%For: Alice aus dem Wunderland
%%CreationDate: 4/12/2007
%%BoundingBox: 0 0 474 305
%%HiResBoundingBox: 0 0 473.5000 305
%%CropBox: 0 0 473.5000 305
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.19 0
%%+ procset Adobe_CoolType_Core 2.23 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%ADO_BuildNumber: Adobe Illustrator(R) 12.0.1 x204 R agm 4.3861 ct 5.530
%ADO_ContainsXMP: MainFirst
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Utils 70 dict dup begin put
/bdf
{
	bind def
} bind def
/nd{
	null def
}bdf
/xdf
{
	exch def
}bdf
/ldf 
{
	load def
}bdf
/ddf
{
	put
}bdf	
/xddf
{
	3 -1 roll put
}bdf	
/xpt
{
	exch put
}bdf
/ndf
{ 
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/ps_level
	/languagelevel where{
		pop systemdict /languagelevel get exec
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr} stopped {
		-1
	}if
def
/set_gvm
{
	currentglobal exch setglobal
}bdf
/reset_gvm
{
	setglobal
}bdf
/makereadonlyarray
{
	/packedarray where{
		pop packedarray
	}{
		array astore readonly
	}ifelse
}bdf
/map_reserved_ink_name
{
	dup type /stringtype eq{
		dup /Red eq{
			pop (_Red_)
		}{
			dup /Green eq{
				pop (_Green_)
			}{
				dup /Blue eq{
					pop (_Blue_)
				}{
					dup () cvn eq{
						pop (Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf
		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne
			{
			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark
			} if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		} ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/thold_halftone
{ 
	level3
		{sethalftone currenthalftone}
		{
			dup /HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}
			{
				begin
				Width Height mul {
					Thresholds read {pop} if
				} repeat
				end
				currenthalftone
			} ifelse
		}ifelse
} def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%) anchorsearch {pop} if
} bdf
/filter_cmyk
{	
	dup type /filetype ne{
		exch () /SubFileDecode filter
	}
	{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length /AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	] cvx
} bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
} bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type /filetype ne{
		0 () /SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict /AGMCORE_gget cvx /begin cvx
			currentdict /srcStr get /readstring cvx /pop cvx
			/dup cvx /length cvx 0 /gt cvx [
				Adobe_AGM_Utils /AGMUTIL_ndx 0 /ddf cvx
				names_index Names length currentdict /srcStr get length 1 sub {
					1 /index cvx /exch cvx /get cvx
					currentdict /dstStr get /AGMUTIL_ndx /load cvx 3 -1 /roll cvx /put cvx
					Adobe_AGM_Utils /AGMUTIL_ndx /AGMUTIL_ndx /load cvx 1 /add cvx /ddf cvx
				} for
				currentdict /dstStr get 0 /AGMUTIL_ndx /load cvx /getinterval cvx
			] cvx /if cvx
			/end cvx
		] cvx
		bind
		/exec cvx
	] cvx
	end
} bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict /DataSource get def
	/origMultipleDataSources imageDict /MultipleDataSources get def
	/origDecode imageDict /Decode get def
	/dstDataStr imageDict /Width get colorSpaceElemCnt mul string def
	imageDict /MultipleDataSources known {MultipleDataSources}{false} ifelse
	{
		/imbufCnt imageDict /DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub {
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict /DataSource get imbufIdx [ AGMUTIL_imagefile imbufs imbufIdx get /readstring cvx /pop cvx ] cvx put
		} for
		DeviceN_PS2 {
			imageDict begin
		 	/DataSource [ DataSource /devn_sep_datasource cvx ] cvx def
			/MultipleDataSources false def
			/Decode [0 1] def
			end
		} if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or {
			/srcDataStrs [ imageDict begin
				currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse
				{
					Width Decode length 2 div mul cvi string
				} repeat
				end ] def		
			imageDict begin
		 	/DataSource [AGMUTIL_imagefile Decode BitsPerComponent false 1 /filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource /exec cvx] cvx def
			/Decode [0 1] def
			end
		}{
			imageDict /DataSource [1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx /pop cvx names_index /get cvx /put cvx] cvx put
			imageDict /Decode [0 1] put
		} ifelse
	} ifelse
	imageDict exch
	load exec
	imageDict /DataSource origDataSource put
	imageDict /MultipleDataSources origMultipleDataSources put
	imageDict /Decode origDecode put	
	end
} bdf
/write_image_file
{
	begin
	{ (AGMUTIL_imagefile) (w+) file } stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources {DataSource 0 get}{DataSource}ifelse type /filetype eq {
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{ 
			pop
			MultipleDataSources {
			 	0 1 DataSource length 1 sub {
					DataSource type dup
					/arraytype eq {
						pop DataSource exch get exec
					}{
						/filetype eq {
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						} ifelse
					} ifelse
					AGMUTIL_imagefile exch writestring
				} for
			}{
				DataSource type dup
				/arraytype eq {
					pop DataSource exec
				}{
					/filetype eq {
						DataSource imbuf readstring pop
					}{
						DataSource
					} ifelse
				} ifelse
				AGMUTIL_imagefile exch writestring
			} ifelse
		}for
		end
		true
	}ifelse
	end
} bdf
/close_image_file
{
	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile
}def
statusdict /product known userdict /AGMP_current_show known not and{
	/pstr statusdict /product get def
	pstr (HP LaserJet 2200) eq 	
	pstr (HP LaserJet 4000 Series) eq or
	pstr (HP LaserJet 4050 Series ) eq or
	pstr (HP LaserJet 8000 Series) eq or
	pstr (HP LaserJet 8100 Series) eq or
	pstr (HP LaserJet 8150 Series) eq or
	pstr (HP LaserJet 5000 Series) eq or
	pstr (HP LaserJet 5100 Series) eq or
	pstr (HP Color LaserJet 4500) eq or
	pstr (HP Color LaserJet 4600) eq or
	pstr (HP LaserJet 5Si) eq or
	pstr (HP LaserJet 1200 Series) eq or
	pstr (HP LaserJet 1300 Series) eq or
	pstr (HP LaserJet 4100 Series) eq or 
	{
 		userdict /AGMP_current_show /show load put
		userdict /show {
		  currentcolorspace 0 get
		  /Pattern eq
		  {false charpath f}
		  {AGMP_current_show} ifelse
		} put
	}if
	currentdict /pstr undef
} if
/consumeimagedata
{
	begin
	currentdict /MultipleDataSources known not
		{/MultipleDataSources false def} if
	MultipleDataSources
		{
		DataSource 0 get type
		dup /filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup /arraytype eq exch /packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch get exec length exch 0 ne {pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup /filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height { pop DataSource flushbuffer readstring pop pop} for
			end
			}if
		dup /arraytype eq exch /packedarraytype eq or /DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	  2{/exec load}repeat
	  3 1 roll
	  [ 5 1 roll ] bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs /TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{ 
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs /TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type /dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		} if
	dup type /arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		} if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch {cvx} if
}bdf
/clonedict
{
	dup length dict
	begin
		{
		dup type /dicttype eq
			{
				clonedict
			} if
		dup type /arraytype eq
			{
				clonearray
			} if
		def
		}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get /DeviceN eq level3 not and
} bdf
/Indexed_DeviceN
{ 
	/indexed_colorspace_dict AGMCORE_gget dup null ne {
		dup /CSDBase known {
			/CSDBase get /CSD get_res /Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	} ifelse
} bdf
/DeviceN_NoneName
{	
	/Names where {
		pop
		false Names
		{
			(None) eq or
		} forall
	}{
		false
	}ifelse
} bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup /arraytype eq exch /packedarraytype eq or
		{
			dup 0 get /DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}
			{
				true
			}ifelse
		}
		{
			true
		} ifelse
	}
	{
		true
	} ifelse
} bdf
/base_colorspace_type
{
	dup type /arraytype eq {0 get} if
} bdf
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5 {cleartomark} bind def
}{
	/pdfmark_5 {pdfmark} bind def
}ifelse
/ReadBypdfmark_5
{
	2 dict begin
	/makerString exch def string /tmpString exch def
	{
		currentfile tmpString readline pop
		makerString anchorsearch
		{
		pop pop cleartomark exit
		}{
			3 copy /PUT pdfmark_5 pop 2 copy (\n) /PUT pdfmark_5
		} ifelse
	}loop
	end
} bdf
/doc_setup{
	Adobe_AGM_Utils begin
}bdf
/doc_trailer{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright (C) 1997-2005 Adobe Systems, Inc.  All Rights Reserved.
%% Note: This procset assumes Adobe_AGM_Utils is opened on the stack below it, for
%% definitions of some fundamental procedures.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Core 201 dict dup begin put
/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen [currentscreen] cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_in_pattern false def
/AGMCORE_currentpagedevice nd
/knockout_unitsq nd
currentglobal true setglobal
[/CSA /Gradient /Procedure]
{
	/Generic /Category findresource dup length dict copy /Category defineresource pop
} forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer {readline} stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type /dicttype eq{
		dup /HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup /HalftoneType get 2 eq{
				/GraySpotFunction get
			}{ 
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
} def
/clp_npth
{
	clip newpath
} def
/eoclp_npth
{
	eoclip newpath
} def
/npth_clp
{
	newpath clip
} def
/graphic_setup
{
	/AGMCORE_graphicsave save def
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[] 0 setdash
	10 setmiterlimit
	newpath
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias get exec
	/Adobe_AGM_Image where {
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			get exec
		}{
			pop pop
		}ifelse
	} if
	100 dict begin
	/dictstackcount countdictstack def
	/showpage {} def
	mark
} def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub {end}for
	end
	AGMCORE_graphicsave restore
} def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				} if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}
			{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			} ifelse
		} forall
} bdf
/doc_setup{
	Adobe_AGM_Core begin
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict /AGM_handleerror known not{
		errordict /AGM_handleerror errordict /handleerror get put
		errordict /handleerror {
			Adobe_AGM_Core begin
			$error /newerror get AGMCORE_cur_err null ne and{
				$error /newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error /newerror true put
			end
			errordict /AGM_handleerror get exec
			} bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 10 def
		/AGMCORE_&gsave /gsave ldf
		/AGMCORE_&grestore /grestore ldf
		/AGMCORE_&grestoreall /grestoreall ldf
		/AGMCORE_&save /save ldf
		/AGMCORE_&setoverprint /setoverprint ldf
		/AGMCORE_gdictcopy {
			begin
			{ def } forall
			end
		}def
		/AGMCORE_gput {
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget {
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave {
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore {
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt {1 add} if
			dup AGMCORE_gstack exch get dup /AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall {
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save {
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup /AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub {
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		} for
	}if
	level3 /AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern /makepattern load def
	}if
	/currentcmykcolor [0 0 0 0] AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace [/DeviceGray] AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent () AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	<<
	/MaxPatternItem currentsystemparams /MaxPatternCache get
	>>
	setuserparams
	end
}def
/page_setup
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3 {
			3 index add neg dup 0 lt {
				pop 0
			} if
			3 1 roll
		} repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{
		pop
	}ndf
	/currentoverprint
	{
		false
	}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{ 
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.) ==
			Adobe_AGM_Core /AGMCORE_have_reported_unsupported_color_space true ddf
		} if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where {pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias {
				/Name get exch pop
			} if
			dup dup (None) eq exch (All) eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{ 
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_in_pattern known {//Adobe_AGM_Core/AGMCORE_in_pattern get}{false} ifelse
						not AGMCORE_currentpagedevice/OverrideSeparations known and
						{
							AGMCORE_currentpagedevice/OverrideSeparations get
							{
								/HqnSpots /ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not
						}{
							gsave
							[/Separation AGMCORE_name /DeviceGray {}]AGMCORE_&setcolorspace
							false
							AGMCORE_currentpagedevice/SeparationColorNames 2 copy known
							{
								get
								{ AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where {pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{ 
				dup true exch
					{
					dup (Cyan) eq exch
					dup (Magenta) eq 3 -1 roll or exch
					dup (Yellow) eq 3 -1 roll or exch
					dup (Black) eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup (Cyan) eq exch
						dup (Magenta) eq 3 -1 roll or exch
						dup (Yellow) eq 3 -1 roll or exch
						(Black) eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					dup (Cyan) eq exch
					dup (Magenta) eq 3 -1 roll or exch
					dup (Yellow) eq 3 -1 roll or exch
					dup (Black) eq 3 -1 roll or
					{pop}
					{convert_spot_to_process or}ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space  
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup (Cyan) eq exch dup (Magenta) eq exch dup (Yellow) eq exch (Black) eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{ 
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			  	AGMCORE_magenta_plate{
			  		4 3 roll pop pop pop
			  	}{
			  		AGMCORE_yellow_plate{
			  			4 2 roll pop pop pop
			  		}{
			  			4 1 roll pop pop pop
			  		}ifelse
			  	}ifelse
			}ifelse
			settransfer  
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			  	AGMCORE_magenta_plate{
			  		{4 3 roll pop pop pop}
			  	}{
			  		AGMCORE_yellow_plate{
			  			{4 2 roll pop pop pop}
			  		}{
			  			{4 1 roll pop pop pop}
			  		}ifelse
			  	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup /Cyan eq 1 index (Cyan) eq or
					{pop (_cyan_)}if
				dup /Magenta eq 1 index (Magenta) eq or
					{pop (_magenta_)}if
				dup /Yellow eq 1 index (Yellow) eq or
					{pop (_yellow_)}if
				dup /Black eq 1 index (Black) eq or
					{pop (_black_)}if
				}def
			dup type /arraytype eq
				{[exch {filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3 {
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup (Cyan) eq exch /Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup (Magenta) eq exch /Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup (Yellow) eq exch /Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup (Black) eq exch /Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type /stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string /string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in /readstring cvx
						[component /get cvx 255 /exch cvx /sub cvx string_out /exch cvx 0 /exch cvx /put cvx string_out]cvx
						[/pop cvx ()]cvx /ifelse cvx
					]cvx /ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type /dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict /Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode [1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0 [C0 channel get 1 exch sub] def
							/C1 [C1 channel get 1 exch sub] def
							}{
							/C0 [1] def
							/C1 [1] def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions [Functions {channel paint? AGMCORE_separateShadingFunction} forall] def			
						}if
					currentdict /Range known
						{/Range [0 1] def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict /Function known
					{
					currentdict /Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction /Function xdf
					/ColorSpace [/DeviceGray] def
					}{
					ColorSpace dup type /arraytype eq {0 get}if /DeviceCMYK eq
						{
						/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get /Separation eq
						{
							{
								[1 /exch cvx /sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub /index cvx 1 /exch cvx /sub cvx ColorSpace 1 get length 1 add 1 /roll cvx ColorSpace 1 get length{/pop cvx} repeat]cvx
							}{
								pop [ColorSpace 1 get length {/pop cvx} repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2 /DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup /ColorSpace get
				dup type /arraytype ne
					{[exch]}if
				dup 0 get /DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get /Separation eq
					{
					exch begin
					ColorSpace 1 get dup /None ne exch /All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get /exec cvx
										4 AGMCORE_plate_ndx sub -1 /roll cvx
										4 1 /roll cvx
										3 [/pop cvx]cvx /repeat cvx
										1 /exch cvx /sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get /DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get /exec cvx
									4 AGMCORE_plate_ndx sub -1 /roll cvx
									4 1 /roll cvx
									3 [/pop cvx]cvx /repeat cvx
									1 /exch cvx /sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace [/DeviceGray] def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup /DeviceCMYK eq exch dup /Separation eq exch /DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type /arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get /CIEBasedA eq
								{
								/ColorSpace [/Separation /_ciebaseda_ /DeviceGray {}] def
								}if
							ColorSpace 0 get dup /CIEBasedABC eq exch dup /CIEBasedDEF eq exch /DeviceRGB eq or or
								{
								/ColorSpace [/DeviceN [/_red_ /_green_ /_blue_] /DeviceRGB {}] def
								}if
							ColorSpace 0 get /CIEBasedDEFG eq
								{
								/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup /AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace [/Separation (None) /DeviceGray {}] def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup /AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup /PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading /AGMCORE_ignoreshade known
					currentdict end exch
					{pop <</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{ 
				4 {4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{ 
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf
				end
				[/Separation 4 -1 roll /DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation (All) /DeviceGray {}] setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4 {4 index mul 4 1 roll} repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval {255 div} forall
	} bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	} bdf
	/n_color_components
	{
		base_colorspace_type
		dup /DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo /moveto ldf
		/li /lineto ldf
		/cv /curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2 /setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace /setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup /arraytype eq exch /packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where {
						begin
						dup 0 get dup /Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[ 
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get [ 
									exch {
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									} forall 
								] 1 xpt
							}if
						}ifelse
						end
					} if
				}if
			}def
			/setcolorspace
			{
				dup type dup /arraytype eq exch /packedarraytype eq or
				{
					dup 0 get /Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps {AGMCORE_&&&setcolorspace} if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		} def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		} def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup /DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup /DeviceGray ne{
				dup /DeviceCMYK ne{
					dup /DeviceRGB ne{
						dup /Separation eq{
							pop
							currentcolorspace 3 get exec
							currentcolorspace 2 get
						}{
							dup /Indexed eq{
								pop
								currentcolorspace 3 get dup type /stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err /AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		} def
	}ifelse
	/sop /setoverprint ldf
	/lw /setlinewidth ldf
	/lc /setlinecap ldf
	/lj /setlinejoin ldf
	/ml /setmiterlimit ldf
	/dsh /setdash ldf
	/sadj /setstrokeadjust ldf
	/gry /setgray ldf
	/rgb /setrgbcolor ldf
	/cmyk /setcmykcolor ldf
	/sep /setsepcolor ldf
	/devn /setdevicencolor ldf
	/idx /setindexedcolor ldf
	/colr /setcolor ldf
	/csacrd /set_csa_crd ldf
	/sepcs /setsepcolorspace ldf
	/devncs /setdevicencolorspace ldf
	/idxcs /setindexedcolorspace ldf
	/cp /closepath ldf
	/clp /clp_npth ldf
	/eclp /eoclp_npth ldf
	/f /fill ldf
	/ef /eofill ldf
	/@ /stroke ldf
	/nclp /npth_clp ldf
	/gset /graphic_setup ldf
	/gcln /graphic_cleanup ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin /clonedict load end def
	/clonearray Adobe_AGM_Utils begin /clonearray load end def
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {
			bind
		}if
		def
	}forall
	/getrampcolor
	{ 
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type /stringtype eq {indx get} if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		} for
		ColorSpaceFamily /Separation eq 
		{sep}
		{
			ColorSpaceFamily /DeviceN eq
			{devn} {setcolor}ifelse
		}ifelse
	} bdf
	/sssetbackground {aload pop setcolor} bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where {pop /setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			newpath
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			newpath
		} if
		c1x c2x eq
		{
			c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
		}
		{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
			c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
		} ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{ pathbbox } stopped
		{ 0 0 0 0 } if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}
		{
			/max { 2 copy gt { pop } {exch pop} ifelse } bdf
			/min { 2 copy lt { pop } {exch pop} ifelse } bdf
			rampdict begin
			40 dict begin
			background length 0 gt { background sssetbackground gsave clippath fill grestore } if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}
				{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}
						{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{ /theta 89.99 def}
							{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}
							{
								/L1maxX 0 def
								/L2maxX 0 def
							} ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						} ifelse
					} ifelse
				} ifelse
			} if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt { exch } if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			} if
		} if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		newpath
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}
		{
			0
			numsteps
			{
				dup
				subsampling { round cvi } if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			} repeat
			pop
		} ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}
			{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}
				{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}
					{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{ /theta 89.99 def}
						{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}
						{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					} ifelse
				} ifelse
			} ifelse
		} if
		grestore
		grestore
		end
		end
		end
		} ifelse
	} bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where {pop /setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			newpath
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			newpath
		} if
		x1 x2 eq
		{
			y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
		}
		{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
			x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{ pathbbox } stopped
		{ 0 0 0 0 } if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}
		{
			rampdict begin
			20 dict begin
			background length 0 gt { background sssetbackground gsave clippath fill grestore } if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt { exch } if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				} if
			} if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				} if
			} if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling { round cvi } if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			} repeat
			pop
			ext1 {
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				} if
			} if
			grestore
			grestore
			end
			end
			end
		} ifelse
	} bdf
}def
/page_trailer
{
	end
}def
/doc_trailer{
}def
/capture_currentpagedevice {
	//Adobe_AGM_Core/AGMCORE_currentpagedevice currentpagedevice ddf
} def
systemdict /findcolorrendering known{
	/findcolorrendering systemdict /findcolorrendering get def
}if
systemdict /setcolorrendering known{
	/setcolorrendering systemdict /setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup //Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name /MappedCSA xdf}ifelse
} def
/setsepcolor
{ 
	/sep_colorspace_dict AGMCORE_gget begin
		dup /sep_tint exch AGMCORE_gput
		TintProc
	end
} def
/setdevicencolor
{ 
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		} for
		TintProc
	end
} def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2 {AGMCORE_tmp mul NComponents 1 roll} repeat
			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll
				} repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
} def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
} def
/sep_proc_name
{
	dup 0 get 
	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{
		pop [/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
} def
/setsepcolorspace
{ 
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup /sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup () eq exch (All) eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 
		] setcolorspace_opt
		/TintProc {
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get /DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc [
				Components aload pop Name findcmykcustomcolor 
				/exch cvx /setcustomcolor cvx
			] cvx bdf
		}{
 			AGMCORE_host_sep Name (All) eq and{
 				/TintProc { 
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name () eq and{
					/TintProc [
						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{
							cvx /setcmykcolor cvx
						}{
							cvx /setgray cvx
						}ifelse
					] cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc [
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get /DeviceGray eq{
								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx
							}if
							/Name cvx /findcmykcustomcolor cvx /exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load /exec cvx
								/not cvx /and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							] cvx /if cvx
							/setcustomcolor cvx
						] cvx bdf
 					}{ 
						/TintProc {setcolor} bdf
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
} def
/additive_blend
{
  	3 dict begin
  	/numarrays xdf
  	/numcolors xdf
  	0 1 numcolors 1 sub
  		{
  		/c1 xdf
  		1
  		0 1 numarrays 1 sub
  			{
			1 exch add /index cvx
  			c1 /get cvx /mul cvx
  			}for
 		numarrays 1 add 1 /roll cvx 
  		}for
 	numarrays [/pop cvx] cvx /repeat cvx
  	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add /index cvx  
			c1 /get cvx /sub cvx /mul cvx
			}for
		/sub cvx
		numarrays 1 add 1 /roll cvx
		}for
	numarrays [/pop cvx] cvx /repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc [
		/TintTransform cvx /setcolor cvx
	] cvx bdf
	MappedCSA setcolorspace_opt
} bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length {pop} repeat
	end
} bdf
/setdevicencolorspace
{ 
	dup /AliasedColorants known {false}{true}ifelse 
	current_spot_alias and {
		7 dict begin
		/names_index 0 def
		dup /names_len exch /Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup /Names get
		{
			dup map_alias {
				exch pop
				dup /ColorLookup known {
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup /Components known {
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index [null null null null] put
						end
					} ifelse
				} ifelse
				new_names names_index 3 -1 roll /Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup /LookupTables known {
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index [null null null null] put
					end
				} ifelse
			} ifelse
			/names_index names_index 1 add def 
		} forall
		alias_cnt 0 gt {
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge {0 get length}{length}ifelse def
			0 1 names_len 1 sub {
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge {0 get length}{length}ifelse lut_entry_len ne {
					/AliasedColorants false def
					exit
				}
				{
					new_LookupTables names_index get 0 get null eq {
						dup /Names get names_index get /name xdf
						name (Cyan) eq name (Magenta) eq name (Yellow) eq name (Black) eq
						or or or not {
							/AliasedColorants false def
							exit
						} if
					} if
				} ifelse
			} for
			lut_entry_len 1 eq {
				/AliasedColorants false def
			} if
			AliasedColorants {
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq {/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod /Additive eq {/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict /TTTablesIdx known not {
					/TTTablesIdx -1 def
				} if
				end
			} if
		}if
		end
	} if
	dup /devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict /AliasedColorants known {
		AliasedColorants
	}{
		false
	} ifelse
	dup not {
		CSA map_csa
	} if
	/TintTransform load type /nulltype eq or {
		/TintTransform [
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup (Cyan) eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup (Magenta) eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0 /exch cvx 0 0
							}
							{
							(Yellow) eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1 /roll cvx 0
								}
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1 /roll cvx
								} ifelse
							} ifelse
						} ifelse
					5 -1 /roll cvx /astore cvx
					}
					{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx /mul cvx /round cvx /cvi cvx /get cvx
					} ifelse
					Names length TTTablesIdx add 1 add 1 /roll cvx
				} for
			Names length [/pop cvx] cvx /repeat cvx
			NComponents Names length
  			TintMethod /Subtractive eq
  				{
  				subtractive_blend
  				}
  				{
  				additive_blend
  				} ifelse
		] cvx bdf
	} if
	AGMCORE_host_sep {
		Names convert_to_process {
			exec_tint_transform
		}
		{	
			currentdict /AliasedColorants known {
				AliasedColorants not
			}{
				false
			} ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants {
				/currentspotalias current_spot_alias def
				false set_spot_alias
			} if
			Names {
				AGMCORE_is_cmyk_sep {
					dup (Cyan) eq AGMCORE_cyan_plate and exch
					dup (Magenta) eq AGMCORE_magenta_plate and exch
					dup (Yellow) eq AGMCORE_yellow_plate and exch
					(Black) eq AGMCORE_black_plate and or or or {
						/devicen_colorspace_dict AGMCORE_gget /TintProc [
							Names names_index /devn_makecustomcolor cvx
						] cvx ddf
						/painted? true def
					} if
					painted? {exit} if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq {
					/devicen_colorspace_dict AGMCORE_gget /TintProc [
						Names names_index /devn_makecustomcolor cvx
					] cvx ddf
					/painted? true def
					exit
					} if
				} ifelse
				/names_index names_index 1 add def
			} forall
			AvoidAliasedColorants {
				currentspotalias set_spot_alias
			} if
			painted? {
				/devicen_colorspace_dict AGMCORE_gget /names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget /TintProc [
					names_len [/pop cvx] cvx /repeat cvx 1 /setseparationgray cvx
 					0 0 0 0 /setcmykcolor cvx
				] cvx ddf
			} ifelse
			end
		} ifelse
	}
	{
		AGMCORE_in_rip_sep {
			Names convert_to_process not
		}{
			level3
		} ifelse
		{
			[/DeviceN Names MappedCSA /TintTransform load] setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and {
				[
					Names /length cvx [/pop cvx] cvx /repeat cvx
				] cvx bdf
			}{
				{setcolor} bdf
			} ifelse
		}{
			exec_tint_transform
		} ifelse
	} ifelse
	set_crd
	/AliasedColorants false def
	end
} def
/setindexedcolorspace
{
	dup /indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict /CSDBase known {
			CSDBase /CSD get_res begin
			currentdict /Names known {
				currentdict devncs
			}{
				1 currentdict sepcs
			} ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt /Names where {pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal {
					/tableIndex xdf
					Lookup dup type /stringtype eq {
						compCnt tableIndex map_index
					}{
						exec
					} ifelse
					/Names where {
						pop setdevicencolor
					}{
						setsepcolor
					} ifelse
					currentgray
					tableIndex exch
					HiVal mul cvi 
					NewLookup 3 1 roll put
				} for
				[/Indexed currentcolorspace HiVal NewLookup] setcolorspace_opt
				end
			}{
				level3
				{
					currentdict /Names known {
						[/Indexed [/DeviceN Names MappedCSA /TintTransform load] HiVal Lookup] setcolorspace_opt
					}{
						[/Indexed [/Separation Name MappedCSA sep_proc_name load] HiVal Lookup] setcolorspace_opt
					} ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict /Names known {
						Lookup dup type /stringtype eq
							{/exch cvx CSDBase /CSD get_res /Names get length dup /mul cvx exch /getinterval cvx {255 div} /forall cvx}
							{/exec cvx}ifelse
							/TintTransform load /exec cvx
					}{
						Lookup dup type /stringtype eq
							{/exch cvx /get cvx 255 /div cvx}
							{/exec cvx}ifelse
							CSDBase /CSD get_res /MappedCSA get sep_proc_name exch pop /load cvx /exec cvx
					} ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			} ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{
						pop [/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{ 
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval {} forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						} bind
					}{
						Lookup
					}ifelse
				}ifelse
				] setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep {
		/indexed_colorspace_dict AGMCORE_gget dup /CSDBase known { 
			begin
			CSDBase /CSD get_res begin
			currentdict /Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
			end
		}{
			/Lookup get 4 3 -1 roll map_index setcmykcolor
		} ifelse
	}{
		level3 not AGMCORE_in_rip_sep and /indexed_colorspace_dict AGMCORE_gget /CSDBase known and {
			/indexed_colorspace_dict AGMCORE_gget /CSDBase get /CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		} ifelse
	}ifelse
} def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode [0 1] def
		/DataSource <FF> def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict /image get exec
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup /CSD eq {
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	} ifelse
}def
/del_res
{
	{
		aload pop exch
		dup /CSD eq {
			pop 
			{
				//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef
			}forall
		}{
			exch
			{
				1 index undefineresource
			}forall
			pop
		} ifelse
	} forall
}def
/get_res
{
	dup /CSD eq {
		pop
		dup type dup /nametype eq exch /stringtype eq or {
			AGMCORE_CSD_cache exch get
		} if
	}{
		findresource
	} ifelse
}def
/get_csa_by_name
{
	dup type dup /nametype eq exch /stringtype eq or{
		/CSA get_res
	} if
}def
/pattern_buf_init
{
	/count get 0 0 put
} def
/pattern_buf_next
{
	dup /count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
} def
/cachepattern_compress
{
	5 dict begin
	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def
	/patarray 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	patarray 1 array dup 0 1 put /count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq {
			pop
		}{
			patarray dup length 1 sub 3 -1 roll put
		} ifelse
		{string_size}{0}ifelse string
	} /LZWEncode filter def
	{ 		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not {exit} if
	} loop
	LZWFilter closefile
	patarray				
	end
}def
/cachepattern
{
	2 dict begin
	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def
	/patarray 20 dict def
	currentglobal true setglobal 
	patarray 1 array dup 0 1 put /count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		patarray dup length 1 sub 3 -1 roll put
		not {exit} if
	} loop
	patarray dup dup length 1 sub () put					
	end	
}def
/wrap_paintproc
{ 
  statusdict /currentfilenameextend known{
	clonedict
	begin
	/OldPaintProc /PaintProc load def
	/PaintProc
	{
		mark exch
		dup /OldPaintProc get stopped
		{closefile restore end} if
		cleartomark
	}  def
	end
  } {pop} ifelse
} def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index /XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index /YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			  1 index begin
		BBox 0 get XStep div cvi XStep mul /xshift exch neg def
		BBox 1 get YStep div cvi YStep mul /yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[ xshift yshift /translate load null /exec load ] dup
		3 /PaintProc load put cvx /PaintProc exch def
		end
	1 index dup /ID get exch /Pattern add_res
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup /PatternType get 1 eq{
		dup /PaintType get 1 eq{
			currentoverprint sop [/DeviceGray] setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{
		pop
	}{
		setcolorspace
	}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}{null}ifelse
	Intent ne {
		Intent /ColorRendering {findresource} stopped
		{
			pop pop systemdict /findcolorrendering known
			{
				Intent findcolorrendering pop
				/ColorRendering findresource 
				true
			}
			{false} ifelse
		}
		{true} ifelse
		{
			dup begin
			currentdict /TransformPQR known {
				currentdict /TransformPQR get aload pop
				3 {{} eq 3 1 roll} repeat or or
			}
			{true} ifelse
			currentdict /MatrixPQR known {
				currentdict /MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true} ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR [
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add} bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add} bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add} bind
				] def
				/MatrixPQR [ 0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296 ] def
				/RangePQR [-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392] def
				currentdict end
			} if
			setcolorrendering_opt
		} if		
	}if
} def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict /ColorRendering known{
			ColorRendering /ColorRendering {findresource} stopped not {setcolorrendering_opt} if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type /arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process //Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp) flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep) flushinput
	}if
}def
/cpaint_gend
{
	newpath
}def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add} if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0} ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup /Name get map_alias {/CSD put}{pop} ifelse} forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get /CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not {
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put
	} if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		currentdict/TintProc known currentdict/CSA known and 3 1 roll
		//Adobe_AGM_Core begin
		dup /customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			4 -1 roll{
				exch pop /sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
			pop
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd /setpagedevice load def
	/setpagedevice { get_gstate spd set_gstate } def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known{
			currentpagedevice/NegativePrint get //Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<< /NegativePrint //Adobe_AGM_Core/AGMCORE_inverting get >> setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 
		/AGMIRS_&fill where {pop AGMIRS_&fill}{fill} ifelse grestore
	}if
	end
}def
/lw_save_restore_override {
	/md where {
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{} def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage /showpage load def}
		ifelse
		/showpage {orig_showpage gR} def
		end
	}if
}def
/pscript_showpage_override {
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage /restore load def
		/restore {exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where {
		pop
		md /initializepage known {
			md /initializepage {} put
		} if
		md /rC known {
			md /rC {4{pop}repeat} put
		} if
	}if
	/mysetup where {
		/mysetup [1 0 0 1 0 0] put
	}if
	Adobe_AGM_Core /AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core /AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
	/PrepsDict where
		{pop}
		{
		Adobe_AGM_Core /AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core /AGMCORE_Default_PageSize get type /arraytype eq
			{
			Adobe_AGM_Core /AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core /AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core /AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def
	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def
	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) def
end
/set_def_ht
{
	AGMCORE_def_ht sethalftone
} def
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.25 0
%%Copyright: Copyright 1997-2005 Adobe Systems Incorporated.  All Rights Reserved.
%%Version: 2.25 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict /Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{ /Adobe_CoolType_Core userdict /Adobe_CoolType_Core get def }
if
userdict /Adobe_CoolType_Core 60 dict dup begin put
/Adobe_CoolType_Version 2.25 def
/Level2?
	systemdict /languagelevel known dup
		{ pop systemdict /languagelevel get 2 ge }
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal /pop load def
	/gcheck { pop false } bind def
	/currentpacking false def
	/setpacking /pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict /Adobe_CoolType_Data 2 copy known not
	 { 2 copy 10 dict put }
if
get
	 begin
	 /@opStackCountByLevel 32 dict def
	 /@opStackLevel 0 def
	 /@dictStackCountByLevel 32 dict def
	 /@dictStackLevel 0 def
	 end
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup /args
			7 index
			5 add array put
			put get
			}
			{
			get dup /args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch /args exch put
				}
				{ pop }
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{ pop count }
			if
			dup /argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{ pop }
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	} bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{ { pop } repeat }
				{ pop }
			ifelse
			args 0 argCount getinterval {} forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{ { end } repeat }
		{ pop }
	ifelse
	} bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	} bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	} bind def
/@ReRaise
	{
	cvx $error /errorname get errordict exch get exec
	stop
	} bind def
/@Stopped
	{
	0 @#Stopped
	} bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{ @_RestoreStackLevels true }
		{ @_PopStackLevels false }
	ifelse
	} bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	} bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch /@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					 { (*) { pop stop } 128 string /Category resourceforall }
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data /@shouldNotDisappearDict get ne dup
					 {
						  /@shouldNotDisappearDictValue known
								{
										  {
												end
												currentdict 1 index eq
													 { pop exit }
												if
										  }
									 loop
								}
						  if
					 }
				if
				end
		}
		{ false }
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{ /steveamerige /Category resourcestatus }
		stopped
			{ cleartomark true }
			{ cleartomark currentglobal not }
		ifelse
		}
		{ false }
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
				{ cleartomark false }
				{ { 3 2 roll pop true } { cleartomark false } ifelse }
			ifelse
			end
		} bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad /ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup /CMap CTHasResourceStatusBug
						{ CTResourceStatus }
						{ resourcestatus }
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup /CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{ exit }
								{ stop }
							ifelse
							}
						ifelse
						}
						{ pop }
					ifelse
					}
				128 string /CMap resourceforall
				}
			stopped
				{ cleartomark }
			stopped pop
			setglobal
			}
		if
		}
	if
	} bind def
/doc_setup
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mov /moveto load def
		/nfnt /newencodedfont load def
		/mfnt /makefont load def
		/sfnt /setfont load def
		/ufnt /undefinefont load def
		/chp /charpath load def
		/awsh /awidthshow load def
		/wsh /widthshow load def
		/ash /ashow load def
		/sh /show load def
		end
		currentglobal false setglobal
	  userdict /Adobe_CoolType_Data 2 copy known not
		  { 2 copy 10 dict put }
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	} bind def
/doc_trailer
	{
	currentdict Adobe_CoolType_Core eq
		{ end }
	if
	} bind def
/page_setup
	{
	Adobe_CoolType_Core begin
	} bind def
/page_trailer
	{
	end
	} bind def
/unload
	{
	systemdict /languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{ undef }
				{ pop pop }
			ifelse
			}
		if
		}
	if
	} bind def
/ndf
	{
	1 index where
		{ pop pop pop }
		{ dup xcheck { bind } if def }
	ifelse
	} def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where { /globaldict get begin } if
			dup where pop exch get
		/globaldict where { pop end } if
		end
	end
Adobe_CoolType_Core_Defined
	{ /systemfindfont exch def }
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{ pop } ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq { 0 } { dup length } ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index /FID eq
				{ pop pop }
				{ def }
			ifelse
			}
		forall
		dup null eq
			{ pop }
			{ { def } forall }
		ifelse
		currentdict
		end
	exch setglobal
	} bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	} bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index  known
			{ SharedFontDirectory 3 index get /FontReferenced known }
			{ false }
		ifelse
		}
		{
		FontDirectory 3 index known
			{ FontDirectory 3 index get /FontReferenced known }
			{
			SharedFontDirectory 3 index known
				{ SharedFontDirectory 3 index get /FontReferenced known }
				{ false }
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont /FontReferenced get
		2 index dup type /nametype eq
			{findfont}
		if ne
			{ pop false }
		if
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{ 2 copy get 3 index 3 1 roll put }
		for
		pop pop pop
		}
		{
		dup type /nametype eq
		  { findfont }
	  if
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index /FID ne
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type /stringtype eq { cvn } if def dup
			currentdict
			end
		definefont def
		}
	ifelse
	} bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type /dicttype ne
			{ 0 dict }
		if
		currentdict /$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{ def } forall
					{ def } forall
					currentdict
					dup /$Init known
						{ dup /$Init get exec }
					if
					end
				/$Strategy exch def
				}
				{ pop pop pop }
			ifelse
			}
			{ pop pop }
		ifelse
		end
	} bind def
/scff
	{
	$SubstituteFont
		begin
		dup type /stringtype eq
			{ dup length exch }
			{ null }
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{ $sname }
			ifelse def
		end
		{ findfont }
	@Stopped
		{
		dup length 8 add string exch
		1 index 0 (BadFont:) putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{ findfont }
		@Stopped
			{ pop /Courier findfont }
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	} bind def
/isWidthsOnlyFont
	{
	dup /WidthsOnly known
		{ pop pop true }
		{
		dup /FDepVector known
			{ /FDepVector get { isWidthsOnlyFont dup { exit } if } forall }
			{
			dup /FDArray known
				{ /FDArray get { isWidthsOnlyFont dup { exit } if } forall }
				{ pop }
			ifelse
			}
		ifelse
		}
	ifelse
	} bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 4 index def
		/$doSmartSub false def
		end
	3 index
	currentglobal false setglobal exch
	/CompatibleFonts /ProcSet resourcestatus
		{
		pop pop
		/CompatibleFonts /ProcSet findresource
			begin
			dup /CompatibleFont currentexception
			1 index /CompatibleFont true setexception
			1 index /Font resourcestatus
				{
				pop pop
				3 2 roll setglobal
				end
				exch
				dup findfont
				/CompatibleFonts /ProcSet findresource
					begin
					3 1 roll exch /CompatibleFont exch setexception
					end
				}
				{
				3 2 roll setglobal
				1 index exch /CompatibleFont exch setexception
				end
				findfont
				$SubstituteFont /$substituteFound true put
				}
			ifelse
		}
		{ exch setglobal findfont }
	ifelse
	$SubstituteFont
		begin
		$substituteFound
			{
		 false
		 (%%[Using embedded font ) print
		 5 index ?str1 cvs print
		 ( to avoid the font substitution problem noted earlier.]%%\n) print
		 }
			{
			dup /FontName known
				{
				dup /FontName get $fontname eq
				1 index /DistillerFauxFont known not and
				/currentdistillerparams where
					{ pop false 2 index isWidthsOnlyFont not and }
				if
				}
				{ false }
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		exch pop exch pop exch
		2 dict dup /Found 3 index put
		exch findfont exch
		}
		{
		exch exec
		exch dup findfont
		dup /FontType get 3 eq
	  {
		  exch ?str1 cvs
		  dup length 1 sub
		  -1 0
		{
			  exch dup 2 index get 42 eq
			{
				 exch 0 exch getinterval cvn 4 1 roll 3 2 roll pop
				 exit
			  }
			  {exch pop} ifelse
		  }for
		}
		{
		 exch pop
	  } ifelse
		2 dict dup /Downloaded 6 5 roll put
		}
	ifelse
	dup /FontName 4 index put copyfont definefont pop
	} bind def
/?str2 256 string def
/?add
	{
	1 index type /integertype eq
		{ exch true 4 2 }
		{ false 3 1 }
	ifelse
	roll
	1 index findfont
	dup /Widths known
		{
		Adobe_CoolType_Data /AddWidths? true put
		gsave dup 1000 scalefont setfont
		}
	if
	/Downloaded known
		{
		exec
		exch
			{
			exch ?str2 cvs exch
			findfont /Downloaded get 1 dict begin /Downloaded 1 index def ?str1 cvs length
			?str1 1 index 1 add 3 index putinterval
			exch length 1 add 1 index add
			?str1 2 index (*) putinterval
			?str1 0 2 index getinterval cvn findfont 
			?str1 3 index (+) putinterval
			2 dict dup /FontName ?str1 0 6 index getinterval cvn put
			dup /Downloaded Downloaded put end copyfont
			dup /FontName get exch definefont pop pop pop
			}
			{
			pop
			}
		ifelse
		}
		{
		pop
		exch
			{
			findfont
			dup /Found get
			dup length exch ?str1 cvs pop
			?str1 1 index (+) putinterval
			?str1 1 index 1 add 4 index ?str2 cvs putinterval
			?str1 exch 0 exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn
			1 dict exch 1 index exch /FontName exch put copyfont
			dup /FontName get exch definefont pop
			}
			{
			pop
			}
		ifelse
		}
	ifelse
	Adobe_CoolType_Data /AddWidths? get
		{ grestore Adobe_CoolType_Data /AddWidths? false put }
	if
	} bind def
/?sh
	{
	currentfont /Downloaded known { exch } if pop
	} bind def
/?chp
	{
	currentfont /Downloaded known { pop } { false chp } ifelse
	} bind def
/?mv 
	{
	currentfont /Downloaded known { moveto pop pop } { pop pop moveto } ifelse
	} bind def
setpacking
userdict /$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{ get }
			{ pop pop { pop /Courier } bind }
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams /CannotEmbedFontPolicy 2 copy known
			{ get /Error eq }
			{ pop pop false }
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup /WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type /stringtype eq { cvn } if def
								/FontType 3 def
								/FontMatrix [ .001 0 0 .001 0 0 ] def
								/Encoding 256 array dup 0 1 255 { /.notdef put dup } for pop def
								/FontBBox [ 0 0 0 0 ] def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth /y exch def /x exch def
											x y setcharwidth
											$SubstituteFont /$Strategy get /$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									} bind def
								currentdict
								end
							exch setglobal
							} bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup /WMode known
										{ dup /WMode get }
										{ 0 }
									ifelse
									/$WMode exch def
									$fontname exch
									dup /FontName known
										{
										dup /FontName get
										dup type /stringtype eq { cvn } if
										}
										{ /unnamedfont }
									ifelse
									exch
									Adobe_CoolType_Data /InVMDeepCopiedFonts get
									1 index /FontName get known
										{
										pop
										Adobe_CoolType_Data /InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{ $deepcopyfont }
									ifelse
									exch 1 index exch /FontBasedOn exch put
									dup /FontName $fontname dup type /stringtype eq { cvn } if put
									definefont
									Adobe_CoolType_Data /InVMDeepCopiedFonts get
										begin
										dup /FontBasedOn get 1 index def
										end
									} bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{ /y 1000 def }
										{ /x -1000 def 500 120 translate }
									ifelse
									Level2?
										{
										[ /Separation (All) /DeviceCMYK { 0 0 0 1 pop } ]
										setcolorspace
										}
										{ 0 setgray }
									ifelse
									10 setlinewidth
									x .8 mul
									[ 7 3 ]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{ .2 setcolor }
											{ .8 setgray }
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									} bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict /FontName known
											{
											FontName
											dup type /stringtype eq { cvn } if
											}
											{ /unnamedfont }
										ifelse
										def
										/FontName $fontname dup type /stringtype eq { cvn } if def
										/currentdistillerparams where
											{ pop }
											{
											/FontInfo currentdict /FontInfo known
												{ FontInfo null copyfont }
												{ 2 dict }
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[ 1 0 ItalicAngle dup sin exch cos div 1 0 0 ]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									} bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont {} bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type /stringtype eq { cvn } if
						dup /$fontname exch def
						$sname null eq
							{ $str cvs dup length $slen sub $slen getinterval }
							{ pop $sname }
						ifelse
						$fontpat dup 0 (fonts/*) putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont /$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{ /$match exch def exit }
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont /$dstack get
								{
								exch
									{
									1 index eq
										{ pop false }
										{ true }
									ifelse
									}
									{ begin false }
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{ $match (fonts/) anchorsearch pop pop cvn }
							{ /Courier }
						ifelse
						} bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1  [ /Ryumin-Light /HeiseiMin-W3
										  /GothicBBB-Medium /HeiseiKakuGo-W5
										  /HeiseiMaruGo-W4 /Jun101-Light ] def
							/Korea1  [ /HYSMyeongJo-Medium /HYGoThic-Medium ] def
							/GB1	  [ /STSong-Light /STHeiti-Regular ] def
							/CNS1	 [ /MKai-Medium /MHei-Medium ] def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup /FontType get 0 eq
							{
							1 dict dup /FontName /copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup /FontName /copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{ $Strategies /$Type3Underprint get exec }
						ifelse
						} bind def
					/$buildfontname
						{
						dup /CIDFont findresource /CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index (-) putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy (-) putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{ pop pop 3 2 roll putinterval cvn /$cmapname exch def }
							{ pop pop pop pop pop }
						ifelse
						length
						$str 1 index (-) putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						} bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{ get }
								{ pop pop [] }
							ifelse
							}
							{ pop pop [] }
						ifelse
						false exch
							{
							dup /CIDFont resourcestatus
								{
								pop pop
								save
								1 index /CIDFont findresource
								dup /WidthsOnly known
									{ dup /WidthsOnly get }
									{ false }
								ifelse
								exch pop
								exch restore
									{ pop }
									{ exch pop true exit }
								ifelse
								}
								{ pop }
							ifelse
							}
						forall
							{ $str cvs $buildfontname }
							{
							false (*)
								{
								save exch
								dup /CIDFont findresource
								dup /WidthsOnly known
									{ dup /WidthsOnly get not }
									{ true }
								ifelse
								exch /CIDSystemInfo get
								dup /Registry get Registry eq
								exch /Ordering get Ordering eq and and
									{ exch restore exch pop true exit }
									{ pop restore }
								ifelse
								}
							$str /CIDFont resourceforall
								{ $buildfontname }
								{ $fontname $findfontByEnum }
							ifelse
							}
						ifelse
						} bind def
					end
				end
				currentdict /$error known currentdict /languagelevel known and dup
					{ pop $error /SubstituteFont known }
				if
				dup
					{ $error }
					{ Adobe_CoolType_Core }
				ifelse
				begin
					{
					/SubstituteFont
					/CMap /Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{ dup $str cvs dup length $slen sub $slen getinterval cvn }
									{ $sname }
								ifelse
								Adobe_CoolType_Data /InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{ exch pop true exit }
												{ pop }
											ifelse
											}
											{
											FontDirectory 1 index known
												{ exch pop true exit }
												{
												GlobalFontDirectory 1 index known
													{ exch pop true exit }
													{ pop }
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{ pop pop false }
								ifelse
									{
									exch pop exch pop
									}
									{
									dup /CMap resourcestatus
										{
										pop pop
										dup /$cmapname exch def
										/CMap findresource /CIDSystemInfo get { def } forall
										$findfontByROS
										}
										{
										128 string cvs
										dup (-) search
											{
											3 1 roll search
												{
												3 1 roll pop
													{ dup cvi }
												stopped
													{ pop pop pop pop pop $findfontByEnum }
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup /CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup /$cmapname exch def
															/CMap findresource /CIDSystemInfo get { def } forall
															$findfontByROS
															true exit
															}
															{ pop }
														ifelse
														}
													for
													dup type /booleantype eq
														{ pop }
														{ pop pop pop $findfontByEnum }
													ifelse
													}
												ifelse
												}
												{ pop pop pop $findfontByEnum }
											ifelse
											}
											{ pop pop $findfontByEnum }
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{ //SubstituteFont exec }
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{ $findfontByEnum }
								{ //SubstituteFont exec }
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core /scfindfont /systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup /FontName known
								{ dup /FontName get dup 3 index ne }
								{ /noname true }
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def /$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{ 1 index /FID eq { pop pop } { def } ifelse }
										forall
										currentdict
										end
									definefont
									dup /FontName known { dup /FontName get } { null } ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using ) print
										dup /FontName known
											{ dup /FontName get } { (unspecified font) }
										ifelse
										$str cvs print (.\n) print
										}
									if
									}
									{ exch pop }
								ifelse
								}
								{ exch pop }
							ifelse
							end
						} bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core /findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type /stringtype ne { $str cvs } if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{ dup $inVMIndex $AddInVMFont }
						if
						$doSmartSub
							{
							currentdict /$Strategy known
								{ $Strategy /$BuildFont get exec }
							if
							}
						if
						}
					if
					end
				} bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch /FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data /InVMFontsByCMap get exch
		$DictAdd
		}
		{ pop pop pop }
	ifelse
	} bind def
/$DictAdd
	{
	2 copy known not
		{ 2 copy 4 index length dict put }
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get { forall } def
				2 copy currentdict put
				end
			}
			{ pop }
		ifelse
		}
	if
	get
		begin
			{ def }
		forall
		end
	} bind def
end
end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.21 0
%%Copyright: Copyright 1987-2005 Adobe Systems Incorporated.
%%Version: 1.21 0
systemdict /languagelevel known dup
	{ currentglobal false setglobal }
	{ false }
ifelse
exch
userdict /Adobe_CoolType_Utility 2 copy known
	{ 2 copy get dup maxlength 27 add dict copy }
	{ 27 dict }
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		  <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch /eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{ globaldict begin currentglobal true setglobal }
if
	/ct_AddStdCIDMap
		ct_Level2?
			{ {
				mark
				Adobe_CoolType_Utility /@recognizeCIDFont currentdict put
					 {
					 ((Hex) 57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec
					 }
				stopped
					 {
					 cleartomark
					 Adobe_CoolType_Utility /@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						  {
						  2 copy get 3 index eq
								{ 1 index length exch sub 1 sub { end } repeat exit }
								{ pop }
						  ifelse
						  }
					 for
					 pop pop
					 Adobe_CoolType_Utility /@eexecStartData get eexec
					 }
					 { cleartomark }
				ifelse
			} }
			{ {
				Adobe_CoolType_Utility /@eexecStartData get eexec
			} }
		ifelse bind def
userdict /cid_extensions known
dup { cid_extensions /cid_UpdateDB known and } if
	 {
	 cid_extensions
	 begin
	 /cid_GetCIDSystemInfo
		 {
		 1 index type /stringtype eq
			 { exch cvn exch }
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				 {
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					 {
					 1 index load
					 3 index get
					 dup null eq
						  { pop pop cid_UpdateDB }
						  {
						  exch
						  1 index /Created get eq
							  { exch pop exch pop }
							  { pop cid_UpdateDB }
						  ifelse
						  }
					 ifelse
					 }
					 { pop cid_UpdateDB }
				 ifelse
				 }
				 { cid_UpdateDB }
			 ifelse
			 end
		 } bind def
	 end
	 }
if
ct_Level2?
	{ end setglobal }
if
	/ct_UseNativeCapability?  systemdict /composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring () def
		/usewidths? true def
		end def
	ct_Level2? { setglobal } { pop } ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict /languagelevel known
				{ pop /CIDFont findresource /GlyphDirectory get }
				{
				1 index /CIDFont findresource /GlyphDirectory
				get dup type /dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			} def
		/+
			{
			systemdict /languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{ 1 dict begin }
			ifelse
			/$ exch def
			systemdict /languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			? { $ begin } if
			} def
		/? { $ type /dicttype eq } def
		/| {
			userdict /Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data /AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					  begin
						AddWidths?
								{
								Adobe_CoolType_Data /CC 3 index put
								? { def } { $ 3 1 roll put } ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont /Widths get exch CC exch put
								}
								{ ? { def } { $ 3 1 roll put } ifelse }
							ifelse
					end
				end
				}
				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse
				}
				{ ? { def } { $ 3 1 roll put } ifelse }
			ifelse
			} def
		/!
			{
			? { end } if
			systemdict /languagelevel known
				{ gvm setglobal }
			if
			end
			} def
		/: { string currentfile exch readstring pop } executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx [.001 0 0 .001 0 0] def
		/ct_1000Mtx [1000 0 0 1000 0 0] def
		/ct_raise {exch cvx exch errordict exch get exec stop} bind def
		/ct_reraise
			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print
					errordict exch get exec stop
			} bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			} bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility /ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{ dup string /dst_string exch def }
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex  get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string  dst_index 2 index putinterval
						length dst_index add /dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string  dst_index 2 index putinterval
						pop dup dst_index add /dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							  { arrayIndex get }
							  {
							  pop
							  exit
							  }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			} bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{ /unknowninstancename /Category resourcestatus }
			stopped
				{ cleartomark setglobal true }
				{ cleartomark currentglobal not exch setglobal }
			ifelse
				{
					{
					mark 3 1 roll /Category findresource
						begin
						ct_Vars /vm currentglobal put
						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
							{ cleartomark false }
							{ { 3 2 roll pop true } { cleartomark false } ifelse }
						ifelse
						ct_Vars /vm get setglobal
						end
					}
				}
				{ { resourcestatus } }
			ifelse bind def
			/CIDFont /Category ct_resourcestatus
				{ pop pop }
				{
				currentglobal  true setglobal
				/Generic /Category findresource
				dup length dict copy
				dup /InstanceType /dicttype put
				/CIDFont exch /Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit /ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				  /Registry (Adobe) def
				  /Ordering (Identity) def
				  /Supplement 0 def
				end def
				/CMapName /Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000> <FFFF>
				endcodespacerange
				1 begincidrange
				<0000> <FFFF> 0
				endcidrange
				endcmap
				CMapName currentdict /CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont  10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{ pop pop /defineresource /undefined ct_raise }
				ifelse
				} bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{ get 3 1 roll pop pop}
						{ pop pop /findresource /undefinedresource ct_raise }
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/ct_resourcestatus /resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup (Binary) eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{ cid_BYTE_COUNT () /SubFileDecode filter }
							stopped
								{ pop pop pop }
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup (Hex) eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{ null exch /ASCIIHexDecode filter /readstring }
							stopped
								{ pop exch pop (>) exch /readhexstring }
							if
							}
							{ (>) exch /readhexstring }
						ifelse
						load
						exit
						}
					if
					/StartData /typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch /GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop /readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				} bind def
			/StartData
				{
				mark
					{
					currentdict
					dup /FDArray get 0 get /FontMatrix get
					0 get 0.001 eq
						{
						dup /CDevProc known not
							{
							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known
								{ get }
								{
								pop pop
								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }
								}
							ifelse
							def
							}
						if
						}
						{
						 /CDevProc
							 {
							 pop pop pop pop pop
							 0
							 1 cid_temp /cid_CIDFONT get
							 /FDArray get 0 get
							 /FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							 } def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup /cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup /SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup /SubrMapOffset undef
										dup /SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{ pop }
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict /CIDFont defineresource pop
					end end
					}
				stopped
					{ cleartomark /StartData ct_reraise }
				if
				} bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit /ProcSet ct_resourcestatus
				{ true }
				{ /CIDInitC /ProcSet ct_resourcestatus }
			ifelse
				{
				pop pop
				/CIDInit /ProcSet findresource
				ct_UseNativeCapability?
					{ pop null }
					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }
				ifelse
				}
				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }
			ifelse
			ct_Vars exch /ct_oldCIDInit exch put
			} bind def
		/ct_restoreCIDInit
			{
			ct_Vars /ct_oldCIDInit get dup null ne
				{ /CIDInit exch /ProcSet defineresource pop }
				{ pop }
			ifelse
			} bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility /ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{ pop 0 }
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{ get }
								{ pop pop nullstring }
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{ 0 FDBytes ct_cvnsi }
									{ pop 0 }
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{ /charstring nullstring def exit }
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			} def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			} def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont /Widths get cid
					2 copy known
						{ get exch pop aload pop }
						{ pop pop stringwidth }
					ifelse
					}
					{ stringwidth }
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			} def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{ get }
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup /FontMatrix 2 copy known
						{ get }
						{ pop pop ct_defaultFontMtx }
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont /Widths get def
					/CharStrings 1 dict dup /.notdef
						<d841272cf18f54fc13> dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup /CharStrings get 1 index /Encoding get
			ct_dfCharCode get charstring put
			rootfont /WMode 2 copy known
				{ get }
				{ pop pop 0 }
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ ct_str1 show }
			ifelse
			} def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ ct_1000Mtx matrix concatmatrix concat }
				{ pop }
			ifelse
			/Private get
			Adobe_CoolType_Utility /ct_Level2? get not
				{
				ct_dfDict /Private
				3 -1 roll
					{ put }
				1183615869 internaldict /superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility /ct_Level2? get
				{ 1 index }
				{ 3 index /Private get mark 6 1 roll }
			ifelse
			dup /RunInt known
				{ /RunInt get }
				{ pop /CCRun }
			ifelse
			get exec
			Adobe_CoolType_Utility /ct_Level2? get not
				{ cleartomark }
			if
			} bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility /ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{ stop }
			if
			end
			end
			end
			end
			} bind def
		/BaseFontNameStr (BF00) def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/BuildChar /ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString /ct_Type3ShowCharString load def
				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup /lenIV 4 put def
				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def
				/PaintType 0 def
				/ct_ShowCharString /ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{ exit }
				if
				}
			for
			exch pop exch pop
			} bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch /WMode exch def
				exch /FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup /FontMatrix known
				{ dup /FontMatrix get /FontMatrix exch def }
				{ /FontMatrix matrix def }
			ifelse
				/bfCount 1 index /CIDCount get 256 idiv 1 add
					dup 256 gt { pop 256} if def
				/Encoding
					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for
					bfCount 1 255 { 2 copy bfCount put pop } for
					def
				/FDepVector bfCount dup 256 lt { 1 add } if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont /FontBBox known
						{ CIDFont /FontBBox get /FontBBox exch def }
					if
					CIDFont /CDevProc known
						{ CIDFont /CDevProc get /CDevProc exch def }
					if
					currentdict
					end
				BaseFontNameStr 3 (0) putinterval
				0 1 bfCount dup 256 eq { 1 sub } if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup /CIDFirstByte exch 256 mul def
						FontType 3 eq
							{ /ct_FDDict 2 dict def }
						if
						currentdict
						end
					1 index  16
					BaseFontNameStr  2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont /Widths get
						begin
						exch /CIDFont get /GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{ exch pop }
			ifelse
			} bind def
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{
				2 index /CMap ct_resourcestatus
					{ pop pop exch pop }
					{
					/CIDInit /ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch /WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry (Adobe) def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-) search
									{
									pop pop
									(-) search
										{
										dup length string copy
										exch pop exch pop
										}
										{ pop (Identity)}
									ifelse
									}
									{ pop  (Identity)  }
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000> <FFFF>
							endcodespacerange
							1 begincidrange
							<0000> <FFFF> 0
							endcidrange
							endcmap
							CMapName currentdict /CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index /CMap ct_resourcestatus
					{ pop pop }
					{
					/CIDInit /ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry (Adobe) def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-) search
							{
							pop pop
							(-) search
								{ dup length string copy exch pop exch pop }
								{ pop (Identity) }
							ifelse
							}
							{ pop (Identity) }
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000> <FFFF>
					endcodespacerange
					1 begincidrange
					<0000> <FFFF> 0
					endcidrange
					endcmap
					CMapName currentdict /CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		currentdict readonly pop
		end
	end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict /ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
  version
  cvi
  2015
  ge
} bind def
/AllocGlyphStorage
{
  Is2015?
  {	
		pop
  } 
  { 
		{string} forall
  } ifelse
} bind def
/Type42DictBegin
{
	25 dict begin
  /FontName exch def
  /CharStrings 256 dict 
	begin
		  /.notdef 0 def
		  currentdict 
	end def
  /Encoding exch def
  /PaintType 0 def
  /FontType 42 def
  /FontMatrix [1 0 0 1 0 0] def
  4 array  astore cvx /FontBBox exch def
  /sfnts
} bind def
/Type42DictEnd  
{
	 currentdict dup /FontName get exch definefont end
	ct_T42Dict exch
	dup /FontName get exch put
} bind def
/RD {string currentfile exch readstring pop} executeonly def
/PrepFor2015
{
	Is2015?
	{		  
		 /GlyphDirectory 
		 16
		 dict def
		 sfnts 0 get
		 dup
		 2 index
		 (glyx)
		 putinterval
		 2 index  
		 (locx)
		 putinterval
		 pop
		 pop
	}
	{
		 pop
		 pop
	} ifelse			
} bind def
/AddT42Char
{
	Is2015?
	{
		/GlyphDirectory get 
		begin
		def
		end
		pop
		pop
	}
	{
		/sfnts get
		4 index
		get
		3 index
	  2 index
		putinterval
		pop
		pop
		pop
		pop
	} ifelse
} bind def
/T0AddT42Mtx2
{
	/CIDFont findresource /Metrics2 get begin def end
}bind def
end
%%EndResource
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Image 75 dict dup begin put
/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf () def
/AGMIMG_ybuf () def
/AGMIMG_kbuf () def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/doc_setup
{ 
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage /colorimage ldf
	}if
	end
	end
}def
/page_setup
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists {/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				 }ifelse
			 }ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode [ Decode 1 get Decode 0 get] def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode [1 1] def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub} currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{ pop 1 } currenttransfer addprocs settransfer
		}def
	}ifelse
	/img /imageormask ldf
	/sepimg /sep_imageormask ldf
	/devnimg /devn_imageormask ldf
	/idximg /indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/page_trailer
{
	end
}def
/doc_trailer
{
}def
/AGMIMG_flushfilters
{
	dup type /arraytype ne
		{1 array astore}if
	aload length
		{
		dup type /filetype eq
			{
			dup status 1 index currentfile ne and
				{dup flushfile closefile}
				{pop}
			ifelse
			}{pop}ifelse
		} repeat
}def
/imageormask_sys
{
	begin
		save mark
		level2{
			currentdict
			Operator /imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask {
					level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator /imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix /DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix /DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict /_Filters known {_Filters AGMIMG_flushfilters} if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint {
		0 get dup type /nametype eq {
			dup /DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			} forall
			not
		} ifelse
	}{
		pop false
	}ifelse
}def
/process_mask_L3
{
	dup begin
	/ImageType 1 def
	end
	4 dict begin
		/DataDict exch def
		/ImageType 3 def
		/InterleaveType 3 def
		/MaskDict 9 dict begin
			/ImageType 1 def
			/Width DataDict dup /MaskWidth known {/MaskWidth}{/Width} ifelse get def
			/Height DataDict dup /MaskHeight known {/MaskHeight}{/Height} ifelse get def
			/ImageMatrix [Width 0 0 Height neg 0 Height] def
			/NComponents 1 def
			/BitsPerComponent 1 def
			/Decode [0 1] def
			/DataSource AGMIMG_maskSource def
		currentdict end def
	currentdict end
}def
/use_mask
{
	dup type /dicttype eq
	{
		dup /Mask known	{
			dup /Mask get {
				level3
				{true}
				{
					dup /MaskWidth known {dup /MaskWidth get 1 index /Width get eq}{true}ifelse exch
					dup /MaskHeight known {dup /MaskHeight get 1 index /Height get eq}{true}ifelse
					3 -1 roll and
				} ifelse
			}
			{false} ifelse
		}
		{false} ifelse
	}
	{false} ifelse
}def
/make_line_source
{
	begin
	MultipleDataSources {
		[
		Decode length 2 div cvi {Width string} repeat
		]
	}{
		Width Decode length 2 div mul cvi string
	}ifelse
	end
}def
/datasource_to_str
{
	exch dup type
	dup /filetype eq {
		pop exch readstring
	}{
		/arraytype eq {
			exec exch copy
		}{
			pop
		}ifelse
	}ifelse
	pop
}def
/masked_image_simulation
{
	3 dict begin
	dup make_line_source /line_source xdf
	/mask_source AGMIMG_maskSource /LZWDecode filter def
	dup /Width get 8 div ceiling cvi string /mask_str xdf
	begin
	gsave
	0 1 translate 1 -1 Height div scale
	1 1 Height {
		pop
		gsave
		MultipleDataSources {
			0 1 DataSource length 1 sub {
				dup DataSource exch get
				exch line_source exch get
				datasource_to_str
			} for
		}{
			DataSource line_source datasource_to_str
		} ifelse
		<<
			/PatternType 1
			/PaintProc [
				/pop cvx
				<<
					/ImageType 1
					/Width Width
					/Height 1
					/ImageMatrix Width 1.0 sub 1 matrix scale 0.5 0 matrix translate matrix concatmatrix
					/MultipleDataSources MultipleDataSources
					/DataSource line_source
					/BitsPerComponent BitsPerComponent
					/Decode Decode
				>>
				/image cvx
			] cvx
			/BBox [0 0 Width 1]
			/XStep Width
			/YStep 1
			/PaintType 1
			/TilingType 2
		>>
		matrix makepattern set_pattern
		<<
			/ImageType 1
			/Width Width
			/Height 1
			/ImageMatrix Width 1 matrix scale
			/MultipleDataSources false
			/DataSource mask_source mask_str readstring pop
			/BitsPerComponent 1
			/Decode [0 1]
		>>
		imagemask
		grestore
		0 1 translate
	} for
	grestore
	end
	end
}def
/imageormask
{
	begin
		SkipImageProc {
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator /imagemask eq DeviceN_PS2 not and {
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{
						[/Separation /Black /DeviceGray {}] setcolorspace
						/Decode [ Decode 1 get Decode 0 get ] def
					}if
					use_mask {
						level3 {process_mask_L3 image}{masked_image_simulation}ifelse
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not {
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file {
									Names {
										dup (None) ne {
											[/Separation 3 -1 roll /DeviceGray {1 exch sub}] setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq {true setoverprint} if
											/names_index names_index 1 add def
										}{
											pop
										} ifelse
									} forall
									close_image_file
								} if
								grestore
								end
							}{
								Operator /imagemask eq {
									imagemask
								}{
									image
								} ifelse
							} ifelse
						}{
							Operator /imagemask eq {
								imagemask
							}{
								image
							} ifelse
						} ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator /imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix /DataSource load
					/Adobe_AGM_OnHost_Seps where {
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator /colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource [
											DataSource 0 get /exec cvx
											DataSource 1 get /exec cvx
											DataSource 2 get /exec cvx
											DataSource 3 get /exec cvx
											/AGMCORE_get_ink_data cvx
										] cvx def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0 () /SubFileDecode filter def
									}ifelse
									/Decode [ Decode 0 get Decode 1 get ] def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator /image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
  			 							1 AGMCORE_&setgray
  			 							currentdict imageormask_sys
  			 						}{
  			 							currentdict ignoreimagedata
  			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator /image eq{
							AGMCORE_host_sep{
								/DoImage true def
								HostSepColorImage{
									invert_image_samples
								}{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}ifelse
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys} if
							}{
								use_mask {
									level3 {process_mask_L3 image}{masked_image_simulation}ifelse
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict /_Filters known {_Filters AGMIMG_flushfilters} if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	SkipImageProc {
		currentdict consumeimagedata
	}
	{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get /DeviceCMYK eq and
		currentdict/Components known and 
		Name () ne and 
		Name (All) ne and 
		Operator /image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load /exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			} /exec cvx
			] cvx bind
			MappedCSA 0 get /DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{ 
					currentdict
					Operator /imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name (All) ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator /imagemask eq{
 											/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									[ /Separation Name [/DeviceGray]
	 									{ 
	 										sep_colorspace_proc AGMCORE_get_ink_data
											1 exch sub
	 									} bind
										] AGMCORE_&setcolorspace
										/sep_tint AGMCORE_gget AGMCORE_&setcolor
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator /imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name (All) eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					currentcolorspace 0 get /Separation ne{
						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentoverprint 
					MappedCSA 0 get /DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					Name inRip_spot_has_ink not and 
					Name (All) ne and {
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if
	end
	end
}def
/decode_image_sample
{
	4 1 roll exch dup 5 1 roll
	sub 2 4 -1 roll exp 1 sub div mul add
} bdf
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
} bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub {
			dup currentdict /dataSource get /exch cvx /get cvx /exec cvx
			/exch cvx names_index /ne cvx [ /pop cvx ] cvx /if cvx
		} for
	] cvx bind
	end
} bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources {origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0 () /SubFileDecode filter
				BitsPerComponent 8 idiv string /readstring cvx /pop cvx /putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0 () /SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv {DataSource /read cvx /not cvx{0}/if cvx /mul cvx}repeat /mul cvx /add cvx
			}for
		/convProc load /exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2 /add cvx /index cvx
			3 1 /roll cvx /exch cvx 255 /mul cvx /cvi cvx /put cvx
			}for
	]bind cvx 0 () /SubFileDecode filter
	end
} bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs [ 3 -1 roll begin
		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt {1 add 2 div cvi}{exit}ifelse
			} loop
			string
		} repeat
		end ] def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	SkipImageProc {
		currentdict consumeimagedata
	}
	{
		save mark 
		AGMCORE_producing_seps not {
			level3 not {
				Operator /imagemask ne {
					/DataSource [ [
						DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
						colorSpaceElemCnt /devicen_colorspace_dict AGMCORE_gget /TintTransform get 
						devn_alt_datasource 1 /string cvx /readstring cvx /pop cvx] cvx colorSpaceElemCnt 1 sub{dup}repeat] def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def
				} if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process {
					CSA get_csa_by_name 0 get /DeviceCMYK eq {
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
							4 /devicen_colorspace_dict AGMCORE_gget /TintTransform get 
							devn_alt_datasource
						filter_cmyk 0 () /SubFileDecode filter def
						/MultipleDataSources false def
						/Decode [1 0] def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate {
							/DataSource
								DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
								CSA get_csa_by_name 0 get /DeviceRGB eq{3}{1}ifelse /devicen_colorspace_dict AGMCORE_gget /TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def
				 			currentdict imageormask_sys
				 		}
						{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						} ifelse
 					} ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget /names_index known {
	 					Operator/imagemask ne{
	 						MultipleDataSources {
		 						/DataSource [ DataSource devn_sep_datasource /exec cvx ] cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource /DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						} ifelse
							invert_image_samples
	 					} if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{ 			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN [
				AGMIMG_c 0 ne {/Cyan} if
				AGMIMG_m 0 ne {/Magenta} if
				AGMIMG_y 0 ne {/Yellow} if
				AGMIMG_k 0 ne {/Black} if
				] /DeviceCMYK {}] setcolorspace
				AGMIMG_c 0 ne {AGMIMG_c} if
				AGMIMG_m 0 ne {AGMIMG_m} if
				AGMIMG_y 0 ne {AGMIMG_y} if
				AGMIMG_k 0 ne {AGMIMG_k} if
				setcolor			
			}{	
				/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
				[/Indexed 				
					[
						/DeviceN [
							AGMIMG_c 0 ne {/Cyan} if
							AGMIMG_m 0 ne {/Magenta} if
							AGMIMG_y 0 ne {/Yellow} if
							AGMIMG_k 0 ne {/Black} if
						] 
						/DeviceCMYK {
							AGMIMG_k 0 eq {0} if
							AGMIMG_y 0 eq {0 exch} if
							AGMIMG_m 0 eq {0 3 1 roll} if
							AGMIMG_c 0 eq {0 4 1 roll} if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				] setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation /Black /DeviceGray {}] setcolorspace
			gsave
			/Black
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Yellow /DeviceGray {}] setcolorspace
			gsave
			/Yellow
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Magenta /DeviceGray {}] setcolorspace
			gsave
			/Magenta
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Cyan /DeviceGray {}] setcolorspace
			gsave
			/Cyan 
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		} if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
} def
/indexed_imageormask
{
	begin
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup /CSA known {
					/CSA get get_csa_by_name
				}{
					/Names get
				} ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN {
					/devicen_colorspace_dict AGMCORE_gget /names_index known {
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					} ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator /imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN {
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget begin
					CSA get_csa_by_name 0 get /DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and {
						[/Indexed [/DeviceN [/Cyan /Magenta /Yellow /Black] /DeviceCMYK {}] HiVal Lookup]
						setcolorspace
					} if
					end
				} ifelse
				imageormask
				Indexed_DeviceN {
					end
				} if
			}{ 
				Operator /imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not {
			currentcolorspace 
			dup 1 /DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		} if
		currentdict 
		Operator /imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask {
				level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
  /OPIimage
  {
  	dup type /dicttype ne{
  		10 dict begin
  			/DataSource xdf
  			/ImageMatrix xdf
  			/BitsPerComponent xdf
  			/Height xdf
  			/Width xdf
  			/ImageType 1 def
  			/Decode [0 1 def]
  			currentdict
  		end
  	}if
  	dup begin
  		/NComponents 1 cdndf
  		/MultipleDataSources false cdndf
  		/SkipImageProc {false} cdndf
  		/HostSepColorImage false cdndf
  		/Decode [
  				0 
  				currentcolorspace 0 get /Indexed eq{
  					2 BitsPerComponent exp 1 sub
  				}{
  					1
  				}ifelse
  		] cdndf
  		/Operator /image cdndf
  	end
  	/sep_colorspace_dict AGMCORE_gget null eq{
  		imageormask
  	}{
  		gsave
  		dup begin invert_image_samples end
  		sep_imageormask
  		grestore
  	}ifelse
  }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter /WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0 (%EndMask) /SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not {exit} if
	}loop
	WriteFilter closefile
	end
}def
/cachemask_level3
{
	currentfile
	<<
		/Filter [ /SubFileDecode /ASCII85Decode /RunLengthDecode ]
		/DecodeParms [ << /EODCount 0 /EODString (%EndMask) >> null null ]
		/Intent 1
	>>
	/ReusableStreamDecode filter
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type /dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode [/customcolor_tint AGMCORE_gget 0] def
				/Operator /image def
				/HostSepColorImage false def
				/SkipImageProc {false} def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA [ /DeviceCMYK ] 
			/TintMethod /Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components [ AGMIMG_colorAry aload pop pop ] 
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			AGMIMG_&customcolorimage
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt /AGMIMG_xSign? exch def /AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch
		AGMIMG_xSign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch
		itransform /AGMIMG_llY exch def /AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch
		AGMIMG_xSign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch
		itransform /AGMIMG_urY exch def /AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub  AGMIMG_llX AGMIMG_llY] concat
	}{
	}ifelse
	end
} def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					} if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage	
		end
	} def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				} currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get /DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer
						currentdict imageormask
					}{ 
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get /DeviceGray eq {
						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get /DeviceCMYK eq {
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{ 
							currentcolortransfer
							{pop 1} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{ 
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get /DeviceGray eq {
					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get /DeviceCMYK eq {
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{ 
						currentcolortransfer
						{pop 1} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div} exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/doc_setup get exec
Adobe_CoolType_Core/doc_setup get exec
Adobe_AGM_Image/doc_setup get exec
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1.1-111">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:creator>
            <rdf:Seq>
               <rdf:li/>
            </rdf:Seq>
         </dc:creator>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Quiz_Jeopardy</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS2</xap:CreatorTool>
         <xap:CreateDate>2007-04-12T11:11:29+02:00</xap:CreateDate>
         <xap:ModifyDate>2007-04-12T11:11:29+02:00</xap:ModifyDate>
         <xap:MetadataDate>2007-04-12T11:11:29+02:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>168</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAqAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A7qn2R8hkYfSEy5rskh2K&#xA;uxV2KuxV2KuxV2KuxVK/M2v23l/QrvWLmN5oLRVZ44qczycJtyIHVsjOfCLTEWaY1Y/mnbXtutxB&#xA;o94Y33FfS/5rzUZO3MEDRtzI6CZFhEf8rFX/AKs1598X/NWQ/wBEGn82X8nZHf8AKxV/6s1598X/&#xA;ADVj/og0/mv8nZG/+ViV/wClNef8kv8AmrD/AC/g80fyfkaP5igddGvP+SX/ADVg/l/B5p/k/IuX&#xA;8wuQqNHu/vi/5qyQ7dwHvQdBkDbfmDQVOj3f3xf81YT27gHegaDItX8xAxoNGvPvi/5qyI7fwHvS&#xA;ez8i/wDx+f8Aqz3f3xf81ZL+XMHmj8jNY35iBTQ6PeffF/zVkT2/gHekdn5GR6RqI1LTor0Qvb+r&#xA;y/cyU5LxYrvxJG9K5tNNqI5oCceR/scXLjMJcJ5o3L2t2KuxV2KuxV2KuxV2KuxV2KrU+wvyGRhy&#xA;CZc12SQ7FXYq7FXYq7FXYq7FXYqw/wDN3/yXWs/6kX/J+PKdR9BZ4/qDGPJQH6Atv9UZ5nrv70vU&#xA;af6Qn3Fcwm5fHGCCQAT0GWQiWJLbeojCp/piTIFQAVcojqKjY5fVhhyQ28bEDtmPZiWzm5mLdemA&#xA;yJUABUt4x9o/IZZij1YyKsQoFT0y62CEejMT45iyNltAZVoq8dMhH+t/xM56N2EP8Dh8f90Xm9f/&#xA;AH0vh9yOzbuG7FXYq7FXYq7FXYq7FXYq7FUun8w6BakR3Wp2kDgbpLPGh+5mGY2PVYiBUo/MNssU&#xA;75FSHm3yoemtWH/STD/zVlnj4/5w+bHw5dxd/izyr/1ebH/pJh/5qx8eH84fNfDl3F3+LvKn/V6s&#xA;P+kmH/mrB+Yx/wA6PzC+HLuLv8XeVP8Aq9WH/STD/wA1Y/mMf86PzC+HLuLv8XeVP+r1Yf8ASTD/&#xA;AM1Y/mMf86PzC+HLuLv8W+VOv6asKf8AMTD/AM1YfHx/zh818OXcXf4u8qf9Xqw/6SYf+asH5jH/&#xA;ADo/ML4cu4u/xd5U/wCr1Yf9JMP/ADVj+Yx/zo/ML4cu4uHm3yoemtWH/STD/wA1YfHx/wA4fNfD&#xA;l3FBa1qnkbWdMn0zUNWspLO5AEqC7jUkKwYbq4PVcjLLjkKMh81EJDoUBZQ/lxY2629tqtokSbKv&#xA;11D+t81mTsvRTNmv9N+1y46rOBQ+5X+teQP+rzaf9Jsf/NeV/wAkaDy/037WX5zUfgLlvvIS9NZt&#xA;P+k2P/mvCOytCO7/AE37UHV5z/Y5r3yE9K6zaH/o9j/5rxPZWhPd/pv2qNXnH9i4X3kUCn6ZtKD/&#xA;AJfI/wDmvJfyXovL/TftR+az/gLDd+QSanWbSp/5fY/+a8geydCe7/TftT+bz/gO+s+Qf+rxaf8A&#xA;SbH/AM14/wAkaHy/037U/nM/4C/695FA/wCOzaAD/l8j/wCa8n/Jei8v9N+1j+az/gLWvvIbCh1m&#xA;0p/zGx/814D2XoT3f6b9qRqs/wCAt+teQP8Aq82n/SbH/wA15H+SNB5f6b9qfzmo/ATC28y+ULeB&#xA;YYtaseCVpW6iJ3NevLNnp/BxQEIEcI83Fycc5cRBtV/xd5U/6vVh/wBJMP8AzVlv5jH/ADo/MMPD&#xA;l3F3+LvKn/V6sP8ApJh/5qx/MY/50fmF8OXcXf4u8qf9Xqw/6SYf+asfzGP+dH5hfDl3F3+LvKn/&#xA;AFerD/pJh/5qx/MY/wCdH5hfDl3F3+LfKv8A1ebH/pJh/wCasPj4/wCcPmvhy7i4+bfKg661Y/8A&#xA;STD/AM1Y+Pj/AJw+a+HLuLv8XeVP+r1Yf9JMP/NWD8xj/nR+YXw5dxd/i7yp/wBXqw/6SYf+asfz&#xA;GP8AnR+YXw5dxd/i7yp/1erD/pJh/wCasfzGP+dH5hfDl3F3+LvKn/V6sP8ApJh/5qx/MY/50fmF&#xA;8OXcUh1PS7C4kkeaFXbkaEj3zzfLkMbovTQiDSDg0HSi/wDvMnTwyrHnnfNlKEaV/wBAaT/yzJ92&#xA;X+NPva+AIQ6FpVT/AKOn3ZinPPvbvDDX6C0r/lnT7sfHn3r4cXfoLSv+WdPux8efevhxRDeXdLPF&#xA;RbIB3NMuOSewtgIxcfLWkU2t1r8hh4pd5RQ7lFtA0tWINum3tlJzTB5sxCK6HQtK9QD6sm/thhnn&#xA;fNEscaRH6A0n/lmT7syPGn3tfAHHy/pJ/wCPZPux8aXevAEIdB0oEj6um3tmKc8+9u4ItfoLSv8A&#xA;lnT7sfHn3r4cVeDy/pNCxtk9tstx5Z87YSgFsmjaSdltkp40yM9VM8ikYgpfoLSv+WdPuyHjz72X&#xA;hxVrfQdJLGtsnTwyzFnnfNhOAWSaLpTNtbJQdNsjLUzPVkMUVn6C0r/lnT7sj48+9Phxd+gtK/5Z&#xA;0+7Hx596+HFUTy/prK1LZPuyUc2QjmxMIqf6C0r/AJZ0+7I+PPvZeHF36C0r/lnT7sfHn3r4cXfo&#xA;LSv+WdPux8efevhxbGgaWSB9XTf2xGaZ6rwRRDaHo8a0+rJXsKZedRKI5tYxgodtD0tjU26fdlB1&#xA;Ez1ZjHFr9BaV/wAs6fdj48+9Phxd+gtK/wCWdPux8efevhxd+gtK/wCWdPux8efevhxd+gtK/wCW&#xA;dPux8efevhxTW4JMz1NfiP68GT6j71jyVYY+K1PU5ZCFBjItyvxX3PTDM0EAIWmY9NrqY0rqY0qM&#xA;U8lB8cyhuGkt4aVDT0MnyzHyc2yPJqIfvBggN0y5IrMmmp2NKhHHxt8zmLIbtoW0wUlU5fuePvv8&#xA;snfppj1U6ZCmTqY0q+NuLV7d8lE0UHdaQK7dO2RpLVMaV1MaVcrMtaGleuEEhC2mCkupjSupjSrl&#xA;2YHwwjYoLcu7k/dhnzUcllMjSXUxpV4RQAW79AMlwgc0WuT0SaFaV98lHhPRibXtbqfs7HJHEOiB&#xA;NcY+Vy9egYn8clw3M+9b2XSOF9z4ZKUqYgWhzUmp65Qd2xqmCkupjSupjSrlZl6fdkokhBFrjK5H&#xA;YZIzKOEKdMrpkrQR9W+gZdjj1YSKtTLaYNN8Kk+GA7BIQlMxabXUxpUQkCcRUVJy+OMU1mSi6cWI&#xA;8MplGizBW0wUlWhiUjkRXwy3HAc2EiukhUqSBQjwyU4CkCSHplFNjqY0rqY0rqY0rqY0rqY0q+OM&#xA;M1D0yUI2WJNKkkKhSQKEZZPGKQJKFMppm6mNKivTUmpFa5k8AarQ8iBXIHTKJRotgOyKA2zJDU0N&#xA;p5R4k/rwfxFPQKBBJqepyks2qYKV1MaV1MaV1MaV1MaV1MaVckZZqYYxsoJRQUAUHQZkgNdupjSo&#xA;eVuRoOgyiZtnEKdMhTJ1MaVUVpAKDfJglBAaMch3IODgK2FpUjqKYOFNqkThRQ9MnCVMZBdJIpUh&#xA;e+SlPbZAChTKaZupjSupjSupjSupjSupjStrVTUdcI2Ur3kZhToMlKRKAFOmQpLqY0q8O4FAdskJ&#xA;EIp0cZd9+nU4YxsqTSJIAFTl7WtaNjO5XajHf6cjKJMjXekHZY8TLufvyEoEJEllMjSbdTGlt1Ma&#xA;W3UxpbdTGlt1MaW0RDHRa9zl8I0GEivNAKnpkyxUJHLbDZcolK2wClOmQpNupjS2uRATv0G5yUY2&#xA;pLZZ+w4r2phJKF0cjVAbcHJRkeqCFYoCKEVGWmNsLQ8kfFqdu2Y8oUWwG1lMjSbbCkmgwiK2u9E8&#xA;SQa06jJcCOJZTIUm3UxpbdTGlt1MaW3UxpbdTGlt1MaW3UxpbdTGltEooRN9u5zIjGg1k2VKRy2w&#xA;2XKpStmBSKAHNx35H9eZPU+9q6LZQOBHj0wT5JioKhJoMpEbZ2vENa0O47EUyQx2jiWcchSba440&#xA;tqiIp4ilSeoycYhBK1kAeg6VwGO6QUQQAK9hl9Nag1XanbsMpNyLMbNrCCSKkEeIxGO14lhShp4Z&#xA;ExTbXHBS2qwqDyB75ZjDGRViopv0y0hjaFC77Zj02WiuOZNNalOv2fpyrIGUSo8cqplbYBBqOuEB&#xA;VQninizbnJnYe9ipccrplbuONLbuONLbuONLbuONLbuONLbuONLbuONLbuONLapLuF8KZZPogKfH&#xA;K6TaIlX96/8ArH9eXzHqLAclpWvXIUlwBBqOuEClVR8K8m3ZssGwtio8cqplbuONLa9FYKxA+nJR&#xA;BQVnHI0lWlFUFOhy2fJhHmpAEGo65WAzVUFAZG6nYZZHvLE9ykRUk+OVkWya44KW2wtDUYaVslyK&#xA;E7YSShdFFVq9hhhDdZFX45dTC0PL8TbdBlM9yzCzjkKTbuONLa5lXan05IgIBW8cjSbdxxpbdxxp&#xA;bXLEKcm2H68kIdSglcGUdEGGx3LSohVtqUPhlkSCxOzmgQ9qfLE4wVElF4ipofvyowpmC0EqaDBw&#xA;rap9WNOv0ZPwmPEplKGmV8LK1eVf3r/6x/Xl8x6iwidlnHI0m3ccaW17xkAE+GSlBAKzjkaTbuON&#xA;LbdCNvHrjStccaW137HE/RkulIW8cjSbXtG3EE9MkYmkAtLHX5DAIqS3QA0KCmGq6IXtApG2xyZx&#xA;hAkpBKmmVcLO0QsYVaZeI01kqUjV2HTucrkWQCnxyFMrdxxpbdxxpbdxxpbb9M+GPCttcMeFbdwx&#xA;4VtXMNSK/ZA2y047YcSx4ABUZGWOkiSxVowORA3SUTxy+mFrJUqnyyM47JBUVFGB8MqApkVfklK1&#xA;y2wxpQYVJPjlJDJXlX94/wAz+vL5jcsAdlvHI0m3ccaW3ccaW2xGO5ph4VtswkCo3GE40cS3jkaT&#xA;baxljQYRG1JVRAnffLBjDHiWvBQVH3ZGWNIksoaU7ZGktx0U79DhjsgtvRyABhluo2VeIA+WWUxt&#xA;RRf3gyqI3ZE7LpevEdO+GfcoU+OQpNu440tu440tu440tr0iJFR18cnGCCWxzV6HfEWCq6SIFSab&#xA;jJyhaAVHjlNMrV1Kke+XDdgVslONBuTglySFNUqwGViO7IlEccvprtbIvwHIyGyQoccppnbuONLb&#xA;uONLaIkT943zP68vmNywB2W8Mjwpt3DHhW3cMeFbX7cKU3yXRiv4cY9/DJ1QRe6jwyrhZ2qRJucn&#xA;AMZFU45ZTG3FdsSFtD8Mo4Wy3cMeFbVI4x9o5OEerElpzXYdMZG1CwLQ1yFJttlBNRhIUFrhg4U2&#xA;7hjwrbuGPCtu4Y8K2uUlRSm2SBpBbVCz1wgWUE0vcUU5OQ2QCo8Mp4Wdu4Y8K27hjwrapHFTf7ss&#xA;hBgZKnHJ0i1KTc0HQZXLdkFnDIcLK3cMeFbdwx4VtESJ+8b5n9eZEo7lrB2W8Mjwpt3DHhW3cMeF&#xA;bXIg5CuGMd0EuYFjiRahbwwcKbbAINRhApCoGXJ2xppzUUGApCnwyHCyt3DHhW11Pgp74a2Qt4YO&#xA;FNr44wTv2yUYMSV5iUjplhgi1MR7nwHU5VwMrdRB2r88NBC8IjdskIgotpoB2+7AcaRJT4ZDhTaq&#xA;FCr7nLAKDG7U2BJqcgRbINcMHCm3cMeFbXLHU4RC0EqvHLeFham5rsOmQkyCzhkOFlbuGPCtu4Y8&#xA;K27hjwraKeNubbdzmRKG7UDstMZHUZHhTbXDHhW3cMeFbXJHU74YxUlpo6HbExUFrhg4Vt3DHhW3&#xA;cMeFbdwx4Vt3DHhW3cMeFbVVjHHplgiKYkqZTc0yBiyttQQcQKUriR2GTti5Y6r9O+AQsJJc0IpU&#xA;DEwCiS1FPLBGO6SVXhlnCwtSdPiOVSjuzBcVJA9sSFtbwwcK27hjwrbuGPCtqkadcnCKCWnBJoOm&#xA;CShZwyPCm3cMeFbdwx4Vt3DHhW3cMeFbRbhg7fM5kkG2sLgtRkgEWseKm4yMoJBW8Mjwpt3DHhW3&#xA;cMeFbdwx4Vt3DHhW3cMeFbdwx4Vt3DHhW3cMeFbdwx4Vt3DHhW3cMeFbdwx4VttRT5YRsgttuKYS&#xA;rkj3rjGKkr+GT4WNqbLVsrI3ZAr+Ap7ZOkWp8Mr4WVu4Y8K27hjwra5FofnhiEErSm+DhTbuGPCt&#xA;u4Y8K27hjwrbuGPCtu4Y8K2ipU+M5kzju1Atqm2ERUlzpt0xMVBWenkOFNu9PHhW3enjwrbvTx4V&#xA;t3p48K2708eFbd6ePCtu9PHhW3enjwrbvTx4Vt3p48K2708eFbd6ePCtu9PHhW3en7Y8K2qCMAUp&#xA;kxFja1h2GAhIW+nkeFNu9PHhW3enjwrbvTx4Vt3p48K22Iq4RBbcYaY8C8TXp4OFbd6ePCtu9PHh&#xA;W3enjwrbvTx4VtEmOrH55kGG7Xa/0xkuFFrGSuRMUgteng4Vt3p48K22IcPAvE36Iw+GvE70Vx4F&#xA;4neiMeBeJr0cHhrxNelg4Ft3p48K2708eFbd6ePCtu9PHhW3enjwrbvTx4VttY98IipLbL2GEhbW&#xA;+nkeFbd6ePCtu9PHhW3enjwrbvTx4Vt3p48K2vWMUyYii2+GPCtqfp5DhTbvTx4Vtv0wMPCttiNT&#xA;2w8IW2jD4YDBeJFenucyeFqtopgITbXp+2DhW3en7Y8K236dO2HhW2uBwUtu4HHhW2+J8MNLbfDD&#xA;wot3DHhW3enjwrbRiwGCeJr0/bBwrbvT9seFbd6ftjwrbvT9seFbd6ftjwrbYTCIrbXp4OFbd6ft&#xA;jwrbvT9seFbd6ftjwrbvT9seFbd6ftjwrbvT9seFbcEIx4VtvifDDS216ftg4Vtwj36YiK2u9IeG&#xA;S4EcS0R75ERTa7hkuFFogx5eYsLa9PBwrbvTx4VtsR4eFba9PBwrbvT9seFbd6ePCtu9PHhW2xHh&#xA;EVt3p48KLd6ePCtu9PHhW3eng4U24R4eFba9PBwrbvTx4Vt3p48K270seBbb9LHgW2vTx4Vt3p48&#xA;K2708eFbd6ePCtu9PHhW3enjwrbvTx4Vt3p48K2708eFbd6ePCtu9PHhW2xHjwrbvTw8KLRHAZfw&#xA;sLdwGPCtu4DHhW3cBjwrbuAx4Vt3AY8K27gMeFbdwGPCtu4DHhW3cBjwrbuAx4Vt3AY8K27gMeFb&#xA;dwGPCtu4DHhW3cBjwrbuAx4Vt3AY8K27gMeFbdwGPCtu4DHhW3cBjwrbuAx4Vt3AY8K27gMeFbdw&#xA;GPCtu4DHhW3cBjwrbuAx4Vt3AY8K27gMeFbdwGPCtv8A/9k=</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:957451B6D5E8DB11BEABEC7FCA19B52D</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:967451B6D5E8DB11BEABEC7FCA19B52D</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:947451B6D5E8DB11BEABEC7FCA19B52D</stRef:instanceID>
            <stRef:documentID>uuid:937451B6D5E8DB11BEABEC7FCA19B52D</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Keywords/>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5
%AI12_RMC_Transparency: Balance=100 RasterRes=1200 GradRes=300 Text=0 Stroke=0 Clip=1 OP=0
Adobe_AGM_Utils begin
Adobe_AGM_Core/page_setup get exec
Adobe_AGM_Core/capture_currentpagedevice get exec
Adobe_CoolType_Core/page_setup get exec
Adobe_AGM_Image/page_setup get exec
%%EndPageSetup
Adobe_AGM_Core/AGMCORE_save save ddf
1 -1 scale 0 -305 translate
[1 0 0 1 0 0 ]  concat
% page clip
gsave
newpath
gsave % PSGState
0 0 mo
0 305 li
473.5 305 li
473.5 0 li
cp
clp
[1 0 0 1 0 0 ] concat
473.373 305.001 mo
456.579 305.001 li
458.829 303.03 460.692 301.41 462.15 300.15 cv
464.211 298.368 465.804 296.928 466.947 295.839 cv
468.09 294.741 468.963 293.76 469.557 292.896 cv
470.142 292.023 470.853 290.952 471.681 289.674 cv
472.341 288.585 472.903 287.427 473.373 286.223 cv
473.373 305.001 li
442.881 305.001 mo
277.551 305.001 li
278.568 303.264 279.09 301.257 279.09 298.962 cv
279.09 295.623 277.956 292.824 275.697 290.556 cv
273.438 288.297 270.738 287.163 267.615 287.163 cv
264.276 287.163 261.477 288.297 259.209 290.556 cv
256.95 292.824 255.816 295.569 255.816 298.8 cv
255.816 301.149 256.392 303.21 257.508 305.001 cv
198.792 305.001 li
199.08 304.704 199.395 304.407 199.737 304.101 cv
201.438 302.607 202.761 301.455 203.715 300.627 cv
204.669 299.799 205.416 299.133 205.947 298.62 cv
206.478 298.107 206.883 297.657 207.153 297.252 cv
207.432 296.847 207.756 296.352 208.143 295.758 cv
209.205 294.012 209.736 291.978 209.736 289.638 cv
209.736 286.587 208.71 284.184 206.676 282.447 cv
204.642 280.701 201.816 279.828 198.216 279.828 cv
196.299 279.828 194.697 279.999 193.41 280.341 cv
192.114 280.683 190.917 281.277 189.81 282.123 cv
188.793 282.933 188.001 283.923 187.425 285.084 cv
186.849 286.254 186.561 287.478 186.561 288.747 cv
186.561 290.196 187.002 291.375 187.875 292.284 cv
188.748 293.193 189.873 293.652 191.232 293.652 cv
192.456 293.652 193.446 293.292 194.193 292.572 cv
194.931 291.852 195.3 290.898 195.3 289.701 cv
195.3 288.558 194.985 287.667 194.346 287.028 cv
193.707 286.389 192.825 286.074 191.673 286.074 cv
190.611 286.074 189.828 286.479 189.315 287.289 cv
189.108 287.667 188.946 287.91 188.838 288.018 cv
188.73 288.126 188.613 288.18 188.487 288.18 cv
188.28 288.18 188.172 287.982 188.172 287.604 cv
188.172 285.903 188.784 284.481 190.017 283.338 cv
191.25 282.186 192.771 281.619 194.598 281.619 cv
196.677 281.619 198.261 282.267 199.368 283.563 cv
200.475 284.859 201.024 286.713 201.024 289.134 cv
201.024 289.935 200.97 290.664 200.862 291.294 cv
200.754 291.933 200.556 292.617 200.259 293.337 cv
199.962 294.057 199.53 294.885 198.981 295.821 cv
198.423 296.757 197.685 297.918 196.749 299.322 cv
195.723 300.897 194.976 302.274 194.517 303.462 cv
194.31 303.984 194.157 304.497 194.04 305.001 cv
183.384 305.001 li
181.422 291.69 175.59 280.881 165.87 272.601 cv
153.693 262.224 136.827 257.031 115.263 257.031 cv
103.851 257.031 94.275 258.039 86.535 260.055 cv
78.795 262.071 71.631 265.599 65.034 270.648 cv
58.95 275.472 54.189 281.367 50.769 288.351 cv
48.132 293.715 46.521 299.268 45.918 305.001 cv
12.645 305.001 li
11.871 304.821 11.061 304.722 10.215 304.722 cv
9.315 304.722 8.46 304.821 7.641 305.001 cv
.504 305.001 li
.504 55.494 li
.504 60.975 li
1.008 61.038 1.521 61.083 2.061 61.083 cv
4.914 61.083 7.209 60.246 8.928 58.572 cv
9.83387 57.6944 10.4993 56.6684 10.928 55.494 cv
24.4729 55.494 li
24.4663 55.5359 24.4599 55.5784 24.453 55.62 cv
24.201 57.096 23.733 58.671 23.049 60.345 cv
22.356 62.019 21.366 63.936 20.088 66.096 cv
18.81 68.265 17.082 70.974 14.913 74.223 cv
12.546 77.859 10.827 81.063 9.738 83.817 cv
8.658 86.571 8.118 89.235 8.118 91.791 cv
8.118 93.267 8.334 94.896 8.775 96.66 cv
9.207 98.433 9.747 100.107 10.386 101.682 cv
11.016 103.257 11.727 104.562 12.51 105.597 cv
13.293 106.632 13.977 107.145 14.571 107.145 cv
15.057 107.145 15.309 106.848 15.309 106.263 cv
15.309 106.065 15.156 105.426 14.868 104.337 cv
14.373 102.96 14.049 101.88 13.905 101.097 cv
13.752 100.305 13.68 99.522 13.68 98.73 cv
13.68 96.471 14.319 94.302 15.597 92.232 cv
16.875 90.171 18.945 87.858 21.798 85.293 cv
25.731 81.846 28.8 79.164 31.014 77.247 cv
33.228 75.33 34.947 73.782 36.18 72.594 cv
37.404 71.415 38.34 70.362 38.979 69.426 cv
39.618 68.49 40.383 67.329 41.265 65.952 cv
43.1425 62.8709 44.3044 59.3844 44.7485 55.494 cv
89.3918 55.494 li
89.1557 57.0652 89.037 58.658 89.037 60.273 cv
89.037 65.907 90.747 70.506 94.167 74.061 cv
97.587 77.625 101.943 79.407 107.244 79.407 cv
112.05 79.407 115.902 77.994 118.8 75.186 cv
121.698 72.369 123.147 68.643 123.147 63.999 cv
123.147 60.5823 122.421 57.7489 120.972 55.494 cv
145.086 55.494 li
145.322 57.4647 145.44 59.5554 145.44 61.767 cv
145.44 64.917 145.233 67.725 144.819 70.218 cv
144.405 72.702 143.622 75.348 142.47 78.165 cv
141.309 80.982 139.662 84.213 137.52 87.849 cv
135.369 91.503 132.48 96.048 128.844 101.52 cv
124.884 107.649 121.995 113.031 120.177 117.666 cv
118.359 122.31 117.45 126.783 117.45 131.085 cv
117.45 133.569 117.828 136.305 118.566 139.284 cv
119.313 142.263 120.222 145.08 121.293 147.735 cv
122.373 150.381 123.57 152.577 124.893 154.314 cv
126.216 156.06 127.377 156.924 128.367 156.924 cv
129.195 156.924 129.609 156.429 129.609 155.43 cv
129.609 155.106 129.357 154.026 128.862 152.199 cv
128.034 149.886 127.503 148.059 127.251 146.736 cv
126.999 145.413 126.882 144.081 126.882 142.758 cv
126.882 138.951 127.953 135.306 130.104 131.832 cv
132.246 128.349 135.72 124.461 140.508 120.15 cv
147.123 114.354 152.28 109.845 155.997 106.614 cv
159.714 103.383 162.612 100.773 164.682 98.784 cv
166.743 96.795 168.309 95.013 169.389 93.447 cv
170.46 91.872 171.738 89.928 173.232 87.606 cv
177.363 80.811 179.424 72.864 179.424 63.756 cv
179.424 60.8497 179.188 58.0965 178.716 55.494 cv
212.518 55.494 li
211.774 57.4667 211.41 59.3747 211.41 61.218 cv
211.41 62.334 211.581 63.567 211.914 64.908 cv
212.256 66.249 212.67 67.527 213.156 68.715 cv
213.642 69.912 214.191 70.902 214.794 71.685 cv
215.397 72.468 215.919 72.855 216.369 72.855 cv
216.738 72.855 216.927 72.63 216.927 72.189 cv
216.927 72.036 216.81 71.55 216.594 70.731 cv
216.216 69.687 215.973 68.868 215.865 68.265 cv
215.748 67.671 215.694 67.077 215.694 66.474 cv
215.694 64.764 216.18 63.117 217.143 61.551 cv
218.115 59.985 219.681 58.23 221.841 56.286 cv
222.15 56.0157 222.452 55.752 222.747 55.494 cv
260.087 55.494 li
260.207 56.2856 260.373 57.1081 260.586 57.96 cv
261.063 59.904 261.657 61.74 262.359 63.468 cv
263.061 65.196 263.844 66.627 264.699 67.761 cv
265.563 68.895 266.319 69.462 266.967 69.462 cv
267.507 69.462 267.777 69.138 267.777 68.49 cv
267.777 68.274 267.615 67.572 267.291 66.384 cv
266.751 64.872 266.4 63.684 266.238 62.82 cv
266.076 61.956 265.995 61.092 265.995 60.228 cv
265.995 58.6038 266.295 57.0259 266.895 55.494 cv
318.249 55.494 li
317.439 56.295 317.034 57.285 317.034 58.437 cv
317.034 59.625 317.439 60.624 318.249 61.407 cv
319.059 62.199 320.058 62.595 321.255 62.595 cv
322.443 62.595 323.424 62.208 324.198 61.443 cv
324.963 60.669 325.35 59.688 325.35 58.491 cv
325.35 57.303 324.945 56.295 324.135 55.494 cv
383.17 55.494 li
382.586 57.2792 382.293 59.0136 382.293 60.687 cv
382.293 61.857 382.464 63.153 382.815 64.566 cv
383.166 65.979 383.598 67.311 384.102 68.562 cv
384.606 69.822 385.173 70.857 385.803 71.685 cv
386.424 72.504 386.973 72.918 387.441 72.918 cv
387.828 72.918 388.026 72.684 388.026 72.207 cv
388.026 72.054 387.909 71.541 387.675 70.686 cv
387.288 69.588 387.027 68.724 386.91 68.094 cv
386.793 67.473 386.739 66.843 386.739 66.213 cv
386.739 64.413 387.243 62.685 388.26 61.038 cv
389.277 59.391 390.924 57.546 393.192 55.512 cv
393.199 55.506 393.206 55.5 393.213 55.494 cv
473.373 55.494 li
473.373 69.8215 li
472.932 69.3506 472.461 68.9074 471.96 68.472 cv
467.595 64.737 461.547 62.865 453.825 62.865 cv
449.739 62.865 446.31 63.234 443.538 63.963 cv
440.766 64.701 438.192 65.979 435.834 67.806 cv
433.647 69.543 431.946 71.649 430.722 74.151 cv
429.489 76.653 428.877 79.272 428.877 81.999 cv
428.877 85.095 429.813 87.615 431.685 89.568 cv
433.557 91.53 435.942 92.502 438.858 92.502 cv
441.495 92.502 443.61 91.728 445.203 90.189 cv
446.796 88.641 447.588 86.589 447.588 84.042 cv
447.588 81.594 446.904 79.677 445.545 78.318 cv
444.177 76.95 442.269 76.266 439.812 76.266 cv
437.535 76.266 435.852 77.13 434.763 78.858 cv
434.313 79.677 433.971 80.199 433.737 80.433 cv
433.512 80.658 433.26 80.775 432.99 80.775 cv
432.531 80.775 432.306 80.361 432.306 79.542 cv
432.306 75.906 433.62 72.855 436.257 70.398 cv
438.885 67.95 442.152 66.717 446.049 66.717 cv
450.495 66.717 453.897 68.103 456.255 70.884 cv
458.613 73.656 459.792 77.634 459.792 82.818 cv
459.792 84.546 459.684 86.094 459.45 87.453 cv
459.225 88.821 458.793 90.279 458.154 91.827 cv
457.524 93.366 456.606 95.139 455.427 97.146 cv
454.248 99.144 452.655 101.646 450.648 104.643 cv
448.47 108.009 446.877 110.97 445.878 113.517 cv
444.87 116.064 444.375 118.521 444.375 120.879 cv
444.375 122.247 444.582 123.75 444.987 125.388 cv
445.401 127.026 445.905 128.574 446.499 130.023 cv
447.093 131.481 447.759 132.687 448.488 133.641 cv
449.217 134.595 449.856 135.072 450.405 135.072 cv
450.855 135.072 451.089 134.802 451.089 134.253 cv
451.089 134.073 450.945 133.479 450.675 132.48 cv
450.225 131.211 449.928 130.203 449.793 129.483 cv
449.649 128.754 449.586 128.025 449.586 127.296 cv
449.586 125.208 450.18 123.201 451.359 121.293 cv
452.538 119.385 454.446 117.243 457.092 114.876 cv
460.728 111.699 463.563 109.215 465.615 107.442 cv
467.658 105.669 469.251 104.238 470.385 103.149 cv
471.519 102.06 472.383 101.079 472.977 100.215 cv
473.101 100.029 473.236 99.8319 473.373 99.6287 cv
473.373 267.538 li
472.276 265.043 470.671 262.873 468.531 261.045 cv
464.148 257.292 458.082 255.42 450.324 255.42 cv
446.22 255.42 442.773 255.789 439.992 256.518 cv
437.202 257.256 434.628 258.534 432.252 260.37 cv
430.065 262.107 428.355 264.231 427.122 266.733 cv
425.889 269.244 425.268 271.872 425.268 274.608 cv
425.268 277.713 426.204 280.251 428.076 282.213 cv
429.948 284.175 432.351 285.156 435.267 285.156 cv
437.922 285.156 440.037 284.382 441.639 282.825 cv
443.232 281.277 444.033 279.225 444.033 276.669 cv
444.033 274.203 443.349 272.286 441.981 270.918 cv
440.613 269.541 438.696 268.857 436.23 268.857 cv
433.944 268.857 432.261 269.73 431.163 271.458 cv
430.704 272.286 430.362 272.808 430.137 273.033 cv
429.903 273.267 429.66 273.375 429.381 273.375 cv
428.922 273.375 428.697 272.97 428.697 272.142 cv
428.697 268.497 430.02 265.437 432.666 262.971 cv
435.312 260.505 438.588 259.272 442.512 259.272 cv
446.976 259.272 450.396 260.667 452.772 263.448 cv
455.139 266.238 456.327 270.234 456.327 275.436 cv
456.327 277.164 456.21 278.721 455.985 280.089 cv
455.76 281.457 455.319 282.915 454.68 284.472 cv
454.041 286.02 453.132 287.802 451.944 289.809 cv
450.747 291.816 449.154 294.327 447.147 297.342 cv
445.293 300.195 443.889 302.733 442.881 305.001 cv
4.5 224.046 mo
9.369 224.046 13.104 225.567 15.687 228.6 cv
18.27 231.633 19.566 235.989 19.566 241.668 cv
19.566 243.558 19.44 245.25 19.188 246.744 cv
18.936 248.247 18.468 249.84 17.775 251.523 cv
17.082 253.224 16.083 255.159 14.787 257.355 cv
13.5 259.542 11.763 262.278 9.576 265.563 cv
7.182 269.253 5.445 272.484 4.356 275.274 cv
3.258 278.064 2.718 280.755 2.718 283.338 cv
2.718 284.832 2.943 286.479 3.393 288.27 cv
3.843 290.061 4.392 291.753 5.04 293.346 cv
5.697 294.939 6.417 296.262 7.227 297.306 cv
8.028 298.35 8.721 298.872 9.324 298.872 cv
9.819 298.872 10.071 298.575 10.071 297.981 cv
10.071 297.774 9.918 297.135 9.621 296.037 cv
9.126 294.642 8.802 293.544 8.649 292.752 cv
8.496 291.951 8.424 291.159 8.424 290.358 cv
8.424 288.072 9.072 285.876 10.359 283.788 cv
11.646 281.7 13.734 279.36 16.614 276.768 cv
20.583 273.285 23.679 270.567 25.911 268.632 cv
28.143 266.688 29.88 265.122 31.122 263.925 cv
32.364 262.728 33.309 261.657 33.957 260.712 cv
34.596 259.767 35.37 258.597 36.261 257.202 cv
38.745 253.116 39.978 248.337 39.978 242.865 cv
39.978 235.692 37.593 230.076 32.823 226.008 cv
28.053 221.94 21.447 219.906 13.005 219.906 cv
8.532 219.906 4.779 220.302 1.746 221.085 cv
1.323 221.202 .918 221.346 .504 221.481 cv
.504 224.496 li
1.755 224.208 3.087 224.046 4.5 224.046 cv
261.531 199.629 mo
266.841 199.629 270.9 201.276 273.726 204.57 cv
276.543 207.864 277.947 212.589 277.947 218.736 cv
277.947 220.797 277.812 222.624 277.542 224.244 cv
277.272 225.864 276.759 227.592 275.994 229.428 cv
275.229 231.264 274.149 233.37 272.736 235.737 cv
271.323 238.113 269.415 241.083 267.03 244.647 cv
264.42 248.643 262.521 252.153 261.324 255.168 cv
260.127 258.192 259.533 261.108 259.533 263.916 cv
259.533 265.536 259.767 267.318 260.262 269.262 cv
260.739 271.206 261.333 273.042 262.035 274.77 cv
262.737 276.489 263.52 277.92 264.375 279.054 cv
265.239 280.188 265.995 280.755 266.643 280.755 cv
267.183 280.755 267.453 280.431 267.453 279.783 cv
267.453 279.567 267.291 278.865 266.967 277.677 cv
266.427 276.165 266.076 274.977 265.914 274.122 cv
265.752 273.258 265.671 272.394 265.671 271.521 cv
265.671 269.046 266.373 266.67 267.777 264.402 cv
269.19 262.134 271.458 259.596 274.599 256.788 cv
278.928 253.017 282.312 250.074 284.742 247.968 cv
287.181 245.862 289.071 244.161 290.421 242.865 cv
291.78 241.569 292.806 240.417 293.508 239.391 cv
294.21 238.356 295.047 237.087 296.028 235.575 cv
298.728 231.156 300.087 225.972 300.087 220.032 cv
300.087 212.265 297.486 206.163 292.302 201.726 cv
287.118 197.28 279.936 195.066 270.756 195.066 cv
265.896 195.066 261.819 195.498 258.525 196.371 cv
255.231 197.235 252.18 198.756 249.372 200.925 cv
246.78 202.977 244.755 205.488 243.297 208.458 cv
241.839 211.428 241.11 214.533 241.11 217.764 cv
241.11 221.436 242.208 224.433 244.404 226.755 cv
246.6 229.077 249.426 230.238 252.882 230.238 cv
256.014 230.238 258.525 229.32 260.415 227.484 cv
262.296 225.648 263.241 223.218 263.241 220.194 cv
263.241 217.287 262.44 215.019 260.811 213.399 cv
259.191 211.779 256.932 210.969 254.016 210.969 cv
251.316 210.969 249.318 211.995 248.022 214.047 cv
247.482 215.019 247.077 215.64 246.807 215.91 cv
246.537 216.18 246.24 216.315 245.916 216.315 cv
245.376 216.315 245.106 215.829 245.106 214.857 cv
245.106 210.537 246.681 206.919 249.822 204.003 cv
252.963 201.096 256.869 199.629 261.531 199.629 cv
386.829 244.701 mo
382.806 244.701 379.431 246.069 376.704 248.796 cv
373.977 251.514 372.609 254.826 372.609 258.732 cv
372.609 262.755 373.977 266.103 376.704 268.758 cv
379.431 271.422 382.806 272.754 386.829 272.754 cv
390.861 272.754 394.173 271.458 396.765 268.857 cv
399.366 266.256 400.662 262.944 400.662 258.921 cv
400.662 254.898 399.294 251.514 396.576 248.796 cv
393.849 246.069 390.6 244.701 386.829 244.701 cv
.504 234.837 mo
.504 251.64 li
1.656 251.217 2.673 250.578 3.546 249.732 cv
5.292 248.04 6.165 245.799 6.165 243.018 cv
6.165 240.327 5.418 238.23 3.924 236.736 cv
3.006 235.827 1.863 235.197 .504 234.837 cv
379.368 139.5 mo
385.758 139.5 390.645 141.48 394.038 145.44 cv
397.431 149.4 399.123 155.07 399.123 162.477 cv
399.123 164.943 398.961 167.148 398.637 169.092 cv
398.313 171.036 397.692 173.115 396.783 175.32 cv
395.874 177.525 394.569 180.054 392.877 182.907 cv
391.185 185.769 388.908 189.333 386.046 193.617 cv
382.914 198.423 380.637 202.635 379.206 206.271 cv
377.775 209.907 377.064 213.408 377.064 216.783 cv
377.064 218.727 377.352 220.869 377.928 223.2 cv
378.513 225.54 379.215 227.745 380.061 229.824 cv
380.898 231.903 381.834 233.622 382.86 234.981 cv
383.895 236.349 384.804 237.024 385.587 237.024 cv
386.226 237.024 386.559 236.637 386.559 235.854 cv
386.559 235.602 386.361 234.756 385.974 233.334 cv
385.326 231.516 384.903 230.085 384.705 229.05 cv
384.516 228.006 384.417 226.971 384.417 225.927 cv
384.417 222.948 385.254 220.095 386.937 217.368 cv
388.629 214.641 391.347 211.59 395.109 208.215 cv
400.293 203.67 404.343 200.142 407.259 197.604 cv
410.184 195.084 412.452 193.032 414.072 191.475 cv
415.692 189.918 416.916 188.523 417.762 187.29 cv
418.608 186.057 419.607 184.536 420.777 182.718 cv
424.017 177.399 425.637 171.171 425.637 164.025 cv
425.637 154.683 422.523 147.348 416.304 142.02 cv
410.076 136.692 401.445 134.028 390.429 134.028 cv
384.588 134.028 379.692 134.55 375.732 135.594 cv
371.781 136.638 368.118 138.456 364.743 141.057 cv
361.629 143.523 359.199 146.538 357.444 150.111 cv
355.698 153.684 354.825 157.41 354.825 161.307 cv
354.825 165.717 356.139 169.317 358.776 172.107 cv
361.413 174.897 364.806 176.292 368.955 176.292 cv
372.717 176.292 375.732 175.194 378.009 172.98 cv
380.277 170.775 381.42 167.859 381.42 164.223 cv
381.42 160.722 380.439 157.995 378.495 156.051 cv
376.551 154.107 373.824 153.126 370.314 153.126 cv
367.074 153.126 364.671 154.359 363.114 156.825 cv
362.466 157.995 361.98 158.742 361.656 159.066 cv
361.332 159.39 360.972 159.552 360.585 159.552 cv
359.937 159.552 359.613 158.967 359.613 157.797 cv
359.613 152.613 361.503 148.266 365.283 144.756 cv
369.063 141.255 373.761 139.5 379.368 139.5 cv
317.79 221.337 mo
315.621 221.337 313.812 222.066 312.345 223.533 cv
310.878 225 310.149 226.773 310.149 228.87 cv
310.149 231.03 310.878 232.83 312.345 234.261 cv
313.812 235.683 315.621 236.403 317.79 236.403 cv
319.95 236.403 321.723 235.701 323.118 234.306 cv
324.513 232.911 325.215 231.138 325.215 228.978 cv
325.215 226.809 324.477 225 323.019 223.533 cv
321.552 222.066 319.806 221.337 317.79 221.337 cv
187.56 208.287 mo
185.454 208.287 183.699 208.998 182.277 210.42 cv
180.846 211.842 180.135 213.57 180.135 215.604 cv
180.135 217.701 180.846 219.447 182.277 220.833 cv
183.699 222.228 185.454 222.921 187.56 222.921 cv
189.657 222.921 191.385 222.237 192.744 220.887 cv
194.094 219.528 194.778 217.809 194.778 215.703 cv
194.778 213.606 194.067 211.842 192.636 210.42 cv
191.214 208.998 189.522 208.287 187.56 208.287 cv
73.368 211.329 mo
71.901 211.329 70.677 211.824 69.678 212.814 cv
68.688 213.813 68.193 215.01 68.193 216.432 cv
68.193 217.899 68.688 219.114 69.678 220.086 cv
70.677 221.049 71.901 221.535 73.368 221.535 cv
74.835 221.535 76.041 221.067 76.986 220.122 cv
77.931 219.177 78.399 217.971 78.399 216.504 cv
78.399 215.037 77.904 213.813 76.914 212.814 cv
75.924 211.824 74.736 211.329 73.368 211.329 cv
226.575 193.743 mo
223.218 193.743 220.392 194.886 218.124 197.163 cv
215.847 199.44 214.704 202.203 214.704 205.452 cv
214.704 208.818 215.847 211.608 218.124 213.831 cv
220.392 216.054 223.218 217.161 226.575 217.161 cv
229.941 217.161 232.704 216.081 234.873 213.912 cv
237.042 211.743 238.122 208.98 238.122 205.623 cv
238.122 202.257 236.988 199.44 234.711 197.163 cv
232.434 194.886 229.725 193.743 226.575 193.743 cv
313.866 164.646 mo
317.277 164.646 319.896 165.717 321.705 167.841 cv
323.523 169.974 324.432 173.025 324.432 177.012 cv
324.432 178.335 324.342 179.523 324.162 180.567 cv
323.991 181.62 323.658 182.736 323.172 183.924 cv
322.677 185.103 321.984 186.471 321.075 188.01 cv
320.166 189.54 318.942 191.466 317.403 193.77 cv
315.72 196.353 314.496 198.621 313.731 200.574 cv
312.957 202.527 312.579 204.417 312.579 206.226 cv
312.579 207.279 312.732 208.431 313.047 209.691 cv
313.362 210.942 313.749 212.13 314.208 213.246 cv
314.667 214.362 315.171 215.289 315.729 216.018 cv
316.296 216.756 316.782 217.125 317.205 217.125 cv
317.547 217.125 317.727 216.909 317.727 216.495 cv
317.727 216.351 317.619 215.901 317.412 215.136 cv
317.061 214.155 316.836 213.39 316.728 212.832 cv
316.629 212.274 316.575 211.707 316.575 211.149 cv
316.575 209.547 317.025 208.008 317.934 206.541 cv
318.834 205.074 320.301 203.436 322.317 201.618 cv
325.098 199.179 327.276 197.271 328.842 195.912 cv
330.408 194.553 331.623 193.455 332.496 192.618 cv
333.369 191.772 334.026 191.025 334.476 190.359 cv
334.935 189.702 335.475 188.874 336.096 187.902 cv
337.842 185.04 338.706 181.683 338.706 177.849 cv
338.706 172.818 337.032 168.876 333.684 166.014 cv
330.345 163.152 325.71 161.721 319.788 161.721 cv
316.647 161.721 314.019 162 311.895 162.558 cv
309.762 163.116 307.8 164.097 305.982 165.483 cv
304.308 166.815 303.003 168.435 302.067 170.361 cv
301.122 172.278 300.654 174.285 300.654 176.382 cv
300.654 178.749 301.374 180.693 302.814 182.196 cv
304.254 183.69 306.09 184.446 308.322 184.446 cv
310.347 184.446 311.967 183.852 313.191 182.664 cv
314.415 181.476 315.027 179.901 315.027 177.948 cv
315.027 176.067 314.505 174.6 313.452 173.556 cv
312.408 172.503 310.941 171.981 309.06 171.981 cv
307.314 171.981 306.018 172.647 305.181 173.97 cv
304.83 174.6 304.569 175.005 304.398 175.176 cv
304.218 175.347 304.029 175.437 303.822 175.437 cv
303.471 175.437 303.3 175.122 303.3 174.492 cv
303.3 171.702 304.308 169.362 306.333 167.481 cv
308.349 165.591 310.86 164.646 313.866 164.646 cv
70.668 173.025 mo
72.99 173.025 74.763 173.745 75.987 175.185 cv
77.22 176.625 77.832 178.686 77.832 181.386 cv
77.832 182.286 77.769 183.087 77.652 183.789 cv
77.535 184.5 77.31 185.256 76.986 186.066 cv
76.653 186.867 76.176 187.785 75.564 188.82 cv
74.952 189.864 74.124 191.16 73.089 192.726 cv
71.955 194.472 71.127 196.002 70.614 197.325 cv
70.092 198.648 69.831 199.926 69.831 201.15 cv
69.831 201.861 69.939 202.644 70.146 203.49 cv
70.362 204.345 70.623 205.146 70.929 205.902 cv
71.235 206.658 71.568 207.279 71.946 207.783 cv
72.324 208.278 72.657 208.521 72.936 208.521 cv
73.17 208.521 73.287 208.386 73.287 208.098 cv
73.287 208.008 73.224 207.693 73.08 207.18 cv
72.837 206.514 72.684 206.001 72.621 205.614 cv
72.549 205.245 72.513 204.858 72.513 204.48 cv
72.513 203.4 72.819 202.356 73.431 201.366 cv
74.043 200.376 75.042 199.26 76.41 198.036 cv
78.3 196.38 79.776 195.093 80.838 194.175 cv
81.9 193.257 82.728 192.51 83.322 191.943 cv
83.916 191.376 84.366 190.872 84.672 190.422 cv
84.978 189.972 85.338 189.414 85.77 188.757 cv
86.949 186.813 87.543 184.554 87.543 181.953 cv
87.543 178.551 86.409 175.878 84.141 173.934 cv
81.864 171.999 78.723 171.027 74.709 171.027 cv
72.576 171.027 70.794 171.216 69.354 171.594 cv
67.914 171.972 66.573 172.638 65.349 173.592 cv
64.215 174.483 63.324 175.581 62.685 176.886 cv
62.046 178.182 61.731 179.541 61.731 180.963 cv
61.731 182.565 62.217 183.879 63.189 184.896 cv
64.161 185.904 65.403 186.417 66.915 186.417 cv
68.283 186.417 69.381 186.012 70.209 185.211 cv
71.037 184.41 71.451 183.348 71.451 182.025 cv
71.451 180.747 71.1 179.757 70.389 179.046 cv
69.678 178.335 68.688 177.984 67.41 177.984 cv
66.231 177.984 65.358 178.434 64.791 179.325 cv
64.557 179.757 64.377 180.027 64.26 180.144 cv
64.143 180.261 64.008 180.324 63.873 180.324 cv
63.63 180.324 63.513 180.108 63.513 179.685 cv
63.513 177.795 64.197 176.211 65.574 174.933 cv
66.942 173.664 68.643 173.025 70.668 173.025 cv
183.672 153.234 mo
186.984 153.234 189.522 154.269 191.277 156.339 cv
193.041 158.409 193.914 161.37 193.914 165.231 cv
193.914 166.518 193.833 167.679 193.662 168.687 cv
193.5 169.704 193.176 170.793 192.708 171.945 cv
192.231 173.097 191.556 174.42 190.683 175.905 cv
189.81 177.399 188.631 179.262 187.146 181.503 cv
185.526 184.005 184.347 186.21 183.609 188.109 cv
182.862 190.008 182.493 191.835 182.493 193.599 cv
182.493 194.616 182.646 195.732 182.952 196.956 cv
183.258 198.171 183.627 199.323 184.068 200.412 cv
184.509 201.492 184.995 202.392 185.535 203.103 cv
186.084 203.814 186.552 204.174 186.957 204.174 cv
187.299 204.174 187.47 203.967 187.47 203.562 cv
187.47 203.427 187.371 202.986 187.164 202.239 cv
186.822 201.294 186.606 200.547 186.498 200.007 cv
186.399 199.458 186.354 198.918 186.354 198.378 cv
186.354 196.821 186.786 195.327 187.668 193.905 cv
188.55 192.483 189.963 190.89 191.925 189.126 cv
194.625 186.75 196.74 184.905 198.261 183.582 cv
199.782 182.268 200.961 181.197 201.807 180.387 cv
202.653 179.568 203.292 178.839 203.733 178.2 cv
204.174 177.552 204.696 176.76 205.308 175.806 cv
206.991 173.025 207.837 169.776 207.837 166.05 cv
207.837 161.172 206.217 157.338 202.959 154.557 cv
199.71 151.776 195.21 150.381 189.45 150.381 cv
186.399 150.381 183.843 150.651 181.782 151.2 cv
179.712 151.74 177.804 152.694 176.04 154.053 cv
174.411 155.34 173.142 156.915 172.233 158.778 cv
171.315 160.641 170.856 162.594 170.856 164.628 cv
170.856 166.932 171.558 168.813 172.953 170.271 cv
174.357 171.729 176.139 172.449 178.308 172.449 cv
180.27 172.449 181.845 171.873 183.033 170.721 cv
184.221 169.569 184.815 168.048 184.815 166.149 cv
184.815 164.322 184.302 162.9 183.294 161.883 cv
182.268 160.866 180.846 160.353 179.019 160.353 cv
177.327 160.353 176.067 161.001 175.257 162.288 cv
174.915 162.9 174.663 163.287 174.492 163.458 cv
174.321 163.62 174.141 163.71 173.934 163.71 cv
173.592 163.71 173.43 163.404 173.43 162.792 cv
173.43 160.083 174.411 157.815 176.373 155.979 cv
178.335 154.152 180.765 153.234 183.672 153.234 cv
129.771 166.815 mo
124.623 166.815 120.312 168.552 116.829 172.044 cv
113.337 175.527 111.6 179.757 111.6 184.734 cv
111.6 189.882 113.337 194.148 116.829 197.55 cv
120.312 200.952 124.623 202.653 129.771 202.653 cv
134.91 202.653 139.14 200.997 142.461 197.676 cv
145.782 194.355 147.438 190.125 147.438 184.986 cv
147.438 179.838 145.701 175.527 142.209 172.044 cv
138.726 168.552 134.577 166.815 129.771 166.815 cv
220.347 105.93 mo
225.675 105.93 229.761 107.586 232.596 110.889 cv
235.422 114.192 236.835 118.926 236.835 125.109 cv
236.835 127.161 236.7 129.006 236.43 130.635 cv
236.16 132.255 235.647 133.992 234.882 135.828 cv
234.126 137.673 233.037 139.788 231.624 142.164 cv
230.211 144.549 228.303 147.528 225.918 151.101 cv
223.308 155.115 221.409 158.634 220.212 161.667 cv
219.015 164.7 218.421 167.625 218.421 170.442 cv
218.421 172.062 218.664 173.853 219.15 175.806 cv
219.627 177.75 220.221 179.595 220.923 181.332 cv
221.625 183.06 222.408 184.5 223.263 185.634 cv
224.127 186.777 224.883 187.344 225.531 187.344 cv
226.071 187.344 226.35 187.02 226.35 186.363 cv
226.35 186.147 226.188 185.445 225.864 184.257 cv
225.315 182.736 224.964 181.548 224.802 180.684 cv
224.64 179.811 224.559 178.947 224.559 178.074 cv
224.559 175.59 225.261 173.205 226.674 170.928 cv
228.078 168.651 230.346 166.104 233.487 163.287 cv
237.816 159.498 241.2 156.546 243.63 154.44 cv
246.069 152.325 247.959 150.615 249.309 149.319 cv
250.668 148.023 251.694 146.853 252.396 145.827 cv
253.098 144.792 253.935 143.523 254.916 142.002 cv
257.616 137.565 258.975 132.363 258.975 126.405 cv
258.975 118.602 256.374 112.482 251.172 108.036 cv
245.979 103.59 238.779 101.358 229.581 101.358 cv
224.703 101.358 220.617 101.799 217.314 102.663 cv
214.011 103.536 210.951 105.057 208.134 107.226 cv
205.542 109.287 203.508 111.807 202.05 114.786 cv
200.583 117.765 199.854 120.879 199.854 124.128 cv
199.854 127.818 200.961 130.815 203.157 133.146 cv
205.353 135.477 208.188 136.647 211.653 136.647 cv
214.794 136.647 217.314 135.72 219.213 133.884 cv
221.103 132.039 222.057 129.6 222.057 126.567 cv
222.057 123.642 221.238 121.365 219.618 119.745 cv
217.989 118.116 215.721 117.306 212.796 117.306 cv
210.087 117.306 208.08 118.332 206.775 120.393 cv
206.235 121.365 205.83 121.995 205.56 122.265 cv
205.29 122.535 204.993 122.67 204.669 122.67 cv
204.129 122.67 203.85 122.184 203.85 121.203 cv
203.85 116.874 205.434 113.247 208.593 110.322 cv
211.743 107.397 215.667 105.93 220.347 105.93 cv
153.819 157.329 mo
152.658 157.329 151.677 157.725 150.876 158.517 cv
150.084 159.309 149.688 160.272 149.688 161.397 cv
149.688 162.567 150.084 163.539 150.876 164.313 cv
151.677 165.087 152.658 165.474 153.819 165.474 cv
154.989 165.474 155.952 165.096 156.708 164.34 cv
157.464 163.584 157.842 162.621 157.842 161.46 cv
157.842 160.29 157.446 159.309 156.654 158.517 cv
155.862 157.725 154.917 157.329 153.819 157.329 cv
49.167 155.88 mo
48.069 155.88 47.16 156.249 46.422 156.996 cv
45.675 157.734 45.306 158.625 45.306 159.687 cv
45.306 160.776 45.675 161.685 46.422 162.405 cv
47.16 163.125 48.069 163.485 49.167 163.485 cv
50.256 163.485 51.156 163.134 51.858 162.432 cv
52.56 161.73 52.911 160.83 52.911 159.741 cv
52.911 158.643 52.542 157.734 51.804 156.996 cv
51.066 156.249 50.184 155.88 49.167 155.88 cv
451.26 140.472 mo
448.434 140.472 446.076 141.426 444.168 143.334 cv
442.26 145.242 441.306 147.555 441.306 150.282 cv
441.306 153.108 442.26 155.448 444.168 157.311 cv
446.076 159.174 448.434 160.101 451.26 160.101 cv
454.077 160.101 456.39 159.192 458.208 157.374 cv
460.026 155.556 460.935 153.243 460.935 150.426 cv
460.935 147.6 459.981 145.242 458.073 143.334 cv
456.165 141.426 453.897 140.472 451.26 140.472 cv
151.65 126.819 mo
153.513 126.819 154.935 127.386 155.916 128.538 cv
156.897 129.69 157.392 131.337 157.392 133.479 cv
157.392 134.199 157.347 134.838 157.248 135.405 cv
157.158 135.972 156.978 136.566 156.708 137.214 cv
156.447 137.853 156.069 138.582 155.583 139.41 cv
155.088 140.247 154.422 141.282 153.594 142.524 cv
152.685 143.919 152.019 145.143 151.605 146.196 cv
151.191 147.249 150.984 148.266 150.984 149.247 cv
150.984 149.814 151.065 150.435 151.236 151.11 cv
151.407 151.785 151.614 152.424 151.857 153.027 cv
152.1 153.63 152.37 154.134 152.667 154.53 cv
152.973 154.926 153.234 155.124 153.459 155.124 cv
153.648 155.124 153.738 155.007 153.738 154.782 cv
153.738 154.71 153.684 154.458 153.576 154.044 cv
153.387 153.522 153.261 153.108 153.207 152.802 cv
153.144 152.505 153.117 152.199 153.117 151.902 cv
153.117 151.038 153.369 150.201 153.855 149.418 cv
154.341 148.626 155.133 147.735 156.231 146.763 cv
157.734 145.44 158.913 144.414 159.759 143.676 cv
160.605 142.947 161.262 142.353 161.73 141.903 cv
162.207 141.444 162.567 141.039 162.81 140.688 cv
163.053 140.328 163.341 139.887 163.683 139.356 cv
164.628 137.817 165.096 136.008 165.096 133.938 cv
165.096 131.22 164.187 129.096 162.387 127.548 cv
160.569 126 158.067 125.226 154.863 125.226 cv
153.171 125.226 151.749 125.379 150.597 125.676 cv
149.454 125.982 148.383 126.513 147.402 127.269 cv
146.502 127.98 145.791 128.862 145.287 129.897 cv
144.774 130.932 144.522 132.012 144.522 133.146 cv
144.522 134.424 144.909 135.468 145.674 136.278 cv
146.439 137.088 147.42 137.493 148.626 137.493 cv
149.715 137.493 150.597 137.169 151.254 136.53 cv
151.911 135.891 152.244 135.045 152.244 133.992 cv
152.244 132.975 151.965 132.183 151.398 131.616 cv
150.831 131.049 150.039 130.77 149.022 130.77 cv
148.077 130.77 147.384 131.13 146.934 131.841 cv
146.745 132.183 146.601 132.399 146.511 132.489 cv
146.412 132.588 146.313 132.633 146.196 132.633 cv
146.007 132.633 145.917 132.462 145.917 132.129 cv
145.917 130.617 146.466 129.357 147.564 128.34 cv
148.662 127.323 150.03 126.819 151.65 126.819 cv
47.187 127.287 mo
48.924 127.287 50.247 127.827 51.174 128.907 cv
52.092 129.978 52.56 131.526 52.56 133.533 cv
52.56 134.199 52.515 134.802 52.425 135.333 cv
52.335 135.864 52.164 136.422 51.912 137.025 cv
51.669 137.619 51.309 138.312 50.85 139.086 cv
50.382 139.86 49.761 140.832 48.978 141.993 cv
48.123 143.298 47.502 144.45 47.106 145.44 cv
46.719 146.421 46.521 147.375 46.521 148.293 cv
46.521 148.824 46.602 149.4 46.764 150.039 cv
46.917 150.669 47.106 151.272 47.34 151.839 cv
47.565 152.406 47.817 152.865 48.105 153.234 cv
48.384 153.612 48.627 153.792 48.843 153.792 cv
49.014 153.792 49.104 153.693 49.104 153.477 cv
49.104 153.405 49.05 153.18 48.942 152.793 cv
48.771 152.298 48.654 151.911 48.6 151.623 cv
48.546 151.344 48.519 151.065 48.519 150.777 cv
48.519 149.967 48.753 149.193 49.212 148.455 cv
49.671 147.708 50.418 146.88 51.435 145.962 cv
52.857 144.729 53.955 143.766 54.756 143.082 cv
55.548 142.389 56.169 141.84 56.61 141.417 cv
57.051 140.994 57.393 140.616 57.618 140.274 cv
57.852 139.941 58.122 139.527 58.437 139.032 cv
59.328 137.592 59.769 135.9 59.769 133.956 cv
59.769 131.418 58.923 129.42 57.222 127.971 cv
55.53 126.513 53.181 125.793 50.184 125.793 cv
48.591 125.793 47.259 125.937 46.179 126.216 cv
45.108 126.504 44.109 126.999 43.191 127.71 cv
42.345 128.385 41.679 129.204 41.202 130.176 cv
40.725 131.139 40.491 132.156 40.491 133.218 cv
40.491 134.415 40.851 135.396 41.571 136.152 cv
42.3 136.908 43.218 137.286 44.352 137.286 cv
45.378 137.286 46.197 136.989 46.809 136.386 cv
47.43 135.792 47.736 135 47.736 134.01 cv
47.736 133.056 47.475 132.318 46.944 131.787 cv
46.413 131.256 45.675 130.995 44.721 130.995 cv
43.839 130.995 43.191 131.328 42.768 132.003 cv
42.588 132.318 42.453 132.516 42.363 132.606 cv
42.282 132.696 42.183 132.741 42.075 132.741 cv
41.895 132.741 41.814 132.579 41.814 132.264 cv
41.814 130.851 42.327 129.672 43.353 128.718 cv
44.379 127.764 45.657 127.287 47.187 127.287 cv
98.577 144.45 mo
97.749 144.45 97.047 144.738 96.489 145.296 cv
95.922 145.863 95.643 146.538 95.643 147.348 cv
95.643 148.176 95.922 148.86 96.489 149.409 cv
97.047 149.958 97.749 150.237 98.577 150.237 cv
99.405 150.237 100.089 149.967 100.62 149.436 cv
101.16 148.896 101.43 148.212 101.43 147.384 cv
101.43 146.556 101.142 145.863 100.584 145.296 cv
100.017 144.738 99.351 144.45 98.577 144.45 cv
300.141 137.574 mo
299.223 137.574 298.458 137.889 297.828 138.51 cv
297.207 139.131 296.901 139.887 296.901 140.778 cv
296.901 141.696 297.207 142.461 297.828 143.064 cv
298.458 143.676 299.223 143.973 300.141 143.973 cv
301.059 143.973 301.815 143.676 302.409 143.091 cv
303.003 142.497 303.3 141.741 303.3 140.823 cv
303.3 139.905 302.985 139.131 302.364 138.51 cv
301.743 137.889 301.005 137.574 300.141 137.574 cv
97.056 122.787 mo
98.361 122.787 99.369 123.192 100.062 124.011 cv
100.755 124.821 101.106 125.991 101.106 127.512 cv
101.106 128.016 101.07 128.475 101.007 128.871 cv
100.935 129.276 100.809 129.699 100.62 130.158 cv
100.431 130.608 100.161 131.13 99.81 131.715 cv
99.459 132.3 98.991 133.038 98.397 133.92 cv
97.749 134.91 97.272 135.774 96.975 136.521 cv
96.687 137.268 96.534 137.988 96.534 138.69 cv
96.534 139.086 96.597 139.527 96.714 140.004 cv
96.84 140.49 96.984 140.94 97.164 141.372 cv
97.335 141.795 97.533 142.155 97.749 142.434 cv
97.965 142.713 98.145 142.848 98.307 142.848 cv
98.442 142.848 98.514 142.776 98.514 142.614 cv
98.514 142.56 98.469 142.38 98.388 142.092 cv
98.253 141.714 98.172 141.426 98.127 141.21 cv
98.091 140.994 98.073 140.778 98.073 140.571 cv
98.073 139.959 98.244 139.365 98.586 138.807 cv
98.937 138.249 99.495 137.619 100.278 136.926 cv
101.34 135.99 102.177 135.261 102.78 134.739 cv
103.383 134.217 103.851 133.803 104.184 133.479 cv
104.517 133.155 104.769 132.876 104.94 132.615 cv
105.12 132.363 105.327 132.048 105.561 131.679 cv
106.236 130.581 106.569 129.303 106.569 127.836 cv
106.569 125.91 105.93 124.407 104.643 123.309 cv
103.365 122.22 101.592 121.68 99.324 121.68 cv
98.127 121.68 97.119 121.788 96.3 121.995 cv
95.49 122.202 94.734 122.58 94.041 123.102 cv
93.402 123.615 92.898 124.236 92.538 124.965 cv
92.178 125.703 91.998 126.468 91.998 127.269 cv
91.998 128.178 92.277 128.916 92.817 129.492 cv
93.366 130.068 94.068 130.356 94.923 130.356 cv
95.697 130.356 96.318 130.131 96.786 129.672 cv
97.254 129.222 97.488 128.619 97.488 127.872 cv
97.488 127.152 97.29 126.594 96.885 126.189 cv
96.489 125.793 95.922 125.586 95.202 125.586 cv
94.536 125.586 94.041 125.838 93.726 126.351 cv
93.591 126.594 93.492 126.747 93.42 126.81 cv
93.204 126.909 li
93.069 126.909 92.997 126.792 92.997 126.549 cv
92.997 125.478 93.384 124.587 94.167 123.867 cv
94.941 123.147 95.904 122.787 97.056 122.787 cv
298.44 113.589 mo
299.898 113.589 301.014 114.039 301.788 114.939 cv
302.562 115.839 302.949 117.135 302.949 118.827 cv
302.949 119.385 302.913 119.889 302.832 120.33 cv
302.76 120.78 302.616 121.248 302.409 121.752 cv
302.202 122.256 301.905 122.832 301.518 123.489 cv
301.131 124.137 300.618 124.947 299.961 125.928 cv
299.25 127.026 298.728 127.98 298.404 128.817 cv
298.08 129.645 297.918 130.437 297.918 131.211 cv
297.918 131.652 297.981 132.138 298.116 132.678 cv
298.242 133.209 298.404 133.713 298.602 134.181 cv
298.791 134.658 298.998 135.054 299.241 135.36 cv
299.475 135.675 299.682 135.828 299.853 135.828 cv
300.006 135.828 300.078 135.738 300.078 135.558 cv
300.078 135.504 300.033 135.306 299.943 134.982 cv
299.799 134.568 299.7 134.244 299.655 134.01 cv
299.61 133.767 299.592 133.533 299.592 133.299 cv
299.592 132.615 299.781 131.967 300.168 131.346 cv
300.555 130.725 301.176 130.023 302.031 129.258 cv
303.21 128.223 304.137 127.413 304.803 126.837 cv
305.469 126.261 305.982 125.793 306.351 125.442 cv
306.72 125.082 307.008 124.767 307.197 124.488 cv
307.386 124.2 307.62 123.858 307.881 123.444 cv
308.619 122.229 308.997 120.807 308.997 119.178 cv
308.997 117.045 308.286 115.371 306.864 114.156 cv
305.442 112.941 303.48 112.338 300.96 112.338 cv
299.628 112.338 298.512 112.455 297.612 112.689 cv
296.712 112.932 295.875 113.346 295.101 113.94 cv
294.399 114.498 293.841 115.191 293.436 116.001 cv
293.04 116.82 292.842 117.666 292.842 118.557 cv
292.842 119.565 293.139 120.384 293.742 121.023 cv
294.345 121.662 295.119 121.977 296.064 121.977 cv
296.928 121.977 297.612 121.725 298.134 121.221 cv
298.647 120.717 298.908 120.051 298.908 119.223 cv
298.908 118.422 298.683 117.801 298.242 117.36 cv
297.801 116.919 297.18 116.694 296.379 116.694 cv
295.641 116.694 295.092 116.973 294.732 117.54 cv
294.588 117.801 294.471 117.972 294.399 118.044 cv
294.156 118.161 li
294.012 118.161 293.931 118.026 293.931 117.756 cv
293.931 116.577 294.363 115.587 295.227 114.786 cv
296.091 113.985 297.162 113.589 298.44 113.589 cv
15.471 112.995 mo
12.42 112.995 9.855 114.03 7.785 116.1 cv
5.724 118.17 4.689 120.681 4.689 123.633 cv
4.689 126.684 5.724 129.222 7.785 131.247 cv
9.855 133.263 12.42 134.271 15.471 134.271 cv
18.522 134.271 21.033 133.29 23.004 131.319 cv
24.975 129.348 25.965 126.837 25.965 123.777 cv
25.965 120.726 24.93 118.17 22.86 116.1 cv
20.79 114.03 18.324 112.995 15.471 112.995 cv
267.939 75.942 mo
264.6 75.942 261.801 77.076 259.533 79.335 cv
257.274 81.603 256.14 84.348 256.14 87.579 cv
256.14 90.918 257.274 93.69 259.533 95.904 cv
261.801 98.109 264.6 99.216 267.939 99.216 cv
271.278 99.216 274.032 98.136 276.183 95.985 cv
278.343 93.825 279.414 91.08 279.414 87.741 cv
279.414 84.402 278.289 81.603 276.021 79.335 cv
273.762 77.076 271.062 75.942 267.939 75.942 cv
388.197 77.553 mo
385.767 77.553 383.724 78.381 382.077 80.028 cv
380.43 81.666 379.602 83.673 379.602 86.022 cv
379.602 88.461 380.43 90.477 382.077 92.088 cv
383.724 93.69 385.767 94.5 388.197 94.5 cv
390.627 94.5 392.625 93.717 394.2 92.142 cv
395.766 90.576 396.549 88.578 396.549 86.139 cv
396.549 83.709 395.73 81.666 394.083 80.028 cv
392.436 78.381 390.474 77.553 388.197 77.553 cv
217.017 77.319 mo
214.704 77.319 212.76 78.102 211.194 79.668 cv
209.628 81.234 208.836 83.142 208.836 85.383 cv
208.836 87.696 209.628 89.622 211.194 91.152 cv
212.76 92.682 214.704 93.447 217.017 93.447 cv
219.339 93.447 221.238 92.7 222.732 91.206 cv
224.226 89.712 224.973 87.813 224.973 85.491 cv
224.973 83.178 224.19 81.234 222.624 79.668 cv
221.049 78.102 219.186 77.319 217.017 77.319 cv
131.544 305.001 mo
95.508 305.001 li
94.608 303.102 93.438 301.419 91.98 299.961 cv
88.173 296.154 82.845 294.246 75.987 294.246 cv
69.642 294.246 64.944 296.667 61.902 301.482 cv
61.038 303.039 60.318 304.209 59.751 305.001 cv
55.206 305.001 li
55.107 304.542 55.053 304.011 55.053 303.381 cv
55.053 293.238 58.725 284.733 66.078 277.884 cv
73.431 271.026 82.557 267.606 93.465 267.606 cv
105.885 267.606 115.389 271.476 121.986 279.216 cv
127.386 285.552 130.572 294.147 131.544 305.001 cv
96.561 58.041 mo
95.733 58.041 95.319 57.294 95.319 55.8 cv
95.319 55.6977 95.3195 55.5958 95.3207 55.494 cv
99.2588 55.494 li
98.6921 56.458 98.2487 57.1002 97.929 57.42 cv
97.515 57.834 97.056 58.041 96.561 58.041 cv
false sop
/0 
[/DeviceRGB] /CSA add_res
level3{
gsave
clp
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.921569 .67451 .101961 ]
/C1 [1 1 1 ]
/N 1.90443 
>>
]
/Bounds []
/Encode [1 0 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~s8N#srr2oqrVc]nrVcZlr;?Kjr;6Bgqtp9fqtg0cqYL'bq>'j^q>'j^q"XXZq"XXZp\4FVp\4FVp\+=S
p@e4Rp@\+Op%A"Np%A"Mo^qeJo^qeJoCMSFoCMSFoCMPDo()ABo()ABo'u8?naZ/>naZ/>nF5r:nF5r:
nF5r:nF,i7n*f`6n*f`6n*f`5mdBN2mdBN2mdBN2mdBK0mHs<.mHs<.mHs<.mHs<.m-O**m-O**m-O**
m-O**m-O**m-O*)lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&
~>
<~s8Muqr;6BfqYBp]p\4CSp%7nJoCDGAnF5o8mdBK/m-F!&lKRQski_-kjlPRaj5].YiSi_Qhr!;Ih;-lA
gY:K:g=b03f[na+f%&=$eC;srdaHRkdEp7dcd0n^c-=MWbfe2Qb0%iJaiMQEa2c6?`l5p9`5KU3_o'@.
_SO()^qdb#^V@Ls^:q:o]tD"j]Xtef]"5Ja\[f8]\@B&Y\$riU[^NWQ[C*EM[C!<J['[0GZa7!DZEgdA
Z*CR=Z*CO;Yct@9YHP.5YHP.5Y-+q1Y-+q1Xf\_-Xf\_-Xf\_,XK8M)XK8M)XK8M)XK8M)XK8M)XK8M)
~>
<~s8Dijq"F@OnaGo4lKRKojPo.UhV?i<f@JI#dEp1`bK@oH`PfX0^V7@m\[],V['Hs?Y-"b)WMcViUS=HS
St2@>R?s5)P`h/jO,]*VMMR%BKnP)0J:E#rI!U'_GBS+NF)l5<DJa3*C2%?oAn>L_@UWYO?<pf?>$5!1
=&r=#;c6Ih:esh\9M8#N8Ou?A7R]^46UF((5X.Fr4Zkef3]T2[2`EWQ2)I-G1,:R=0JG.4/hJY+/1W5#
.Ocep-mpAi-71#b,pX`\,9nBV+sA*P+<VdK+!2OF*Zc=B*??+>*#oq;)]K_8)]K\6)B'M4)B'M4)B'M4
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
newpath
12.645 305.001 mo
7.641 305.001 li
8.46 304.821 9.315 304.722 10.215 304.722 cv
11.061 304.722 11.871 304.821 12.645 305.001 cv
level3{
gsave
clp
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.929412 .713726 .211765 ]
/C1 [1 1 1 ]
/N 1.90443 
>>
]
/Bounds []
/Encode [1 0 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~s8N#srr2orrVc]nrVc]nr;?Kjr;?Kjqtp9fqtp9fqYL'bqYL'bqYBs_q>'j^q>'g\q"XXZq"XXYp\4FV
p\4FVp@e4Rp@e4Rp@e4Qp%A"Np%A"Np%7nKo^qeJo^qeJo^h\GoCMSFoCMSFoCDJCo()ABo()ABo()>@
naZ/>naZ/>naZ/>nF5r:nF5r:nF5r:nF5r:nF,i7n*f`6n*f`6n*f`6n*f`6mdBN2mdBN2mdBN2mdBN2
mdBN2mdBN2mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.
~>
<~s8Muqr;?HhqYL$`q"XUXp@e1Po^qbHo()>@nF5o8mdBK0m-O'(lK[Wukih6nkN:pgjlGL`j5].YiSibR
i8<GKhVR)Egt^]>gY1B8g"G$1f[na,f%/C%e^W*ue'ldodaHOjdEp7ecd0q_cHa\Zc-4DUbKJ)Ob0%lK
aiVWFaN2EBa2Z-=`l5p9`Pf^5`5BL1_ns:-_SO()_83q&^qd_"^V@Ot^:q=q]tM+m]tM(k]Y(ni]=Y\e
]=YYc]"5Ja]",A^\[f8]\[]/Z\@B&Y\@B#W\$riU\$riU\$rfS[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ
~>
<~s8Dllq=jUToC;><mHj-&kN:jcio&_NgtUN7f@AC"dEp4abfe/Ma2Z'8_SO"$]tCqe\@8oRZa-j?Y-"e+
Wi;nnV50l\TqJ!JS=>t8R$X,(P`q8mOH5E]N/NRMLkg_=KS+l-J:E#rI!^0cH$FOVF`_\GEcH&:DJj<-
CMITuBP1siARo:\@UW\Q?X@&E>[1K:>$4s0=&r@%<E)mq;Gp@g:esk^:/+DU91qlL8P)HD7n6'=7R]a6
6pj=/6:*t(5sR\#5<h=q5!;%l4Zkhh4$,Mc3]];_3B9)[3&ilW3&iiU2`EZS2`<QP2E!HO2E!HO2E!HO
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
newpath
.504 251.64 mo
.504 234.837 li
1.863 235.197 3.006 235.827 3.924 236.736 cv
5.418 238.23 6.165 240.327 6.165 243.018 cv
6.165 245.799 5.292 248.04 3.546 249.732 cv
2.673 250.578 1.656 251.217 .504 251.64 cv
level3{
gsave
clp
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
9.324 298.872 mo
8.721 298.872 8.028 298.35 7.227 297.306 cv
6.417 296.262 5.697 294.939 5.04 293.346 cv
4.392 291.753 3.843 290.061 3.393 288.27 cv
2.943 286.479 2.718 284.832 2.718 283.338 cv
2.718 280.755 3.258 278.064 4.356 275.274 cv
5.445 272.484 7.182 269.253 9.576 265.563 cv
11.763 262.278 13.5 259.542 14.787 257.355 cv
16.083 255.159 17.082 253.224 17.775 251.523 cv
18.468 249.84 18.936 248.247 19.188 246.744 cv
19.44 245.25 19.566 243.558 19.566 241.668 cv
19.566 235.989 18.27 231.633 15.687 228.6 cv
13.104 225.567 9.369 224.046 4.5 224.046 cv
3.087 224.046 1.755 224.208 .504 224.496 cv
.504 221.481 li
.918 221.346 1.323 221.202 1.746 221.085 cv
4.779 220.302 8.532 219.906 13.005 219.906 cv
21.447 219.906 28.053 221.94 32.823 226.008 cv
37.593 230.076 39.978 235.692 39.978 242.865 cv
39.978 248.337 38.745 253.116 36.261 257.202 cv
35.37 258.597 34.596 259.767 33.957 260.712 cv
33.309 261.657 32.364 262.728 31.122 263.925 cv
29.88 265.122 28.143 266.688 25.911 268.632 cv
23.679 270.567 20.583 273.285 16.614 276.768 cv
13.734 279.36 11.646 281.7 10.359 283.788 cv
9.072 285.876 8.424 288.072 8.424 290.358 cv
8.424 291.159 8.496 291.951 8.649 292.752 cv
8.802 293.544 9.126 294.642 9.621 296.037 cv
9.918 297.135 10.071 297.774 10.071 297.981 cv
10.071 298.575 9.819 298.872 9.324 298.872 cv
level3{
gsave
clp
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
129.771 202.653 mo
124.623 202.653 120.312 200.952 116.829 197.55 cv
113.337 194.148 111.6 189.882 111.6 184.734 cv
111.6 179.757 113.337 175.527 116.829 172.044 cv
120.312 168.552 124.623 166.815 129.771 166.815 cv
134.577 166.815 138.726 168.552 142.209 172.044 cv
145.701 175.527 147.438 179.838 147.438 184.986 cv
147.438 190.125 145.782 194.355 142.461 197.676 cv
139.14 200.997 134.91 202.653 129.771 202.653 cv
level3{
gsave
clp
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
128.367 156.924 mo
127.377 156.924 126.216 156.06 124.893 154.314 cv
123.57 152.577 122.373 150.381 121.293 147.735 cv
120.222 145.08 119.313 142.263 118.566 139.284 cv
117.828 136.305 117.45 133.569 117.45 131.085 cv
117.45 126.783 118.359 122.31 120.177 117.666 cv
121.995 113.031 124.884 107.649 128.844 101.52 cv
132.48 96.048 135.369 91.503 137.52 87.849 cv
139.662 84.213 141.309 80.982 142.47 78.165 cv
143.622 75.348 144.405 72.702 144.819 70.218 cv
145.233 67.725 145.44 64.917 145.44 61.767 cv
145.44 59.5554 145.322 57.4647 145.086 55.494 cv
178.716 55.494 li
179.188 58.0965 179.424 60.8497 179.424 63.756 cv
179.424 72.864 177.363 80.811 173.232 87.606 cv
171.738 89.928 170.46 91.872 169.389 93.447 cv
168.309 95.013 166.743 96.795 164.682 98.784 cv
162.612 100.773 159.714 103.383 155.997 106.614 cv
152.28 109.845 147.123 114.354 140.508 120.15 cv
135.72 124.461 132.246 128.349 130.104 131.832 cv
127.953 135.306 126.882 138.951 126.882 142.758 cv
126.882 144.081 126.999 145.413 127.251 146.736 cv
127.503 148.059 128.034 149.886 128.862 152.199 cv
129.357 154.026 129.609 155.106 129.609 155.43 cv
129.609 156.429 129.195 156.924 128.367 156.924 cv
107.244 79.407 mo
101.943 79.407 97.587 77.625 94.167 74.061 cv
90.747 70.506 89.037 65.907 89.037 60.273 cv
89.037 58.658 89.1557 57.0652 89.3918 55.494 cv
95.3207 55.494 li
95.3195 55.5958 95.319 55.6977 95.319 55.8 cv
95.319 57.294 95.733 58.041 96.561 58.041 cv
97.056 58.041 97.515 57.834 97.929 57.42 cv
98.2487 57.1002 98.6921 56.458 99.2588 55.494 cv
120.972 55.494 li
122.421 57.7489 123.147 60.5823 123.147 63.999 cv
123.147 68.643 121.698 72.369 118.8 75.186 cv
115.902 77.994 112.05 79.407 107.244 79.407 cv
level3{
gsave
clp
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
266.643 280.755 mo
265.995 280.755 265.239 280.188 264.375 279.054 cv
263.52 277.92 262.737 276.489 262.035 274.77 cv
261.333 273.042 260.739 271.206 260.262 269.262 cv
259.767 267.318 259.533 265.536 259.533 263.916 cv
259.533 261.108 260.127 258.192 261.324 255.168 cv
262.521 252.153 264.42 248.643 267.03 244.647 cv
269.415 241.083 271.323 238.113 272.736 235.737 cv
274.149 233.37 275.229 231.264 275.994 229.428 cv
276.759 227.592 277.272 225.864 277.542 224.244 cv
277.812 222.624 277.947 220.797 277.947 218.736 cv
277.947 212.589 276.543 207.864 273.726 204.57 cv
270.9 201.276 266.841 199.629 261.531 199.629 cv
256.869 199.629 252.963 201.096 249.822 204.003 cv
246.681 206.919 245.106 210.537 245.106 214.857 cv
245.106 215.829 245.376 216.315 245.916 216.315 cv
246.24 216.315 246.537 216.18 246.807 215.91 cv
247.077 215.64 247.482 215.019 248.022 214.047 cv
249.318 211.995 251.316 210.969 254.016 210.969 cv
256.932 210.969 259.191 211.779 260.811 213.399 cv
262.44 215.019 263.241 217.287 263.241 220.194 cv
263.241 223.218 262.296 225.648 260.415 227.484 cv
258.525 229.32 256.014 230.238 252.882 230.238 cv
249.426 230.238 246.6 229.077 244.404 226.755 cv
242.208 224.433 241.11 221.436 241.11 217.764 cv
241.11 214.533 241.839 211.428 243.297 208.458 cv
244.755 205.488 246.78 202.977 249.372 200.925 cv
252.18 198.756 255.231 197.235 258.525 196.371 cv
261.819 195.498 265.896 195.066 270.756 195.066 cv
279.936 195.066 287.118 197.28 292.302 201.726 cv
297.486 206.163 300.087 212.265 300.087 220.032 cv
300.087 225.972 298.728 231.156 296.028 235.575 cv
295.047 237.087 294.21 238.356 293.508 239.391 cv
292.806 240.417 291.78 241.569 290.421 242.865 cv
289.071 244.161 287.181 245.862 284.742 247.968 cv
282.312 250.074 278.928 253.017 274.599 256.788 cv
271.458 259.596 269.19 262.134 267.777 264.402 cv
266.373 266.67 265.671 269.046 265.671 271.521 cv
265.671 272.394 265.752 273.258 265.914 274.122 cv
266.076 274.977 266.427 276.165 266.967 277.677 cv
267.291 278.865 267.453 279.567 267.453 279.783 cv
267.453 280.431 267.183 280.755 266.643 280.755 cv
level3{
gsave
clp
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
277.551 305.001 mo
257.508 305.001 li
256.392 303.21 255.816 301.149 255.816 298.8 cv
255.816 295.569 256.95 292.824 259.209 290.556 cv
261.477 288.297 264.276 287.163 267.615 287.163 cv
270.738 287.163 273.438 288.297 275.697 290.556 cv
277.956 292.824 279.09 295.623 279.09 298.962 cv
279.09 301.257 278.568 303.264 277.551 305.001 cv
level3{
gsave
clp
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
186.957 204.174 mo
186.552 204.174 186.084 203.814 185.535 203.103 cv
184.995 202.392 184.509 201.492 184.068 200.412 cv
183.627 199.323 183.258 198.171 182.952 196.956 cv
182.646 195.732 182.493 194.616 182.493 193.599 cv
182.493 191.835 182.862 190.008 183.609 188.109 cv
184.347 186.21 185.526 184.005 187.146 181.503 cv
188.631 179.262 189.81 177.399 190.683 175.905 cv
191.556 174.42 192.231 173.097 192.708 171.945 cv
193.176 170.793 193.5 169.704 193.662 168.687 cv
193.833 167.679 193.914 166.518 193.914 165.231 cv
193.914 161.37 193.041 158.409 191.277 156.339 cv
189.522 154.269 186.984 153.234 183.672 153.234 cv
180.765 153.234 178.335 154.152 176.373 155.979 cv
174.411 157.815 173.43 160.083 173.43 162.792 cv
173.43 163.404 173.592 163.71 173.934 163.71 cv
174.141 163.71 174.321 163.62 174.492 163.458 cv
174.663 163.287 174.915 162.9 175.257 162.288 cv
176.067 161.001 177.327 160.353 179.019 160.353 cv
180.846 160.353 182.268 160.866 183.294 161.883 cv
184.302 162.9 184.815 164.322 184.815 166.149 cv
184.815 168.048 184.221 169.569 183.033 170.721 cv
181.845 171.873 180.27 172.449 178.308 172.449 cv
176.139 172.449 174.357 171.729 172.953 170.271 cv
171.558 168.813 170.856 166.932 170.856 164.628 cv
170.856 162.594 171.315 160.641 172.233 158.778 cv
173.142 156.915 174.411 155.34 176.04 154.053 cv
177.804 152.694 179.712 151.74 181.782 151.2 cv
183.843 150.651 186.399 150.381 189.45 150.381 cv
195.21 150.381 199.71 151.776 202.959 154.557 cv
206.217 157.338 207.837 161.172 207.837 166.05 cv
207.837 169.776 206.991 173.025 205.308 175.806 cv
204.696 176.76 204.174 177.552 203.733 178.2 cv
203.292 178.839 202.653 179.568 201.807 180.387 cv
200.961 181.197 199.782 182.268 198.261 183.582 cv
196.74 184.905 194.625 186.75 191.925 189.126 cv
189.963 190.89 188.55 192.483 187.668 193.905 cv
186.786 195.327 186.354 196.821 186.354 198.378 cv
186.354 198.918 186.399 199.458 186.498 200.007 cv
186.606 200.547 186.822 201.294 187.164 202.239 cv
187.371 202.986 187.47 203.427 187.47 203.562 cv
187.47 203.967 187.299 204.174 186.957 204.174 cv
level3{
gsave
clp
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
187.56 222.921 mo
185.454 222.921 183.699 222.228 182.277 220.833 cv
180.846 219.447 180.135 217.701 180.135 215.604 cv
180.135 213.57 180.846 211.842 182.277 210.42 cv
183.699 208.998 185.454 208.287 187.56 208.287 cv
189.522 208.287 191.214 208.998 192.636 210.42 cv
194.067 211.842 194.778 213.606 194.778 215.703 cv
194.778 217.809 194.094 219.528 192.744 220.887 cv
191.385 222.237 189.657 222.921 187.56 222.921 cv
level3{
gsave
clp
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
49.167 163.485 mo
48.069 163.485 47.16 163.125 46.422 162.405 cv
45.675 161.685 45.306 160.776 45.306 159.687 cv
45.306 158.625 45.675 157.734 46.422 156.996 cv
47.16 156.249 48.069 155.88 49.167 155.88 cv
50.184 155.88 51.066 156.249 51.804 156.996 cv
52.542 157.734 52.911 158.643 52.911 159.741 cv
52.911 160.83 52.56 161.73 51.858 162.432 cv
51.156 163.134 50.256 163.485 49.167 163.485 cv
level3{
gsave
clp
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
48.843 153.792 mo
48.627 153.792 48.384 153.612 48.105 153.234 cv
47.817 152.865 47.565 152.406 47.34 151.839 cv
47.106 151.272 46.917 150.669 46.764 150.039 cv
46.602 149.4 46.521 148.824 46.521 148.293 cv
46.521 147.375 46.719 146.421 47.106 145.44 cv
47.502 144.45 48.123 143.298 48.978 141.993 cv
49.761 140.832 50.382 139.86 50.85 139.086 cv
51.309 138.312 51.669 137.619 51.912 137.025 cv
52.164 136.422 52.335 135.864 52.425 135.333 cv
52.515 134.802 52.56 134.199 52.56 133.533 cv
52.56 131.526 52.092 129.978 51.174 128.907 cv
50.247 127.827 48.924 127.287 47.187 127.287 cv
45.657 127.287 44.379 127.764 43.353 128.718 cv
42.327 129.672 41.814 130.851 41.814 132.264 cv
41.814 132.579 41.895 132.741 42.075 132.741 cv
42.183 132.741 42.282 132.696 42.363 132.606 cv
42.453 132.516 42.588 132.318 42.768 132.003 cv
43.191 131.328 43.839 130.995 44.721 130.995 cv
45.675 130.995 46.413 131.256 46.944 131.787 cv
47.475 132.318 47.736 133.056 47.736 134.01 cv
47.736 135 47.43 135.792 46.809 136.386 cv
46.197 136.989 45.378 137.286 44.352 137.286 cv
43.218 137.286 42.3 136.908 41.571 136.152 cv
40.851 135.396 40.491 134.415 40.491 133.218 cv
40.491 132.156 40.725 131.139 41.202 130.176 cv
41.679 129.204 42.345 128.385 43.191 127.71 cv
44.109 126.999 45.108 126.504 46.179 126.216 cv
47.259 125.937 48.591 125.793 50.184 125.793 cv
53.181 125.793 55.53 126.513 57.222 127.971 cv
58.923 129.42 59.769 131.418 59.769 133.956 cv
59.769 135.9 59.328 137.592 58.437 139.032 cv
58.122 139.527 57.852 139.941 57.618 140.274 cv
57.393 140.616 57.051 140.994 56.61 141.417 cv
56.169 141.84 55.548 142.389 54.756 143.082 cv
53.955 143.766 52.857 144.729 51.435 145.962 cv
50.418 146.88 49.671 147.708 49.212 148.455 cv
48.753 149.193 48.519 149.967 48.519 150.777 cv
48.519 151.065 48.546 151.344 48.6 151.623 cv
48.654 151.911 48.771 152.298 48.942 152.793 cv
49.05 153.18 49.104 153.405 49.104 153.477 cv
49.104 153.693 49.014 153.792 48.843 153.792 cv
level3{
gsave
clp
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
98.577 150.237 mo
97.749 150.237 97.047 149.958 96.489 149.409 cv
95.922 148.86 95.643 148.176 95.643 147.348 cv
95.643 146.538 95.922 145.863 96.489 145.296 cv
97.047 144.738 97.749 144.45 98.577 144.45 cv
99.351 144.45 100.017 144.738 100.584 145.296 cv
101.142 145.863 101.43 146.556 101.43 147.384 cv
101.43 148.212 101.16 148.896 100.62 149.436 cv
100.089 149.967 99.405 150.237 98.577 150.237 cv
level3{
gsave
clp
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
98.307 142.848 mo
98.145 142.848 97.965 142.713 97.749 142.434 cv
97.533 142.155 97.335 141.795 97.164 141.372 cv
96.984 140.94 96.84 140.49 96.714 140.004 cv
96.597 139.527 96.534 139.086 96.534 138.69 cv
96.534 137.988 96.687 137.268 96.975 136.521 cv
97.272 135.774 97.749 134.91 98.397 133.92 cv
98.991 133.038 99.459 132.3 99.81 131.715 cv
100.161 131.13 100.431 130.608 100.62 130.158 cv
100.809 129.699 100.935 129.276 101.007 128.871 cv
101.07 128.475 101.106 128.016 101.106 127.512 cv
101.106 125.991 100.755 124.821 100.062 124.011 cv
99.369 123.192 98.361 122.787 97.056 122.787 cv
95.904 122.787 94.941 123.147 94.167 123.867 cv
93.384 124.587 92.997 125.478 92.997 126.549 cv
92.997 126.792 93.069 126.909 93.204 126.909 cv
93.42 126.81 li
93.492 126.747 93.591 126.594 93.726 126.351 cv
94.041 125.838 94.536 125.586 95.202 125.586 cv
95.922 125.586 96.489 125.793 96.885 126.189 cv
97.29 126.594 97.488 127.152 97.488 127.872 cv
97.488 128.619 97.254 129.222 96.786 129.672 cv
96.318 130.131 95.697 130.356 94.923 130.356 cv
94.068 130.356 93.366 130.068 92.817 129.492 cv
92.277 128.916 91.998 128.178 91.998 127.269 cv
91.998 126.468 92.178 125.703 92.538 124.965 cv
92.898 124.236 93.402 123.615 94.041 123.102 cv
94.734 122.58 95.49 122.202 96.3 121.995 cv
97.119 121.788 98.127 121.68 99.324 121.68 cv
101.592 121.68 103.365 122.22 104.643 123.309 cv
105.93 124.407 106.569 125.91 106.569 127.836 cv
106.569 129.303 106.236 130.581 105.561 131.679 cv
105.327 132.048 105.12 132.363 104.94 132.615 cv
104.769 132.876 104.517 133.155 104.184 133.479 cv
103.851 133.803 103.383 134.217 102.78 134.739 cv
102.177 135.261 101.34 135.99 100.278 136.926 cv
99.495 137.619 98.937 138.249 98.586 138.807 cv
98.244 139.365 98.073 139.959 98.073 140.571 cv
98.073 140.778 98.091 140.994 98.127 141.21 cv
98.172 141.426 98.253 141.714 98.388 142.092 cv
98.469 142.38 98.514 142.56 98.514 142.614 cv
98.514 142.776 98.442 142.848 98.307 142.848 cv
level3{
gsave
clp
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
73.368 221.535 mo
71.901 221.535 70.677 221.049 69.678 220.086 cv
68.688 219.114 68.193 217.899 68.193 216.432 cv
68.193 215.01 68.688 213.813 69.678 212.814 cv
70.677 211.824 71.901 211.329 73.368 211.329 cv
74.736 211.329 75.924 211.824 76.914 212.814 cv
77.904 213.813 78.399 215.037 78.399 216.504 cv
78.399 217.971 77.931 219.177 76.986 220.122 cv
76.041 221.067 74.835 221.535 73.368 221.535 cv
level3{
gsave
clp
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
72.936 208.521 mo
72.657 208.521 72.324 208.278 71.946 207.783 cv
71.568 207.279 71.235 206.658 70.929 205.902 cv
70.623 205.146 70.362 204.345 70.146 203.49 cv
69.939 202.644 69.831 201.861 69.831 201.15 cv
69.831 199.926 70.092 198.648 70.614 197.325 cv
71.127 196.002 71.955 194.472 73.089 192.726 cv
74.124 191.16 74.952 189.864 75.564 188.82 cv
76.176 187.785 76.653 186.867 76.986 186.066 cv
77.31 185.256 77.535 184.5 77.652 183.789 cv
77.769 183.087 77.832 182.286 77.832 181.386 cv
77.832 178.686 77.22 176.625 75.987 175.185 cv
74.763 173.745 72.99 173.025 70.668 173.025 cv
68.643 173.025 66.942 173.664 65.574 174.933 cv
64.197 176.211 63.513 177.795 63.513 179.685 cv
63.513 180.108 63.63 180.324 63.873 180.324 cv
64.008 180.324 64.143 180.261 64.26 180.144 cv
64.377 180.027 64.557 179.757 64.791 179.325 cv
65.358 178.434 66.231 177.984 67.41 177.984 cv
68.688 177.984 69.678 178.335 70.389 179.046 cv
71.1 179.757 71.451 180.747 71.451 182.025 cv
71.451 183.348 71.037 184.41 70.209 185.211 cv
69.381 186.012 68.283 186.417 66.915 186.417 cv
65.403 186.417 64.161 185.904 63.189 184.896 cv
62.217 183.879 61.731 182.565 61.731 180.963 cv
61.731 179.541 62.046 178.182 62.685 176.886 cv
63.324 175.581 64.215 174.483 65.349 173.592 cv
66.573 172.638 67.914 171.972 69.354 171.594 cv
70.794 171.216 72.576 171.027 74.709 171.027 cv
78.723 171.027 81.864 171.999 84.141 173.934 cv
86.409 175.878 87.543 178.551 87.543 181.953 cv
87.543 184.554 86.949 186.813 85.77 188.757 cv
85.338 189.414 84.978 189.972 84.672 190.422 cv
84.366 190.872 83.916 191.376 83.322 191.943 cv
82.728 192.51 81.9 193.257 80.838 194.175 cv
79.776 195.093 78.3 196.38 76.41 198.036 cv
75.042 199.26 74.043 200.376 73.431 201.366 cv
72.819 202.356 72.513 203.4 72.513 204.48 cv
72.513 204.858 72.549 205.245 72.621 205.614 cv
72.684 206.001 72.837 206.514 73.08 207.18 cv
73.224 207.693 73.287 208.008 73.287 208.098 cv
73.287 208.386 73.17 208.521 72.936 208.521 cv
level3{
gsave
clp
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
225.531 187.344 mo
224.883 187.344 224.127 186.777 223.263 185.634 cv
222.408 184.5 221.625 183.06 220.923 181.332 cv
220.221 179.595 219.627 177.75 219.15 175.806 cv
218.664 173.853 218.421 172.062 218.421 170.442 cv
218.421 167.625 219.015 164.7 220.212 161.667 cv
221.409 158.634 223.308 155.115 225.918 151.101 cv
228.303 147.528 230.211 144.549 231.624 142.164 cv
233.037 139.788 234.126 137.673 234.882 135.828 cv
235.647 133.992 236.16 132.255 236.43 130.635 cv
236.7 129.006 236.835 127.161 236.835 125.109 cv
236.835 118.926 235.422 114.192 232.596 110.889 cv
229.761 107.586 225.675 105.93 220.347 105.93 cv
215.667 105.93 211.743 107.397 208.593 110.322 cv
205.434 113.247 203.85 116.874 203.85 121.203 cv
203.85 122.184 204.129 122.67 204.669 122.67 cv
204.993 122.67 205.29 122.535 205.56 122.265 cv
205.83 121.995 206.235 121.365 206.775 120.393 cv
208.08 118.332 210.087 117.306 212.796 117.306 cv
215.721 117.306 217.989 118.116 219.618 119.745 cv
221.238 121.365 222.057 123.642 222.057 126.567 cv
222.057 129.6 221.103 132.039 219.213 133.884 cv
217.314 135.72 214.794 136.647 211.653 136.647 cv
208.188 136.647 205.353 135.477 203.157 133.146 cv
200.961 130.815 199.854 127.818 199.854 124.128 cv
199.854 120.879 200.583 117.765 202.05 114.786 cv
203.508 111.807 205.542 109.287 208.134 107.226 cv
210.951 105.057 214.011 103.536 217.314 102.663 cv
220.617 101.799 224.703 101.358 229.581 101.358 cv
238.779 101.358 245.979 103.59 251.172 108.036 cv
256.374 112.482 258.975 118.602 258.975 126.405 cv
258.975 132.363 257.616 137.565 254.916 142.002 cv
253.935 143.523 253.098 144.792 252.396 145.827 cv
251.694 146.853 250.668 148.023 249.309 149.319 cv
247.959 150.615 246.069 152.325 243.63 154.44 cv
241.2 156.546 237.816 159.498 233.487 163.287 cv
230.346 166.104 228.078 168.651 226.674 170.928 cv
225.261 173.205 224.559 175.59 224.559 178.074 cv
224.559 178.947 224.64 179.811 224.802 180.684 cv
224.964 181.548 225.315 182.736 225.864 184.257 cv
226.188 185.445 226.35 186.147 226.35 186.363 cv
226.35 187.02 226.071 187.344 225.531 187.344 cv
level3{
gsave
clp
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
226.575 217.161 mo
223.218 217.161 220.392 216.054 218.124 213.831 cv
215.847 211.608 214.704 208.818 214.704 205.452 cv
214.704 202.203 215.847 199.44 218.124 197.163 cv
220.392 194.886 223.218 193.743 226.575 193.743 cv
229.725 193.743 232.434 194.886 234.711 197.163 cv
236.988 199.44 238.122 202.257 238.122 205.623 cv
238.122 208.98 237.042 211.743 234.873 213.912 cv
232.704 216.081 229.941 217.161 226.575 217.161 cv
level3{
gsave
clp
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
387.441 72.918 mo
386.973 72.918 386.424 72.504 385.803 71.685 cv
385.173 70.857 384.606 69.822 384.102 68.562 cv
383.598 67.311 383.166 65.979 382.815 64.566 cv
382.464 63.153 382.293 61.857 382.293 60.687 cv
382.293 59.0136 382.586 57.2792 383.17 55.494 cv
393.213 55.494 li
393.206 55.5 393.199 55.506 393.192 55.512 cv
390.924 57.546 389.277 59.391 388.26 61.038 cv
387.243 62.685 386.739 64.413 386.739 66.213 cv
386.739 66.843 386.793 67.473 386.91 68.094 cv
387.027 68.724 387.288 69.588 387.675 70.686 cv
387.909 71.541 388.026 72.054 388.026 72.207 cv
388.026 72.684 387.828 72.918 387.441 72.918 cv
level3{
gsave
clp
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
388.197 94.5 mo
385.767 94.5 383.724 93.69 382.077 92.088 cv
380.43 90.477 379.602 88.461 379.602 86.022 cv
379.602 83.673 380.43 81.666 382.077 80.028 cv
383.724 78.381 385.767 77.553 388.197 77.553 cv
390.474 77.553 392.436 78.381 394.083 80.028 cv
395.73 81.666 396.549 83.709 396.549 86.139 cv
396.549 88.578 395.766 90.576 394.2 92.142 cv
392.625 93.717 390.627 94.5 388.197 94.5 cv
level3{
gsave
clp
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
385.587 237.024 mo
384.804 237.024 383.895 236.349 382.86 234.981 cv
381.834 233.622 380.898 231.903 380.061 229.824 cv
379.215 227.745 378.513 225.54 377.928 223.2 cv
377.352 220.869 377.064 218.727 377.064 216.783 cv
377.064 213.408 377.775 209.907 379.206 206.271 cv
380.637 202.635 382.914 198.423 386.046 193.617 cv
388.908 189.333 391.185 185.769 392.877 182.907 cv
394.569 180.054 395.874 177.525 396.783 175.32 cv
397.692 173.115 398.313 171.036 398.637 169.092 cv
398.961 167.148 399.123 164.943 399.123 162.477 cv
399.123 155.07 397.431 149.4 394.038 145.44 cv
390.645 141.48 385.758 139.5 379.368 139.5 cv
373.761 139.5 369.063 141.255 365.283 144.756 cv
361.503 148.266 359.613 152.613 359.613 157.797 cv
359.613 158.967 359.937 159.552 360.585 159.552 cv
360.972 159.552 361.332 159.39 361.656 159.066 cv
361.98 158.742 362.466 157.995 363.114 156.825 cv
364.671 154.359 367.074 153.126 370.314 153.126 cv
373.824 153.126 376.551 154.107 378.495 156.051 cv
380.439 157.995 381.42 160.722 381.42 164.223 cv
381.42 167.859 380.277 170.775 378.009 172.98 cv
375.732 175.194 372.717 176.292 368.955 176.292 cv
364.806 176.292 361.413 174.897 358.776 172.107 cv
356.139 169.317 354.825 165.717 354.825 161.307 cv
354.825 157.41 355.698 153.684 357.444 150.111 cv
359.199 146.538 361.629 143.523 364.743 141.057 cv
368.118 138.456 371.781 136.638 375.732 135.594 cv
379.692 134.55 384.588 134.028 390.429 134.028 cv
401.445 134.028 410.076 136.692 416.304 142.02 cv
422.523 147.348 425.637 154.683 425.637 164.025 cv
425.637 171.171 424.017 177.399 420.777 182.718 cv
419.607 184.536 418.608 186.057 417.762 187.29 cv
416.916 188.523 415.692 189.918 414.072 191.475 cv
412.452 193.032 410.184 195.084 407.259 197.604 cv
404.343 200.142 400.293 203.67 395.109 208.215 cv
391.347 211.59 388.629 214.641 386.937 217.368 cv
385.254 220.095 384.417 222.948 384.417 225.927 cv
384.417 226.971 384.516 228.006 384.705 229.05 cv
384.903 230.085 385.326 231.516 385.974 233.334 cv
386.361 234.756 386.559 235.602 386.559 235.854 cv
386.559 236.637 386.226 237.024 385.587 237.024 cv
level3{
gsave
clp
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
386.829 272.754 mo
382.806 272.754 379.431 271.422 376.704 268.758 cv
373.977 266.103 372.609 262.755 372.609 258.732 cv
372.609 254.826 373.977 251.514 376.704 248.796 cv
379.431 246.069 382.806 244.701 386.829 244.701 cv
390.6 244.701 393.849 246.069 396.576 248.796 cv
399.294 251.514 400.662 254.898 400.662 258.921 cv
400.662 262.944 399.366 266.256 396.765 268.857 cv
394.173 271.458 390.861 272.754 386.829 272.754 cv
level3{
gsave
clp
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
299.853 135.828 mo
299.682 135.828 299.475 135.675 299.241 135.36 cv
298.998 135.054 298.791 134.658 298.602 134.181 cv
298.404 133.713 298.242 133.209 298.116 132.678 cv
297.981 132.138 297.918 131.652 297.918 131.211 cv
297.918 130.437 298.08 129.645 298.404 128.817 cv
298.728 127.98 299.25 127.026 299.961 125.928 cv
300.618 124.947 301.131 124.137 301.518 123.489 cv
301.905 122.832 302.202 122.256 302.409 121.752 cv
302.616 121.248 302.76 120.78 302.832 120.33 cv
302.913 119.889 302.949 119.385 302.949 118.827 cv
302.949 117.135 302.562 115.839 301.788 114.939 cv
301.014 114.039 299.898 113.589 298.44 113.589 cv
297.162 113.589 296.091 113.985 295.227 114.786 cv
294.363 115.587 293.931 116.577 293.931 117.756 cv
293.931 118.026 294.012 118.161 294.156 118.161 cv
294.399 118.044 li
294.471 117.972 294.588 117.801 294.732 117.54 cv
295.092 116.973 295.641 116.694 296.379 116.694 cv
297.18 116.694 297.801 116.919 298.242 117.36 cv
298.683 117.801 298.908 118.422 298.908 119.223 cv
298.908 120.051 298.647 120.717 298.134 121.221 cv
297.612 121.725 296.928 121.977 296.064 121.977 cv
295.119 121.977 294.345 121.662 293.742 121.023 cv
293.139 120.384 292.842 119.565 292.842 118.557 cv
292.842 117.666 293.04 116.82 293.436 116.001 cv
293.841 115.191 294.399 114.498 295.101 113.94 cv
295.875 113.346 296.712 112.932 297.612 112.689 cv
298.512 112.455 299.628 112.338 300.96 112.338 cv
303.48 112.338 305.442 112.941 306.864 114.156 cv
308.286 115.371 308.997 117.045 308.997 119.178 cv
308.997 120.807 308.619 122.229 307.881 123.444 cv
307.62 123.858 307.386 124.2 307.197 124.488 cv
307.008 124.767 306.72 125.082 306.351 125.442 cv
305.982 125.793 305.469 126.261 304.803 126.837 cv
304.137 127.413 303.21 128.223 302.031 129.258 cv
301.176 130.023 300.555 130.725 300.168 131.346 cv
299.781 131.967 299.592 132.615 299.592 133.299 cv
299.592 133.533 299.61 133.767 299.655 134.01 cv
299.7 134.244 299.799 134.568 299.943 134.982 cv
300.033 135.306 300.078 135.504 300.078 135.558 cv
300.078 135.738 300.006 135.828 299.853 135.828 cv
level3{
gsave
clp
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
300.141 143.973 mo
299.223 143.973 298.458 143.676 297.828 143.064 cv
297.207 142.461 296.901 141.696 296.901 140.778 cv
296.901 139.887 297.207 139.131 297.828 138.51 cv
298.458 137.889 299.223 137.574 300.141 137.574 cv
301.005 137.574 301.743 137.889 302.364 138.51 cv
302.985 139.131 303.3 139.905 303.3 140.823 cv
303.3 141.741 303.003 142.497 302.409 143.091 cv
301.815 143.676 301.059 143.973 300.141 143.973 cv
level3{
gsave
clp
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
198.792 305.001 mo
194.04 305.001 li
194.157 304.497 194.31 303.984 194.517 303.462 cv
194.976 302.274 195.723 300.897 196.749 299.322 cv
197.685 297.918 198.423 296.757 198.981 295.821 cv
199.53 294.885 199.962 294.057 200.259 293.337 cv
200.556 292.617 200.754 291.933 200.862 291.294 cv
200.97 290.664 201.024 289.935 201.024 289.134 cv
201.024 286.713 200.475 284.859 199.368 283.563 cv
198.261 282.267 196.677 281.619 194.598 281.619 cv
192.771 281.619 191.25 282.186 190.017 283.338 cv
188.784 284.481 188.172 285.903 188.172 287.604 cv
188.172 287.982 188.28 288.18 188.487 288.18 cv
188.613 288.18 188.73 288.126 188.838 288.018 cv
188.946 287.91 189.108 287.667 189.315 287.289 cv
189.828 286.479 190.611 286.074 191.673 286.074 cv
192.825 286.074 193.707 286.389 194.346 287.028 cv
194.985 287.667 195.3 288.558 195.3 289.701 cv
195.3 290.898 194.931 291.852 194.193 292.572 cv
193.446 293.292 192.456 293.652 191.232 293.652 cv
189.873 293.652 188.748 293.193 187.875 292.284 cv
187.002 291.375 186.561 290.196 186.561 288.747 cv
186.561 287.478 186.849 286.254 187.425 285.084 cv
188.001 283.923 188.793 282.933 189.81 282.123 cv
190.917 281.277 192.114 280.683 193.41 280.341 cv
194.697 279.999 196.299 279.828 198.216 279.828 cv
201.816 279.828 204.642 280.701 206.676 282.447 cv
208.71 284.184 209.736 286.587 209.736 289.638 cv
209.736 291.978 209.205 294.012 208.143 295.758 cv
207.756 296.352 207.432 296.847 207.153 297.252 cv
206.883 297.657 206.478 298.107 205.947 298.62 cv
205.416 299.133 204.669 299.799 203.715 300.627 cv
202.761 301.455 201.438 302.607 199.737 304.101 cv
199.395 304.407 199.08 304.704 198.792 305.001 cv
level3{
gsave
clp
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
321.255 62.595 mo
320.058 62.595 319.059 62.199 318.249 61.407 cv
317.439 60.624 317.034 59.625 317.034 58.437 cv
317.034 57.285 317.439 56.295 318.249 55.494 cv
324.135 55.494 li
324.945 56.295 325.35 57.303 325.35 58.491 cv
325.35 59.688 324.963 60.669 324.198 61.443 cv
323.424 62.208 322.443 62.595 321.255 62.595 cv
level3{
gsave
clp
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
14.571 107.145 mo
13.977 107.145 13.293 106.632 12.51 105.597 cv
11.727 104.562 11.016 103.257 10.386 101.682 cv
9.747 100.107 9.207 98.433 8.775 96.66 cv
8.334 94.896 8.118 93.267 8.118 91.791 cv
8.118 89.235 8.658 86.571 9.738 83.817 cv
10.827 81.063 12.546 77.859 14.913 74.223 cv
17.082 70.974 18.81 68.265 20.088 66.096 cv
21.366 63.936 22.356 62.019 23.049 60.345 cv
23.733 58.671 24.201 57.096 24.453 55.62 cv
24.4599 55.5784 24.4663 55.5359 24.4729 55.494 cv
44.7485 55.494 li
44.3044 59.3844 43.1425 62.8709 41.265 65.952 cv
40.383 67.329 39.618 68.49 38.979 69.426 cv
38.34 70.362 37.404 71.415 36.18 72.594 cv
34.947 73.782 33.228 75.33 31.014 77.247 cv
28.8 79.164 25.731 81.846 21.798 85.293 cv
18.945 87.858 16.875 90.171 15.597 92.232 cv
14.319 94.302 13.68 96.471 13.68 98.73 cv
13.68 99.522 13.752 100.305 13.905 101.097 cv
14.049 101.88 14.373 102.96 14.868 104.337 cv
15.156 105.426 15.309 106.065 15.309 106.263 cv
15.309 106.848 15.057 107.145 14.571 107.145 cv
level3{
gsave
clp
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
2.061 61.083 mo
1.521 61.083 1.008 61.038 .504 60.975 cv
.504 55.494 li
10.928 55.494 li
10.4993 56.6684 9.83387 57.6944 8.928 58.572 cv
7.209 60.246 4.914 61.083 2.061 61.083 cv
level3{
gsave
clp
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
15.471 134.271 mo
12.42 134.271 9.855 133.263 7.785 131.247 cv
5.724 129.222 4.689 126.684 4.689 123.633 cv
4.689 120.681 5.724 118.17 7.785 116.1 cv
9.855 114.03 12.42 112.995 15.471 112.995 cv
18.324 112.995 20.79 114.03 22.86 116.1 cv
24.93 118.17 25.965 120.726 25.965 123.777 cv
25.965 126.837 24.975 129.348 23.004 131.319 cv
21.033 133.29 18.522 134.271 15.471 134.271 cv
level3{
gsave
clp
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
216.369 72.855 mo
215.919 72.855 215.397 72.468 214.794 71.685 cv
214.191 70.902 213.642 69.912 213.156 68.715 cv
212.67 67.527 212.256 66.249 211.914 64.908 cv
211.581 63.567 211.41 62.334 211.41 61.218 cv
211.41 59.3747 211.774 57.4667 212.518 55.494 cv
222.747 55.494 li
222.452 55.752 222.15 56.0157 221.841 56.286 cv
219.681 58.23 218.115 59.985 217.143 61.551 cv
216.18 63.117 215.694 64.764 215.694 66.474 cv
215.694 67.077 215.748 67.671 215.865 68.265 cv
215.973 68.868 216.216 69.687 216.594 70.731 cv
216.81 71.55 216.927 72.036 216.927 72.189 cv
216.927 72.63 216.738 72.855 216.369 72.855 cv
level3{
gsave
clp
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
217.017 93.447 mo
214.704 93.447 212.76 92.682 211.194 91.152 cv
209.628 89.622 208.836 87.696 208.836 85.383 cv
208.836 83.142 209.628 81.234 211.194 79.668 cv
212.76 78.102 214.704 77.319 217.017 77.319 cv
219.186 77.319 221.049 78.102 222.624 79.668 cv
224.19 81.234 224.973 83.178 224.973 85.491 cv
224.973 87.813 224.226 89.712 222.732 91.206 cv
221.238 92.7 219.339 93.447 217.017 93.447 cv
level3{
gsave
clp
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
317.79 236.403 mo
315.621 236.403 313.812 235.683 312.345 234.261 cv
310.878 232.83 310.149 231.03 310.149 228.87 cv
310.149 226.773 310.878 225 312.345 223.533 cv
313.812 222.066 315.621 221.337 317.79 221.337 cv
319.806 221.337 321.552 222.066 323.019 223.533 cv
324.477 225 325.215 226.809 325.215 228.978 cv
325.215 231.138 324.513 232.911 323.118 234.306 cv
321.723 235.701 319.95 236.403 317.79 236.403 cv
level3{
gsave
clp
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
317.205 217.125 mo
316.782 217.125 316.296 216.756 315.729 216.018 cv
315.171 215.289 314.667 214.362 314.208 213.246 cv
313.749 212.13 313.362 210.942 313.047 209.691 cv
312.732 208.431 312.579 207.279 312.579 206.226 cv
312.579 204.417 312.957 202.527 313.731 200.574 cv
314.496 198.621 315.72 196.353 317.403 193.77 cv
318.942 191.466 320.166 189.54 321.075 188.01 cv
321.984 186.471 322.677 185.103 323.172 183.924 cv
323.658 182.736 323.991 181.62 324.162 180.567 cv
324.342 179.523 324.432 178.335 324.432 177.012 cv
324.432 173.025 323.523 169.974 321.705 167.841 cv
319.896 165.717 317.277 164.646 313.866 164.646 cv
310.86 164.646 308.349 165.591 306.333 167.481 cv
304.308 169.362 303.3 171.702 303.3 174.492 cv
303.3 175.122 303.471 175.437 303.822 175.437 cv
304.029 175.437 304.218 175.347 304.398 175.176 cv
304.569 175.005 304.83 174.6 305.181 173.97 cv
306.018 172.647 307.314 171.981 309.06 171.981 cv
310.941 171.981 312.408 172.503 313.452 173.556 cv
314.505 174.6 315.027 176.067 315.027 177.948 cv
315.027 179.901 314.415 181.476 313.191 182.664 cv
311.967 183.852 310.347 184.446 308.322 184.446 cv
306.09 184.446 304.254 183.69 302.814 182.196 cv
301.374 180.693 300.654 178.749 300.654 176.382 cv
300.654 174.285 301.122 172.278 302.067 170.361 cv
303.003 168.435 304.308 166.815 305.982 165.483 cv
307.8 164.097 309.762 163.116 311.895 162.558 cv
314.019 162 316.647 161.721 319.788 161.721 cv
325.71 161.721 330.345 163.152 333.684 166.014 cv
337.032 168.876 338.706 172.818 338.706 177.849 cv
338.706 181.683 337.842 185.04 336.096 187.902 cv
335.475 188.874 334.935 189.702 334.476 190.359 cv
334.026 191.025 333.369 191.772 332.496 192.618 cv
331.623 193.455 330.408 194.553 328.842 195.912 cv
327.276 197.271 325.098 199.179 322.317 201.618 cv
320.301 203.436 318.834 205.074 317.934 206.541 cv
317.025 208.008 316.575 209.547 316.575 211.149 cv
316.575 211.707 316.629 212.274 316.728 212.832 cv
316.836 213.39 317.061 214.155 317.412 215.136 cv
317.619 215.901 317.727 216.351 317.727 216.495 cv
317.727 216.909 317.547 217.125 317.205 217.125 cv
level3{
gsave
clp
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
451.26 160.101 mo
448.434 160.101 446.076 159.174 444.168 157.311 cv
442.26 155.448 441.306 153.108 441.306 150.282 cv
441.306 147.555 442.26 145.242 444.168 143.334 cv
446.076 141.426 448.434 140.472 451.26 140.472 cv
453.897 140.472 456.165 141.426 458.073 143.334 cv
459.981 145.242 460.935 147.6 460.935 150.426 cv
460.935 153.243 460.026 155.556 458.208 157.374 cv
456.39 159.192 454.077 160.101 451.26 160.101 cv
level3{
gsave
clp
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
473.373 99.6287 mo
473.373 69.8215 li
473.415 69.8665 473.457 69.9115 473.499 69.957 cv
473.499 99.441 li
473.457 99.5041 473.415 99.5666 473.373 99.6287 cv
1 1 1 rgb
f
450.405 135.072 mo
449.856 135.072 449.217 134.595 448.488 133.641 cv
447.759 132.687 447.093 131.481 446.499 130.023 cv
445.905 128.574 445.401 127.026 444.987 125.388 cv
444.582 123.75 444.375 122.247 444.375 120.879 cv
444.375 118.521 444.87 116.064 445.878 113.517 cv
446.877 110.97 448.47 108.009 450.648 104.643 cv
452.655 101.646 454.248 99.144 455.427 97.146 cv
456.606 95.139 457.524 93.366 458.154 91.827 cv
458.793 90.279 459.225 88.821 459.45 87.453 cv
459.684 86.094 459.792 84.546 459.792 82.818 cv
459.792 77.634 458.613 73.656 456.255 70.884 cv
453.897 68.103 450.495 66.717 446.049 66.717 cv
442.152 66.717 438.885 67.95 436.257 70.398 cv
433.62 72.855 432.306 75.906 432.306 79.542 cv
432.306 80.361 432.531 80.775 432.99 80.775 cv
433.26 80.775 433.512 80.658 433.737 80.433 cv
433.971 80.199 434.313 79.677 434.763 78.858 cv
435.852 77.13 437.535 76.266 439.812 76.266 cv
442.269 76.266 444.177 76.95 445.545 78.318 cv
446.904 79.677 447.588 81.594 447.588 84.042 cv
447.588 86.589 446.796 88.641 445.203 90.189 cv
443.61 91.728 441.495 92.502 438.858 92.502 cv
435.942 92.502 433.557 91.53 431.685 89.568 cv
429.813 87.615 428.877 85.095 428.877 81.999 cv
428.877 79.272 429.489 76.653 430.722 74.151 cv
431.946 71.649 433.647 69.543 435.834 67.806 cv
438.192 65.979 440.766 64.701 443.538 63.963 cv
446.31 63.234 449.739 62.865 453.825 62.865 cv
461.547 62.865 467.595 64.737 471.96 68.472 cv
472.461 68.9074 472.932 69.3506 473.373 69.8215 cv
473.373 99.6287 li
473.236 99.8319 473.101 100.029 472.977 100.215 cv
472.383 101.079 471.519 102.06 470.385 103.149 cv
469.251 104.238 467.658 105.669 465.615 107.442 cv
463.563 109.215 460.728 111.699 457.092 114.876 cv
454.446 117.243 452.538 119.385 451.359 121.293 cv
450.18 123.201 449.586 125.208 449.586 127.296 cv
449.586 128.025 449.649 128.754 449.793 129.483 cv
449.928 130.203 450.225 131.211 450.675 132.48 cv
450.945 133.479 451.089 134.073 451.089 134.253 cv
451.089 134.802 450.855 135.072 450.405 135.072 cv
level3{
gsave
clp
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
267.939 99.216 mo
264.6 99.216 261.801 98.109 259.533 95.904 cv
257.274 93.69 256.14 90.918 256.14 87.579 cv
256.14 84.348 257.274 81.603 259.533 79.335 cv
261.801 77.076 264.6 75.942 267.939 75.942 cv
271.062 75.942 273.762 77.076 276.021 79.335 cv
278.289 81.603 279.414 84.402 279.414 87.741 cv
279.414 91.08 278.343 93.825 276.183 95.985 cv
274.032 98.136 271.278 99.216 267.939 99.216 cv
level3{
gsave
clp
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
266.967 69.462 mo
266.319 69.462 265.563 68.895 264.699 67.761 cv
263.844 66.627 263.061 65.196 262.359 63.468 cv
261.657 61.74 261.063 59.904 260.586 57.96 cv
260.373 57.1081 260.207 56.2856 260.087 55.494 cv
266.895 55.494 li
266.295 57.0259 265.995 58.6038 265.995 60.228 cv
265.995 61.092 266.076 61.956 266.238 62.82 cv
266.4 63.684 266.751 64.872 267.291 66.384 cv
267.615 67.572 267.777 68.274 267.777 68.49 cv
267.777 69.138 267.507 69.462 266.967 69.462 cv
level3{
gsave
clp
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
473.373 286.223 mo
473.373 267.538 li
473.416 267.635 473.458 267.733 473.499 267.831 cv
473.499 285.894 li
473.458 286.004 473.416 286.113 473.373 286.223 cv
1 1 1 rgb
f
456.579 305.001 mo
442.881 305.001 li
443.889 302.733 445.293 300.195 447.147 297.342 cv
449.154 294.327 450.747 291.816 451.944 289.809 cv
453.132 287.802 454.041 286.02 454.68 284.472 cv
455.319 282.915 455.76 281.457 455.985 280.089 cv
456.21 278.721 456.327 277.164 456.327 275.436 cv
456.327 270.234 455.139 266.238 452.772 263.448 cv
450.396 260.667 446.976 259.272 442.512 259.272 cv
438.588 259.272 435.312 260.505 432.666 262.971 cv
430.02 265.437 428.697 268.497 428.697 272.142 cv
428.697 272.97 428.922 273.375 429.381 273.375 cv
429.66 273.375 429.903 273.267 430.137 273.033 cv
430.362 272.808 430.704 272.286 431.163 271.458 cv
432.261 269.73 433.944 268.857 436.23 268.857 cv
438.696 268.857 440.613 269.541 441.981 270.918 cv
443.349 272.286 444.033 274.203 444.033 276.669 cv
444.033 279.225 443.232 281.277 441.639 282.825 cv
440.037 284.382 437.922 285.156 435.267 285.156 cv
432.351 285.156 429.948 284.175 428.076 282.213 cv
426.204 280.251 425.268 277.713 425.268 274.608 cv
425.268 271.872 425.889 269.244 427.122 266.733 cv
428.355 264.231 430.065 262.107 432.252 260.37 cv
434.628 258.534 437.202 257.256 439.992 256.518 cv
442.773 255.789 446.22 255.42 450.324 255.42 cv
458.082 255.42 464.148 257.292 468.531 261.045 cv
470.671 262.873 472.276 265.043 473.373 267.538 cv
473.373 286.223 li
472.903 287.427 472.341 288.585 471.681 289.674 cv
470.853 290.952 470.142 292.023 469.557 292.896 cv
468.963 293.76 468.09 294.741 466.947 295.839 cv
465.804 296.928 464.211 298.368 462.15 300.15 cv
460.692 301.41 458.829 303.03 456.579 305.001 cv
level3{
gsave
clp
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
153.819 165.474 mo
152.658 165.474 151.677 165.087 150.876 164.313 cv
150.084 163.539 149.688 162.567 149.688 161.397 cv
149.688 160.272 150.084 159.309 150.876 158.517 cv
151.677 157.725 152.658 157.329 153.819 157.329 cv
154.917 157.329 155.862 157.725 156.654 158.517 cv
157.446 159.309 157.842 160.29 157.842 161.46 cv
157.842 162.621 157.464 163.584 156.708 164.34 cv
155.952 165.096 154.989 165.474 153.819 165.474 cv
level3{
gsave
clp
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
153.459 155.124 mo
153.234 155.124 152.973 154.926 152.667 154.53 cv
152.37 154.134 152.1 153.63 151.857 153.027 cv
151.614 152.424 151.407 151.785 151.236 151.11 cv
151.065 150.435 150.984 149.814 150.984 149.247 cv
150.984 148.266 151.191 147.249 151.605 146.196 cv
152.019 145.143 152.685 143.919 153.594 142.524 cv
154.422 141.282 155.088 140.247 155.583 139.41 cv
156.069 138.582 156.447 137.853 156.708 137.214 cv
156.978 136.566 157.158 135.972 157.248 135.405 cv
157.347 134.838 157.392 134.199 157.392 133.479 cv
157.392 131.337 156.897 129.69 155.916 128.538 cv
154.935 127.386 153.513 126.819 151.65 126.819 cv
150.03 126.819 148.662 127.323 147.564 128.34 cv
146.466 129.357 145.917 130.617 145.917 132.129 cv
145.917 132.462 146.007 132.633 146.196 132.633 cv
146.313 132.633 146.412 132.588 146.511 132.489 cv
146.601 132.399 146.745 132.183 146.934 131.841 cv
147.384 131.13 148.077 130.77 149.022 130.77 cv
150.039 130.77 150.831 131.049 151.398 131.616 cv
151.965 132.183 152.244 132.975 152.244 133.992 cv
152.244 135.045 151.911 135.891 151.254 136.53 cv
150.597 137.169 149.715 137.493 148.626 137.493 cv
147.42 137.493 146.439 137.088 145.674 136.278 cv
144.909 135.468 144.522 134.424 144.522 133.146 cv
144.522 132.012 144.774 130.932 145.287 129.897 cv
145.791 128.862 146.502 127.98 147.402 127.269 cv
148.383 126.513 149.454 125.982 150.597 125.676 cv
151.749 125.379 153.171 125.226 154.863 125.226 cv
158.067 125.226 160.569 126 162.387 127.548 cv
164.187 129.096 165.096 131.22 165.096 133.938 cv
165.096 136.008 164.628 137.817 163.683 139.356 cv
163.341 139.887 163.053 140.328 162.81 140.688 cv
162.567 141.039 162.207 141.444 161.73 141.903 cv
161.262 142.353 160.605 142.947 159.759 143.676 cv
158.913 144.414 157.734 145.44 156.231 146.763 cv
155.133 147.735 154.341 148.626 153.855 149.418 cv
153.369 150.201 153.117 151.038 153.117 151.902 cv
153.117 152.199 153.144 152.505 153.207 152.802 cv
153.261 153.108 153.387 153.522 153.576 154.044 cv
153.684 154.458 153.738 154.71 153.738 154.782 cv
153.738 155.007 153.648 155.124 153.459 155.124 cv
level3{
gsave
clp
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
183.384 305.001 mo
131.544 305.001 li
130.572 294.147 127.386 285.552 121.986 279.216 cv
115.389 271.476 105.885 267.606 93.465 267.606 cv
82.557 267.606 73.431 271.026 66.078 277.884 cv
58.725 284.733 55.053 293.238 55.053 303.381 cv
55.053 304.011 55.107 304.542 55.206 305.001 cv
45.918 305.001 li
46.521 299.268 48.132 293.715 50.769 288.351 cv
54.189 281.367 58.95 275.472 65.034 270.648 cv
71.631 265.599 78.795 262.071 86.535 260.055 cv
94.275 258.039 103.851 257.031 115.263 257.031 cv
136.827 257.031 153.693 262.224 165.87 272.601 cv
175.59 280.881 181.422 291.69 183.384 305.001 cv
level3{
gsave
clp
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
55.206 305.001 mo
55.206 305.001 li
1 1 1 rgb
f
95.508 305.001 mo
59.751 305.001 li
60.318 304.209 61.038 303.039 61.902 301.482 cv
64.944 296.667 69.642 294.246 75.987 294.246 cv
82.845 294.246 88.173 296.154 91.98 299.961 cv
93.438 301.419 94.608 303.102 95.508 305.001 cv
level3{
gsave
clp
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.3332e-5 -305 305 -1.3332e-5 236.935 305 ] concat
clp
/1 /Gradient get_res exec grestore
}if
newpath
gsave % PSGState
473.499 65.997 mo
0 65.997 li
0 0 li
473.499 0 li
473.499 65.997 li
clp
473.499 55.494 mo
473.373 55.494 li
473.373 0 li
473.499 0 li
473.499 55.494 li
gsave % PSGState
clp
[1 0 0 -1 0 305 ] concat
/0 /CSA get_res setcolorspace
[.718963 0 0 55.9922 473.044 249.264 ] concat
snap_to_device
Adobe_AGM_Image/AGMIMG_filter currentfile /ASCII85Decode filter /RunLengthDecode filter ddf
<<
/ImageType 1
/Width 3 
/Height 233 
/ImageMatrix[3 0 0 -233 0 233 ]
/MultipleDataSources true
/BitsPerComponent 8 
/Decode[0 1 0 1 0 1 ]
/DataSource [
[AGMIMG_filter 3 string /readstring cvx /pop cvx] cvx
[AGMIMG_filter 3 string /readstring cvx /pop cvx] cvx
[AGMIMG_filter 3 string /readstring cvx /pop cvx] cvx
]
/NComponents 3 
/HostSepColorImage false 
/SkipImageProc {false}
/Operator /image
>>
%%BeginBinary: 1
img
k1e_4h65q*n<MgXh.b\Js%hNJh+?*cogS+6RRD`qJjb2YJjb2YJjb2YnO22%h+$*iqaoU>h-&QJoR6"Q
h3HKnlGrP;h:pcOh=^[Bj87@*c2YTZJ,~>

%%EndBinary
grestore % PSGState
newpath % image
473.373 55.494 mo
393.213 55.494 li
396.344 52.7577 398.776 50.6306 400.536 49.104 cv
402.3 47.574 403.668 46.341 404.649 45.396 cv
405.63 44.46 406.368 43.614 406.881 42.867 cv
407.394 42.129 407.997 41.202 408.699 40.104 cv
410.661 36.891 411.642 33.129 411.642 28.818 cv
411.642 23.175 409.761 18.747 405.999 15.525 cv
402.237 12.303 397.026 10.692 390.366 10.692 cv
386.838 10.692 383.886 11.007 381.492 11.637 cv
379.107 12.267 376.893 13.374 374.85 14.94 cv
372.969 16.434 371.502 18.252 370.44 20.412 cv
369.387 22.572 368.856 24.822 368.856 27.171 cv
368.856 29.835 369.657 32.013 371.25 33.696 cv
372.843 35.388 374.886 36.225 377.397 36.225 cv
379.674 36.225 381.492 35.559 382.869 34.227 cv
384.237 32.895 384.921 31.131 384.921 28.935 cv
384.921 26.82 384.336 25.173 383.157 23.994 cv
381.987 22.824 380.34 22.23 378.216 22.23 cv
376.263 22.23 374.805 22.977 373.869 24.471 cv
373.473 25.173 373.185 25.623 372.987 25.821 cv
372.789 26.019 372.573 26.109 372.339 26.109 cv
371.943 26.109 371.754 25.758 371.754 25.056 cv
371.754 21.924 372.897 19.296 375.174 17.181 cv
377.46 15.066 380.304 14.004 383.688 14.004 cv
387.549 14.004 390.501 15.201 392.553 17.586 cv
394.596 19.98 395.622 23.409 395.622 27.882 cv
395.622 29.367 395.523 30.699 395.325 31.878 cv
395.127 33.057 394.758 34.308 394.209 35.64 cv
393.66 36.972 392.868 38.502 391.851 40.221 cv
390.825 41.949 389.448 44.109 387.72 46.692 cv
385.83 49.59 384.453 52.146 383.589 54.333 cv
383.436 54.7224 383.296 55.1093 383.17 55.494 cv
324.135 55.494 li
324.135 55.494 li
323.334 54.684 322.371 54.279 321.255 54.279 cv
320.058 54.279 319.059 54.684 318.249 55.494 cv
318.249 55.494 li
266.895 55.494 li
267.213 54.6831 267.615 53.885 268.101 53.1 cv
269.496 50.823 271.764 48.285 274.887 45.477 cv
279.198 41.697 282.564 38.754 284.985 36.648 cv
287.415 34.542 289.296 32.841 290.646 31.545 cv
291.996 30.249 293.022 29.079 293.724 28.053 cv
294.417 27.027 295.254 25.758 296.226 24.246 cv
298.917 19.818 300.267 14.634 300.267 8.685 cv
300.267 5.508 299.808 2.619 298.944 0 cv
473.373 0 li
473.373 55.494 li
319.05 23.004 mo
320.94 23.004 322.38 23.589 323.388 24.768 cv
324.387 25.947 324.891 27.63 324.891 29.817 cv
324.891 30.555 324.837 31.212 324.747 31.788 cv
324.648 32.364 324.468 32.976 324.198 33.633 cv
323.928 34.29 323.541 35.037 323.037 35.883 cv
322.533 36.729 321.867 37.791 321.012 39.06 cv
320.085 40.491 319.419 41.742 318.987 42.813 cv
318.564 43.893 318.357 44.937 318.357 45.936 cv
318.357 46.512 318.438 47.151 318.609 47.844 cv
318.789 48.537 318.996 49.194 319.239 49.806 cv
319.491 50.418 319.77 50.931 320.076 51.336 cv
320.382 51.741 320.652 51.939 320.877 51.939 cv
321.075 51.939 321.165 51.831 321.165 51.597 cv
321.165 51.516 321.111 51.273 320.994 50.85 cv
320.805 50.31 320.679 49.887 320.616 49.572 cv
320.562 49.266 320.535 48.96 320.535 48.654 cv
320.535 47.763 320.787 46.917 321.282 46.107 cv
321.786 45.297 322.596 44.397 323.721 43.398 cv
325.26 42.048 326.466 40.995 327.339 40.248 cv
328.212 39.492 328.887 38.889 329.364 38.43 cv
329.85 37.962 330.219 37.548 330.471 37.188 cv
330.714 36.819 331.02 36.369 331.362 35.829 cv
332.334 34.254 332.811 32.4 332.811 30.285 cv
332.811 27.513 331.893 25.335 330.039 23.76 cv
328.194 22.185 325.629 21.402 322.362 21.402 cv
320.625 21.402 319.167 21.555 317.997 21.861 cv
316.818 22.167 315.738 22.698 314.73 23.472 cv
313.812 24.201 313.083 25.092 312.57 26.154 cv
312.048 27.216 311.787 28.323 311.787 29.475 cv
311.787 30.78 312.183 31.851 312.966 32.679 cv
313.749 33.507 314.757 33.921 315.99 33.921 cv
317.106 33.921 317.997 33.597 318.672 32.94 cv
319.347 32.283 319.689 31.419 319.689 30.339 cv
319.689 29.304 319.392 28.494 318.816 27.918 cv
318.24 27.342 317.43 27.045 316.395 27.045 cv
315.432 27.045 314.721 27.414 314.253 28.143 cv
314.064 28.494 313.92 28.719 313.821 28.809 cv
313.722 28.908 313.623 28.953 313.506 28.953 cv
313.308 28.953 313.218 28.782 313.218 28.44 cv
313.218 26.892 313.776 25.605 314.892 24.561 cv
316.008 23.526 317.394 23.004 319.05 23.004 cv
gsave % PSGState
clp
[1 0 0 -1 0 305 ] concat
/0 /CSA get_res setcolorspace
[206.822 0 0 55.9922 266.702 249.264 ] concat
snap_to_device
Adobe_AGM_Image/AGMIMG_filter currentfile /ASCII85Decode filter /RunLengthDecode filter ddf
<<
/ImageType 1
/Width 863 
/Height 233 
/ImageMatrix[863 0 0 -233 0 233 ]
/MultipleDataSources true
/BitsPerComponent 8 
/Decode[0 1 0 1 0 1 ]
/DataSource [
[AGMIMG_filter 863 string /readstring cvx /pop cvx] cvx
[AGMIMG_filter 863 string /readstring cvx /pop cvx] cvx
[AGMIMG_filter 863 string /readstring cvx /pop cvx] cvx
]
/NComponents 3 
/HostSepColorImage false 
/SkipImageProc {false}
/Operator /image
>>
%%BeginBinary: 1
img
K#rVdK#rVdK#rVdT?7)TkECL]Js1eMJs1eMJs3a/rfkYCJeiqRJeiqRJeiqRck`t0K#rVdK#rVdK#rVd
mE,@MJs1eMJs1eMJs1eMT9K8=k8&XbJeiqRJeiqRJekd1c,kRZK#rVdK#rVdK#uK`rlVR2Js1eMJs1eM
Js1eMm?@O6JeiqRJeiqRJeiqRS/1:rK!p9>K!p9>K!p9>\[MLHc%Ub'Jq\f1Jq\f1Jq_j2q1c3iJeWeN
JeWeNJeWeNl4eiYK!p9>K!p9>K!q;[rjV'EJq\f1Jq\f1Jq\f1^4lB;bnPaDJeWeNJeWeNJeZQGZaPIo
K!p9>K!p9>K!t'TrjRK5Jq\f1Jq\f1Jq^"Sq1e&HJeWeNJeWeNJeWeN[M6upK!p9>K!p9>K!p9>e$f7b
Z\=!bJq\f1Jq\f1Jq`cLq1aJ8JeWeNJeWeNJeX^hkF[?uJtIXeJtIXeJtKcLr1O%_c#nV\JouZfJouZf
Jp#ObrcYU\JeEYJJeEYJJeEYJl4S]@JtIXeJtIXeJtJj2r1O%_kB2B!JouZfJouZfJp"VHrcZO!JeEYJ
JeEYJJeEYJck<[WJtIXeJtIXeJtIXent5iQrh4pdJouZfJouZfJp!].rc[H;JeEYJJeEYJJeEYJ[M$iW
JtIXeJtIXeJtIXefUr)7rh6Z@JouZfJouZfJouZfm</DOJeEYJJeEYJJeEYJS.b"?Jqnr5Jqnr5Jqnr5
^5)WBre\m/Jms=@Jms=@Jms=@gg^4lr+,e<ZO_WuJe*GDJe*GDJe.,WJqnr5Jqnr5Jqnr5Ukel(re]fI
Jms=@Jms=@Jms=@_IEIRr+,e<bn#C:Je*GDJe*GDJe-3=Z\O-fJqnr5Jqnr5JqroPr.t?/Jms=@Jms=@
Jms=@W+,^8r+,e<k7<.TJe*GDJe*GDJe,:#c%gn+Jqnr5Jqnr5Jqr!6r.t?/ZXSMqJms=@Jms=@Jn"F_
rF>b9ragZlJe*GDJe*GDJe+@^kD+YEJqnr5Jqnr5Jqq'qr.t?/c!l96Jms=@Jms=@Jn!MErF>b9raiDH
Je*GDJe*GDJe*GDl48JcJoH<\JoH<\JoIN)r,M^Wk>Hn0Jl71uJl71uJl9<\r)<Sobm]14Jdd5>Jdd5>
Jdg9?q$jZLJoH<\JoH<\JoH<\no4MHrc<ZhJl71uJl71uJl8CBr)<Sok6uqNJdd5>Jdd5>Jdf@%q$kSf
JoH<\JoH<\JoH<\fPpb.rc>DDJl71uJl71uJl71unl#Bar`"IXJdd5>Jdd5>JdeF`q$lM+JoH<\JoH<\
JoH<\^2X!irc?=^Jl71uJl71uJl71ufM_WGr`$34Jdd5>Jdd5>Jdd5>ndP='JmP0XiE_%@JmEt6JmG0X
r*KA2k='tk]LBk/Jjb2YJjb2Y^-qlfr^Y3?JdR):JdR):JdR):dgH'^ZX/5in6V;aJmEt6JmEt6nm20"
raCCIU.+$/Jjb2YJjb2YUdY,Lr^Z,YJdR):JdR):JdR):\I/<Dc!H!.em>IaJmEt6JmEt6fNnD]raE-%
Jjo/tP=1!jJjb2YJjf/tr'gTTJdR):JdR):JdR):T*kQ*k?`aH]O&WaJmEt6JmEt6^0UYCraF&?Jjn6Z
X[Ib/Jjb2YJje6Zr'gTTZO29kJdR):JdR):JdUlPrX4<UW`&dmrD;iVp.g37JkgnmJki7>peUlek<+>Y
`'!iWloNo^JiSECJiSEC_E%BPr]JF3JdI#8JdI#8JdI#8cj@$VJl;AArDEMilqaQTJkgnmJkgnmp.kBY
r_e>1W]^)=loOi#JiSECJiSECW&aW6r]K?MJdI#8JdI#8JdI#8[L(2VJl:H'rDEMilqbJnJkgnmJkgnm
geRW?r_g'bJirfjq)dq(W&]GiJiSECJiWNbpcAC:JdI#8JdI#8JdI#8S-e@VJl9NbrDEMilqcD3Jkgnm
Jkgnm_G9l%r_h!'JiqmPq)dq(_E!3.JiSECJiVUHpcAC:ZO)3iJdI#8JdI#8JdL]KJkidMrD!&\rCd)]
rCHlWr'pKNp-aL#Jjb2YJjcP*rC-WRr^l95JiV(9pc/42rAOU3rA=.&gbOI:Jhhp5Jhk1upbVn,bmAt.
k6[XaJd?r6Jd?r6cj6sQL/.\Ape:WZrC[#ZrC?cTq*h5MJjb2YJjb2Yp-ejJr'pZWJiU.tpc/42rAOU3
rA=.&p+h4TJhhp5Jhj8[pbVn,k6Z_HbmCfaJd?r6Jd?r6[Kt,QJkkW,rD!&\rCd)]rCHlWr'pKN_F/uD
Jjb2YJjeB^rC-WRr^jFVJiWTcrAX[5rAFO1oJ<F$Jhhp5Jhhp5p+lD!r\]96ZO+taJd?r6Jd?r6S-\:Q
Jkj]grD!&\rCd)]rCHlWr'pKNgdH`^Jjb2YJjdIDrC-WRr^k?pJiW!Spc/42rAOU3rA=.&_D6]uJhhp5
Jhl+:pbVn,ZO)3iJd?r6Jd?r6JdCWIJl9'UrDEJgrCm/_rCHlUrBp?GrBU'@Jj4iOJj4iOW'C5Gr'C<L
k<+>Yd6.@hr&Xd9rAX[4rA4C,r%Rq"gb+12JhDX-JhFnmpb2V$bmAt.iX,,\Ym5jcJd6l4Jd9X-ZVlNU
rDEJgrCm/_rCHlUrBp?GrBR;GJj4iOJj4iOp-8L@r'C<LJipM)rB'p<rAaa7rAFO0rA"4(q(MFoJhDX-
JhDX-W%Riur\<RBJdKL)nHd;CJd6l4Jd6l4[Kk&TJl:o4rDEJgrCm/_rCHlUrBp?GrBS4aJj4iOJj4iO
gcta&r'C<LZTNt)rB'p<rAaa7rAFO0rA"4(q(J[!JhDX-JhDX-p+H+nr\9!2XpOV(jTgABJd6l4Jd7eN
k>Hn0d8Kp?r(m8brCd)[rC-ZPpd+jDgcpBTJj4iOJj7+:rBU9Hr^4pmJir?]rB'p<rAaa7rAFO0rA"4(
q(KT;JhDX-JhDX-gb/@Tr\:_cJdM>]nHbHdJd6l4Jd6l4l3DoI]3bGArEB,$rDiemrCm/[rBpKKrBL6E
rB:!>JinWIJinWIW'(#Ar'(*Gk='tkeOBF)rBgEIrBC0ArAX[3rA"4'r@[mti%0I2Jh2L)Jh4bipauIu
bmK%0iX5Jfq$=51Jd6l4Jd6l4cj-m`MI-6erEB,$rDiemrCm/[rBpKKrBL6ErB75EJinWIJinWIp,r::
r'(*GJjm:?rC$TNr':3ErB's:rA=I-r%J"$q(;FoJh2L)Jh2L)W%@]qr\*FAJdTR+q$Hj&b6NV(Jd6l4
Jd8^hc!H!.mp>rurEB,$rDiemrCm/[rBpKKrBL6ErB8._JinWIJinWIgcYNur'(*GZUKa?rC$TNr':3E
rB's:rA=I-r%J"$q(8[!Jh2L)Jh2L)p+5tjr\&j1XpXt2q$?'eJd6l4Jd6l4S-S4`JmQu6rE]A*r)int
rD<GdrC?fRr'C9GrBC0Ci&lTRJinWIJipn4rB:'Br^"dtJjo,srC$TNr':3ErB's:rA=I-r%J"$q(9T;
Jh2L)Jh2L)gar4Pr\(SbJdVD_q$Hj&QNr*IJd6l4Jd:QGJmQ&qrE]A*r)intrD<GdrC?fRr'C9GrBC0C
qE0?lJinWIJiotorB:'Br^#^9Jjn3YrC$TNr':3ErB's:rA=I-r%J"$q(:MUJh2L)Jh2L)_CYI6r\)M'
JdUKEq$Hj&Ym5jcJd6l4Jd9X-ZZ(e@rGMRLr+>n9rEB.trCm/Zr'C9GrB9s=YWIFuJieQGJiifjq)nR<
r]l'5]2JT(rD*8`rC?fQrB1$;rA4@*r@\%#q(2LqJh)F'Jh)F'X=O)tr%7n$k6uqNbma@Tr<iK0q$>:O
Jd6l4Jd6l4[Kk&rJoL0trGMRLr+>n9rEB.trCm/Zr'C9GrB9s=aub2:JieQGJihmPq)nR<r]mefMGjCL
rD*8`rC?fQrB1$;rA4@*r@\%#q(/a#Jh)F'Jh)F'qCD@mr%7n$Jdesop^@$-r<`9*km)eFJd6l4Jd7eN
kAZ#leStJ)rG2=CrF,Y.rDNSfrC6]NrBL6Dq)m_"JieQGJieQG`]NuYr&t$Ebu0-kmo'*\rD*8`rC?fQ
rB1$;rA4@*r@\%#q(0Z=Jh)F'Jh)F'i%+USr%7n$ZODEop^@$-r<`9*Rg4NMJd6l4Jd:QGJoJ>@rGMRL
r+>n9rEB.trCm/Zr'C9GrB9s=r]>]nJieQGJig%qq)nR<r]oXEJl:,srD<Gfr(HuYrBgHFrAX[2r%S(%
r@Rgrj=>g4Jh)F'Jh+hkq(2Fqr\)M)JdgfNp^@$-r<`9*[0M9gJd6l4Jd9X-Z\OQrrJ(9(rI4ZirG_^I
rET;!rCZuUrBU<ErB./CJieQGJieQGp,i%3r]c!D]41_HrET8&rDNSerBpNGrAOR/r@e+$r@IdqJh)F'
Jh)F'W%7Wor\!@EJe-6>r=8`7r=&W4r<iK0p^#@SJd6l4Jd6l4[Kk'4JqrrQrJ(9(rI4ZirG_^IrET;!
rCZuUrBU<ErB/(]JieQGJieQGgcP9nr]d_uMIQNlrET8&rDNSerBpNGrAOR/r@e+$r@G$#Jh)F'Jh)F'
p+,nhr[rd5[h&EIr!iT5r<rQ2r<`6)mK\=KJd6l4Jd7eNkD+YEfn]N\rIk,ur-A6[rFZ"5rDNSdr'^KK
rB:*Ai&cNPJieQGJigh2pcSO?c!l96mpc6'rET8&rDNSerBpNGrAOR/r@e+$r@Gr=Jh)F'Jh)F'gai.N
r[tMfL(F4mr!iT5r<rQ2r<`6)TEg&RJd6l4Jd:QGJqq*rrJ(9(rI4ZirG_^IrET;!rCZuUrBU<ErB0p<
JieQGJieQGW&sc:r]fRTJn!8>rF#S/r)inqrCd)VrB1$:r%e4(r@Rt!i%'C0Jh)F'Jh+\gpalCsbn#C:
lOWq(r!iT5r<rQ2r<`6)\d*flJd6l4Jd9X-Z_*8MrLNnUrKR5=rIOohrFZ"2rD*8[rB^BGrB./CJieQG
JieQGniQb3r]c!W_fbp"rH%pWrGDIFrEfG&rCd)TrAjd3r@n1%r@IdqJh)F'Jh)F'Uau?or\!@HJeHHD
r=Sr=r=Ai9r=&W3r<`6)fE[!5Jd6l4Jd8^hc(BT[o:PuPrL3\Lr/CT*rH/!MrE9(or'pWNrBC0B`]Jc6
JieQGJihUHr&jsCZZVFRrH/!ZrGhdQr+Gt7rDiehrB^BBr%n:*r@Rt!X=JlQJh)F'Jh-CBr%.h"JeGO*
r=Sr=r=Ai9r=&W3r<`6)ncsaOJd6l4Jd7eNkF[?ufq856rL3\Lr/CT*rH/!MrE9(or'pWNrBC0Bi&cNP
JieQGJig\.r&jsCc#nV\pN?FVrH%pWrGDIFrEfG&rCd)TrAjd3r@n1%r@Gr=Jh)F'Jh)F'fIQkNr[tMi
L(aFsr"/f;r=/]6r<iK0p^!Z#Jd6l4Jd6l4l3Dp5^RtIqrL3\Lr/CT*rH/!MrE9(or'pWNrBC0BqE'9j
JieQGJifbir&jsCkB2B!h0&[<rH%pWrGDIFrEfG&rCd)TrAjd3r@n1%r@HkWJh)F'Jh)F'^+9+4r[uG.
JeIA^r=Sr=r=Ai9r=&W3r<`6)^'B5pJd6l4Jd9X-ZaPn&rNlI+rM]XdrK7&0rG_^CrDWVcrB^BHrB./C
JieQGJieQGniQb3r]c!g^P2W=rIFinr,hmPrEfG#rC6`Kr&+F,r@\%"qC@.JJh)F'Jh*WIr%.h"k7rR`
eJ8#sr=f)Ar=Su=r=/]5r<i<*fE[!5Jd6l4Jd8^hc*i54o="V(rNH0ur1EqMrIOodrF#S&r(6iQrBL6C
`]Jc6JieQGJihUHr&jsCZ\=EnrIb'!rHnHarG):;rDNS`rB:'9r@n1&r@G$#Jh)F'Jh)F'ngjVhr[rd;
]+t8Yr=f)Ar=Su=r=/]5r<i<*ncsaOJd6l4Jd7eNkI,uNfs^jcrNH0ur1EqMrIOodrF#S&r(6iQrBL6C
i&cNPJieQGJig\.r&jsCc%Ub'o7d-qrIFinr,hmPrEfG#rC6`Kr&+F,r@\%"`[cWkJh)F'Jh,J(r%.h"
ZPA?4r=o2Dr"Ar?r=Ai9r<rQ2p^!Z#Jd6l4Jd6l4l3DpL^UF*IrNH0ur1EqMrIOodrF#S&r(6iQrBL6C
qE'9jJieQGJifbir&jsCkCnMAfnKBWrIFinr,hmPrEfG#rC6`Kr&+F,r@\%"i%'C0Jh)F'Jh+Pcr%.h"
bnYgFmhPd8r=f)Ar=Su=r=/]5r<i<*^'B5pJd6l4Jd9X-ZcSBPrQ+rWrPAHCr2opirJ^]#rFZ"1r(HuU
rBL6CX?2"qJieQGJiiNbr&jsCJs3s5rK7&<rJ:B$rH/!NrE0"krBU9>rA"7'r@IdqJh)F'Jh)F'Uau?o
r\!@MJeurRr>,>Hr"T)Br=Jo;r=&W3r!E<-fE[!5Jd6l4Jd8^hc,kRZpW<BTrPnfPrOMj.rLa%IrH\?R
rE/tjrBpNJrB/(]JieQGJieQGfK9!nr]d`QNg'F(rJgc3r."ZerFc(2rCd)Sr&=R/r@\%"X=JlQJh)F'
Jh-CBr%.h"Jeu$8r>,>Hr"T)Br=Jo;r=&W3r!E<-ncsaOJd6l4Jd7eNkK/=th9#W:rPnfPrOMj.rLa%I
rH\?RrE/tjrBpNJrB0""JieQGJieQG^,u6Tr]eYkJs5eirK7&<rJ:B$rH/!NrE0"krBU9>rA"7'r@Gr=
Jh)F'Jh)F'fIQkNr[tMnMAQ4,r>#5Er=]&?r=8c7r<iH/r<T2(Jd6l4Jd6l4l3Dp__o_kurPnfPrOMj.
rLa%IrH\?RrE/tjrBpNJrB0p<JieQGJieQGUc\K:r]fS0Js4lOrK7&<rJ:B$rH/!NrE0"krBU9>rA"7'
r@HkWJh)F'Jh)F'^+9+4r[uG3Jf!klr>,>Hr"T)Br=Jo;r=&W3r!E<-^'B5pJd6l4Jd9X-Ze1Srq:GSp
rQbA]r42d)rKR80rG2@8r(R&WrBL6CX?2"qJieQGJiiNbr&jsCJtC#Sq47JRrKmJFr.t;urGDL<rD*;X
r&FX1r@\%"qC@.JJh)F'Jh*WIr%.h"k8AjhfbsT&r>5AHr=f,Ar=Ai8r<iH/r<V$\Jd6l4Jd6l4[Kk(0
K%TtQq:GSprQbA]r42d)rKR80rG2@8r(R&WrBL6C`]Jc6JieQGJihUHr&jsCZ_!JSq47JRrKmJFr.t;u
rGDL<rD*;Xr&FX1r@\%"X=JlQJh)F'Jh-CBr%.h"Jf2<@q&'&Hr"]/Dr=Su=r=&W3r!E<-ncsaOJd6l4
Jd7eNkLbC=iRmtXrRCekrPncGrM][ZrI4]\rEB+mrC$TKrB0""JieQGJieQG^,u6Tr]eZ!JtDk2q47JR
rKmJFr.t;urGDL<rD*;Xr&FX1r@\%"`[cWkJh)F'Jh,J(r%.h"ZPec@q&'&Hr"]/Dr=Su=r=&W3r!E<-
U^)JVJd6l4Jd:QGK%S,rq:GSprQbA]r42d)rKR80rG2@8r(R&WrBL6CqE'9jJieQGJifbir&jsCkFR9s
iL]k9rL<bPrK7#6rHnK[rET:rrBgEArA+=(r@HkWJh)F'Jh)F'^+9+4r[uG5Jf4.tq&'&Hr"]/Dr=Su=
r=&W3r!E<-^'B5pJd6l4Jd9X-Ze1Srq:GSprQbA]r42d)rKR80rG2@8r(R&WrBL6CX?2"qJieQGJiiNb
r&jsCJtC#Sq47JRrKmJFr.t;urGDL<rD*;Xr&FX1r@\%"qC@.JJh)F'Jh*WIr%.h"k8AjhfbsT&r>5AH
r=f,Ar=Ai8r<iH/r<V$\Jd6l4Jd6l4[Kk(:K&Z[erSd_5rS@G*rQb>WrNH0grIb&drEK1orC$TKrB/(]
JieQGJieQGfK9!nr]d`cP,8,QrM'7_rKmGArIFidrF#S#rBpKCrA+=(r@G$#Jh)F'Jh)F'ngjVhr[rd@
^Dcncr>>GJr=o2Cr=Ai9r<iH/r<Vs!Jd6l4Jd6l4S-S6:K&YbKrSd_5rS@G*rQb>WrNH0grIb&drEK1o
rC$TKrB0""JieQGJieQG^,u6Tr]eZ(Ju/4<rM9CdrLa%Tr/LZ*rGhdDrD<G[r&O^2r@\%"`[cWkJh)F'
Jh,J(r%.h"ZPniBq&0,Jr"f5Fr=]&>r=/]4r!E<-U^)JVJd6l4Jd:QGK&Xi1rSd_5rS@G*rQb>WrNH0g
rIb&drEK1orC$TKrB0p<JieQGJieQGUc\K:r]fSBJu.;"rM9CdrLa%Tr/LZ*rGhdDrD<G[r&O^2r@\%"
i%'C0Jh)F'Jh+Pcr%.h"bo20Po,@EBr>>GJr=o2Cr=Ai9r<iH/r<U+BJd6l4Jd6l4cj-o:QK%l%rS[Y1
rRq.pr5&?8rL3\;rGMR<r([,XrBL6CX?2"qJieQGJiiNbr&jsCJu-A]rM9CdrLa%Tr/LZ*rGhdDrD<G[
r&O^2r@\%"qC@.JJh)F'Jh*WIr%.h"k8Jpjfc'Z(r>>GJr=o2Cr=Ai9r<iH/r<V$\Jd6l4Jd6l4[Kk(?
K'2mkrT=(=rS@G%r5S]ArLNnArG_^@r(d2YrBL6C`]Jc6JieQGJihUHr&jsCZ`0+erM][lrM'7[r/pr1
rH%pHrDNS^r&O^2r@\%"X=JlQJh)F'Jh-CBr%.h"JfDTHq&92Lr>>GKr>#8Dr=Ai9r<rN0r<Vs!Jd6l4
Jd6l4S-S6?K'1tQrT=(=rS@G%r5S]ArLNnArG_^@r(d2YrBL6Ci&cNPJieQGJig\.r&jsCc)H;opSn+i
rMKOfrL<_IrIb&irF5_'rC$QDrA+=(r@Gr=Jh)F'Jh)F'fIQkNr[tMrOrO38r>GPNr"o;Hr=]&>r=/]5
r!E<-U^)JVJd6l4Jd:QGK'1&7rT=(=rS@G%r5S]ArLNnArG_^@r(d2YrBL6CqE'9jJieQGJifbir&jsC
kGa'4h5U@OrMKOfrL<_IrIb&irF5_'rC$QDrA+=(r@HkWJh)F'Jh)F'^+9+4r[uG7JfFG'q&92Lr>>GK
r>#8Dr=Ai9r<rN0r<U+BJd6l4Jd6l4cj-o?P3;f+rT!k4rRCbbrNlHnrJ(8irE]=rrC$TKrB./CJieQG
JieQGniQb3r]c"6_l<U5rMKOfrL<_IrIb&irF5_'rC$QDrA+=(r@IdqJh)F'Jh)F'Uau?or\!@QJfEMb
q&92Lr>>GKr>#8Dr=Ai9r<rN0r<V$\Jd6l4Jd6l4[Kk(BK'N*qrTO4BrS[Y+r5eiFrLa%DrG_^@r(d2Y
rBL6C`]Jc6JieQGJihUHr&jsCZ`B7irMogprM9C_r0.)5rH/!IrDNS^r&O^2r@\%"X=JlQJh)F'Jh-CB
r%.h"JfDHDq&92Lr"o;Hr=]&>r=/]5r!E<-ncsaOJd6l4Jd7eNkN[Zah<Ot&rT=(:rR^tgrO2ZsrJ1>j
rE]=rrC$TKrB0""JieQGJieQG^,u6Tr]eZ.JueXHrMogprM9C_r0.)5rH/!IrDNS^r&O^2r@\%"`[cWk
Jh)F'Jh,J(r%.h"ZQ"oDq&92Lr"o;Hr=]&>r=/]5r!E<-U^)JVJd6l4Jd:QGK'L8=rTO4BrS[Y+r5eiF
rLa%DrG_^@r(d2YrBL6CqE'9jJieQGJifbir&jsCkGs38h5gLSrM][jrLNkMrIt2lrF5_'rC$QDrA+=(
r@HkWJh)F'Jh)F'^+9+4r[uG7JfF;#q&92Lr"o;Hr=]&>r=/]5r!E<-^'B5pJd6l4Jd9X-Zg*_=rTO4B
rS[Y+r5eiFrLa%DrG_^@r(d2YrBL6CX?2"qJieQGJiiNbr&jsCJuceirMogprM9C_r0.)5rH/!IrDNS^
r&O^2r@\%"qC@.JJh)F'Jh*WIr%.h"k8T!lfc0`*r>GMLr>#8Dr=Ai9r<rN0r<V$\Jd6l4Jd6l4[Kk(C
K'W="q<IqArSd_,r5noGrLa%DrG_^@r(d2YrBL6C`]Jc6JieQGJihUHr&jsCZ`KIoq5aInrMBI`r0.)5
rH8'JrDNS^r&O^2r@\%"X=JlQJh)F'Jh-CBr%.h"JfD<@r>PVPr"o;Hr=]&>r=/]5r!E<-ncsaOJd6l4
Jd7eNkNd`ciTp=)rTF.<rR^thrO2ZsrJ1>jrE]=rrC$TKrB0""JieQGJieQG^,u6Tr]eZ/JunjNq5aIn
rMBI`r0.)5rH8'JrDNS^r&O^2r@\%"`[cWkJh)F'Jh,J(r%.h"ZQ"c@r>PVPr"o;Hr=]&>r=/]5r!E<-
U^)JVJd6l4Jd:QGK'UJCq<IqArSd_,r5noGrLa%DrG_^@r(d2YrBL6CqE'9jJieQGJifbir&jsCkH'9:
iN2jUrMfalrLNkMrIt2mrF5_'rC$QDrA+=(r@HkWJh)F'Jh)F'^+9+4r[uG7JfF.tr>PVPr"o;Hr=]&>
r=/]5r!E<-^'B5pJd6l4Jd9X-Zg3qCq<IqArSd_,r5noGrLa%DrG_^@r(d2YrBL6CX?2"qJieQGJiiNb
r&jsCJum"oq5aInrMBI`r0.)5rH8'JrDNS^r&O^2r@\%"qC@.JJh)F'Jh*WIr%.h"k8T!leJnH*r>GML
r>#8Dr=Ai9r<rN0r<V$\Jd6l4Jd6l4[Kk(CK'W0srTa@ErSme.r5noGrLa%DrG_^@r(d2YrBL6C`]Jc6
JieQGJihUHr&jsCZ`K=krN#mrrMBIar0.)5rH8'JrDNS^r&O^2r@\%"X=JlQJh)F'Jh-CBr%.h"JfD<@
r>PVPr"o;Hr=]&>r=/]5r!E<-ncsaOJd6l4Jd7eNkNd`ch<Y%)rTF.=rRh%irO2ZsrJ1>jrE]=rrC$TK
rB0""JieQGJieQG^,u6Tr]eZ/Jun^JrN#mrrMBIar0.)5rH8'JrDNS^r&O^2r@\%"`[cWkJh)F'Jh,J(
r%.h"ZQ"c@r>PVPr"o;Hr=]&>r=/]5r!E<-U^)JVJd6l4Jd:QGK'U>?rTa@ErSme.r5noGrLa%DrG_^@
r(d2YrBL6CqE'9jJieQGJifbir&jsCkH0?<h6$XWrMognrLa"PrJ(8nrF>e)rC-WFrA+=(r@HkWJh)F'
Jh)F'^+9+4r[uG7JfF.tr>PVPr"o;Hr=]&>r=/]5r!E<-^'B5pJd6l4Jd9X-Zg3e?rTa@ErSme.r5noG
rLa%DrG_^@r(d2YrBL6CX?2"qJieQGJiiNbr&jsCJuuqmrN,strMKOcr07/7rH8'KrDWY`r&Xd3r@\%"
qC@.JJh)F'Jh*WIr%.h"k8T!leJnH*r>GMLr>#8Dr=Ai9r<rN0r<V$\Jd6l4Jd6l4[Kk(CK'W0srTa@E
rSme.r5noGrLa%DrG_^@r(d2YrBL6C`]Jc6JieQGJihUHr&jsCZ`TCmrN,strMKOcr07/7rH8'KrDWY`
r&Xd3r@\%"X=JlQJh)F'Jh-CBr%.h"JfD<@r>PVPr"o;Hr=]&>r=/]5r!E<-ncsaOJd6l4Jd7eNkNd`c
h<Y%)rTF.=rRh%irO2ZsrJ1>jrE]=rrC$TKrB0""JieQGJieQG^,u6Tr]eZ0K!"dLrN,strMKOcr07/7
rH8'KrDWY`r&Xd3r@\%"`[cWkJh)F'Jh,J(r%.h"ZQ"c@r>PVPr"o;Hr=]&>r=/]5r!E<-U^)JVJd6l4
Jd:QGK'U>?rTa@ErSme.r5noGrLa%DrG_^@r(d2YrBL6CqE'9jJieQGJifbir&jsCkH0?<h6$XWrMogn
rLa"PrJ(8nrF>e)rC-WFrA+=(r@HkWJh)F'Jh)F'^+9+4r[uG7JfF.tr>PVPr"o;Hr=]&>r=/]5r!E<-
^'B5pJd6l4Jd9X-Zg3e?rTa@ErSme.r5noGrLa%DrG_^@r(d2YrBL6CX?2"qJieQGJiiNbr&jsCJuuqm
rN,strMKOcr07/7rH8'KrDWY`r&Xd3r@\%"qC@.JJh)F'Jh*WIr%.h"k8]'neK"N,r>PSNr>,>Fr=Jo:
r<rN0r<V$\Jd6l4Jd6l4[Kk(CK'W0srTa@ErSme.r5noGrLa%DrG_^@r(d2YrBL6C`]Jc6JieQGJihUH
r&jsCZ`TCmrN,strMKOcr07/7rH8'KrDWY`r&Xd3r@\%"X=JlQJh)F'Jh-CBr%.h"JfMBBr>Y\Rr##AJ
r=f,@r=/]5r!E<-ncsaOJd6l4Jd7eNkNd`ch<Y%)rTF.=rRh%irO2ZsrJ1>jrE]=rrC$TKrB0""JieQG
JieQG^,u6Tr]eZ0K!"dLrN,strMKOcr07/7rH8'KrDWY`r&Xd3r@\%"`[cWkJh)F'Jh,J(r%.h"ZQ+iB
r>Y\Rr##AJr=f,@r=/]5r!E<-U^)JVJd6l4Jd:QGK'U>?rTa@ErSme.r5noGrLa%DrG_^@r(d2YrBL6C
qE'9jJieQGJifbir&jsCkH0?<h6$XWrMognrLa"PrJ(8nrF>e)rC-WFrA+=(r@HkWJh)F'Jh)F'^+9+4
r[uG8JfO5!r>Y\Rr##AJr=f,@r=/]5r!E<-^'B5pJd6l4Jd9X-Zg3e?rTa@ErSme.r5noGrLa%DrG_^@
r(d2YrBL6CX?2"qJieQGJiiNbr&jsCJuuqmrN,strMKOcr07/7rH8'KrDWY`r&Xd3r@\%"qC@.JJh)F'
Jh*WIr%.h"k8]'neK"N,r>PSNr>,>Fr=Jo:r<rN0r<V$\Jd6l4Jd6l4[Kk(CK'W0srTa@ErSme.r5noG
rLa%DrG_^@r(d2YrBL6C`]Jc6JieQGJihUHr&jsCZ`TCmrN,strMKOcr07/7rH8'KrDWY`r&Xd3r@\%"
X=JlQJh)F'Jh-CBr%.h"JfMBBr>Y\Rr##AJr=f,@r=/]5r!E<-ncsaOJd6l4Jd7eNkNd`ch<Y%)rTF.=
rRh%irO2ZsrJ1>jrE]=rrC$TKrB0""JieQGJieQG^,u6Tr]eZ0K!"dLrN,strMKOcr07/7rH8'KrDWY`
r&Xd3r@\%"`[cWkJh)F'Jh,J(r%.h"ZQ+iBr>Y\Rr##AJr=f,@r=/]5r!E<-U^)JVJd6l4Jd:QGK'U>?
rTa@ErSme.r5noGrLa%DrG_^@r(d2YrBL6CqE'9jJieQGJifbir&jsCkH0?<h6$XWrMognrLa"PrJ(8n
rF>e)rC-WFrA+=(r@HkWJh)F'Jh)F'^+9+4r[uG8JfO5!r>Y\Rr##AJr=f,@r=/]5r!E<-^'B5pJd6l4
Jd9X-Zg3e?rTa@ErSme.r5noGrLa%DrG_^@r(d2YrBL6CX?2"qJieQGJiiNbr&jsCJuuqmrN,strMKOc
r07/7rH8'KrDWY`r&Xd3r@\%"qC@.JJh)F'Jh*WIr%.h"k8]'neK"N,r>PSNr>,>Fr=Jo:r<rN0r<V$\
Jd6l4Jd6l4[Kk(CK'W0srTa@ErSme.r5noGrLa%DrG_^@r(d2YrBL6C`]Jc6JieQGJihUHr&jsCZ`TCm
rN,strMKOcr07/7rH8'KrDWY`r&Xd3r@\%"X=JlQJh)F'Jh-CBr%.h"JfMBBr>Y\Rr##AJr=f,@r=/]5
r!E<-ncsaOJd6l4Jd7eNkNd`ch<Y%)rTF.=rRh%irO2ZsrJ1>jrE]=rrC$TKrB0""JieQGJieQG^,u6T
r]eZ0K!"dLrN,strMKOcr07/7rH8'KrDWY`r&Xd3r@\%"`[cWkJh)F'Jh,J(r%.h"ZQ+iBr>Y\Rr##AJ
r=f,@r=/]5r!E<-U^)JVJd6l4Jd:QGK'U>?rTa@ErSme.r5noGrLa%DrG_^@r(d2YrBL6CqE'9jJieQG
Jifbir&jsCkH0?<h6$XWrMognrLa"PrJ(8nrF>e)rC-WFrA+=(r@HkWJh)F'Jh)F'^+9+4r[uG8JfO5!
r>Y\Rr##AJr=f,@r=/]5r!E<-^'B5pJd6l4Jd9X-Zg3e?rTa@ErSme.r5noGrLa%DrG_^@r(d2YrBL6C
X?2"qJieQGJiiNbr&jsCJuuqmrN,strMKOcr07/7rH8'KrDWY`r&Xd3r@\%"qC@.JJh)F'Jh*WIr%.h"
k8]'neK"N,r>PSNr>,>Fr=Jo:r<rN0r<V$\Jd6l4Jd6l4[Kk(CK'W0srTa@ErSme.r5noGrLa%DrG_^@
r(d2YrBL6C`]Jc6JieQGJihUHr&jsCZ`TCmrN,strMKOcr07/7rH8'KrDWY`r&Xd3r@\%"X=JlQJh)F'
Jh-CBr%.h"JfMBBr>Y\Rr##AJr=f,@r=/]5r!E<-ncsaOJd6l4Jd7eNkNd`ch<Y%)rTF.=rRh%irO2Zs
rJ1>jrE]=rrC$TKrB0""JieQGJieQG^,u6Tr]eZ0K!"dLrN,strMKOcr07/7rH8'KrDWY`r&Xd3r@\%"
`[cWkJh)F'Jh,J(r%.h"ZQ+iBr>Y\Rr##AJr=f,@r=/]5r!E<-U^)JVJd6l4Jd:QGK'U>?rTa@ErSme.
r5noGrLa%DrG_^@r(d2YrBL6CqE'9jJieQGJifbir&jsCkH0?<h6$XWrMognrLa"PrJ(8nrF>e)rC-WF
rA+=(r@HkWJh)F'Jh)F'^+9+4r[uG8JfO5!r>Y\Rr##AJr=f,@r=/]5r!E<-^'B5pJd6l4Jd9X-Zg3e?
rTa@ErSme.r5noGrLa%DrG_^@r(d2YrBL6CX?2"qJieQGJiiNbr&jsCJuuqmrN,strMKOcr07/7rH8'K
rDWY`r&Xd3r@\%"qC@.JJh)F'Jh*WIr%.h"k8]'neK"N,r>PSNr>,>Fr=Jo:r<rN0r<V$\Jd6l4Jd6l4
[Kk(CK'W0srTa@ErSme.r5noGrLa%DrG_^@r(d2YrBL6C`]Jc6JieQGJihUHr&jsCZ`TCmrN,strMKOc
r07/7rH8'KrDWY`r&Xd3r@\%"X=JlQJh)F'Jh-CBr%.h"JfMBBr>Y\Rr##AJr=f,@r=/]5r!E<-ncsaO
Jd6l4Jd7eNkNd`ch<Y%)rTF.=rRh%irO2ZsrJ1>jrE]=rrC$TKrB0""JieQGJieQG^,u6Tr]eZ0K!"dL
rN,strMKOcr07/7rH8'KrDWY`r&Xd3r@\%"`[cWkJh)F'Jh,J(r%.h"ZQ+iBr>Y\Rr##AJr=f,@r=/]5
r!E<-U^)JVJd6l4Jd:QGK'U>?rTa@ErSme.r5noGrLa%DrG_^@r(d2YrBL6CqE'9jJieQGJifbir&jsC
kH0?<h6$XWrMognrLa"PrJ(8nrF>e)rC-WFrA+=(r@HkWJh)F'Jh)F'^+9+4r[uG8JfO5!r>Y\Rr##AJ
r=f,@r=/]5r!E<-^'B5pJd6l4Jd9X-Zg3e?rTa@ErSme.r5noGrLa%DrG_^@r(d2YrBL6CX?2"qJieQG
JiiNbr&jsCJuuqmrN,strMKOcr07/7rH8'KrDWY`r&Xd3r@\%"qC@.JJh)F'Jh*WIr%.h"k8]'neK"N,
r>PSNr>,>Fr=Jo:r<rN0r<V$\Jd6l4Jd6l4[Kk(CK'W0srTa@ErSme.r5noGrLa%DrG_^@r(d2YrBL6C
`]Jc6JieQGJihUHr&jsCZ`TCmrN,strMKOcr07/7rH8'KrDWY`r&Xd3r@\%"X=JlQJh)F'Jh-CBr%.h"
JfMBBr>Y\Rr##AJr=f,@r=/]5r!E<-ncsaOJd6l4Jd7eNkNd`ch<Y%)rTF.=rRh%irO2ZsrJ1>jrE]=r
rC$TKrB0""JieQGJieQG^,u6Tr]eZ0K!"dLrN,strMKOcr07/7rH8'KrDWY`r&Xd3r@\%"`[cWkJh)F'
Jh,J(r%.h"ZQ+iBr>Y\Rr##AJr=f,@r=/]5r!E<-U^)JVJd6l4Jd:QGK'U>?rTa@ErSme.r5noGrLa%D
rG_^@r(d2YrBL6CqE'9jJieQGJifbir&jsCkH0?<h6$XWrMognrLa"PrJ(8nrF>e)rC-WFrA+=(r@HkW
Jh)F'Jh)F'^+9+4r[uG8JfO5!r>Y\Rr##AJr=f,@r=/]5r!E<-^'B5pJd6l4Jd9X-Zg3e?rTa@ErSme.
r5noGrLa%DrG_^@r(d2YrBL6CX?2"qJieQGJiiNbr&jsCJuuqmrN,strMKOcr07/7rH8'KrDWY`r&Xd3
r@\%"qC@.JJh)F'Jh*WIr%.h"k8]'neK"N,r>PSNr>,>Fr=Jo:r<rN0r<V$\Jd6l4Jd6l4[Kk(CK'W0s
rTa@ErSme.r5noGrLa%DrG_^@r(d2YrBL6C`]Jc6JieQGJihUHr&jsCZ`TCmrN,strMKOcr07/7rH8'K
rDWY`r&Xd3r@\%"X=JlQJh)F'Jh-CBr%.h"JfVHDr>bbTr#,GKr=o2Br=8c6r!N6*p'60SJd6l4Jd7nQ
rWq]QK'V7YrTa@ErSme.r5noGrLa%DrG_^@r(d2YrBL6Ci&cNPJieQGJig\.r&jsCc)lT"pT=CqrMogn
rLa"PrJ(8nrF>e)rC-WFrA+=(r@Gr=Jh)F'Jh)F'fIQkNr[tMtMB2X8r>YYPr>,>Gr=Su<r<rN1q$<o(
Jd6l4Jd6l4m0EUrK'U>?rTa@ErSme.r5noGrLa%DrG_^@r(d2YrBL6CqE'9jJieQGJifbir&jsCkH0?<
h6$XWrMognrLa"PrJ(8nrF>e)rC-WFrA+=(r@HkWJh)F'Jh)F'^+9+4r[uG9JfX;#r>bbTr#,GKr=o2B
r=8c6r!N6*_?YYtJd6l4Jd9a0rWojrP3`)3rTF.=rRh%irO2ZsrJ1>jrE]=rrC$TKrB./CJieQGJieQG
niQb3r]c":_l`m=rMognrLa"PrJ(8nrF>e)rC-WFrA+=(r@IdqJh)F'Jh)F'Uau?or\!@SJfWA^r>bbT
r#,GKr=o2Br=8c6r!N6*g]rE9Jd6l4Jd8gkrWpd7K'W0srTa@ErSme.r5noGrLa%DrG_^@r(d2YrBL6C
`]Jc6JieQGJihUHr&jsCZ`TCmrN,strMKOcr07/7rH8'KrDWY`r&Xd3r@\%"X=JlQJh)F'Jh-CBr%.h"
JfVHDr>bbTr#,GKr=o2Br=8c6r!N6*p'60SJd6l4Jd7nQrWq]QK'V7YrTa@ErSme.r5noGrLa%DrG_^@
r(d2YrBL6Ci&cNPJieQGJig\.r&jsCc)lT"pT=CqrMognrLa"PrJ(8nrF>e)rC-WFrA+=(r@Gr=Jh)F'
Jh)F'fIQkNr[tMtMB2X8r>YYPr>,>Gr=Su<r<rN1q$<o(Jd6l4Jd6l4m0EUrK'UJCq<IqArSd_,r5noG
rLa%DrG_^@r(d2YrBL6CqE'9jJieQGJifbir&jsCkH0?<iN;pWrMognrLWqOrJ(8nrF>e)rC-WFrA+=(
r@HkWJh)F'Jh)F'^+9+4r[uG9JfX;#r>bbSr#,GKr=o2Br=8c6r!N6*_?YYtJd6l4Jd9a0rWojrQL"A3
rTF.<rR^thrO2ZsrJ1>jrE]=rrC$TKrB./CJieQGJieQGniQb3r]c":a0#0=rMognrLWqOrJ(8nrF>e)
rC-WFrA+=(r@IdqJh)F'Jh)F'Uau?or\!@SJfWA^r>bbSr#,GKr=o2Br=8c6r!N6*g]rE9Jd6l4Jd8gk
rWpd7K'W="q<IqArSd_,r5noGrLa%DrG_^@r(d2YrBL6C`]Jc6JieQGJihUHr&jsCZ`TOqq5jOprMKOb
r07/7rH8'KrDWY`r&Xd3r@\%"X=JlQJh)F'Jh-CBr%.h"JfVHDr>bbSr#,GKr=o2Br=8c6r!N6*p'60S
Jd6l4Jd7nQrWq]QK'VC]q<IqArSd_,r5noGrLa%DrG_^@r(d2YrBL6Ci&cNPJieQGJig\.r&jsCc)lT"
qlT[qrMognrLWqOrJ(8nrF>e)rC-WFrA+=(r@Gr=Jh)F'Jh)F'fIQkNr[tMtMB2X8r>PSOr>,>Gr=Su<
r<rN1q$<o(Jd6l4Jd6l4m0EUrK'L8=rTO4BrS[Y+r5eiFrLa%DrG_^@r(d2YrBL6CqE'9jJieQGJifbi
r&jsCkH'9:h5pRUrMfalrLWqNrJ(8nrF>e)rC-WFrA+=(r@HkWJh)F'Jh)F'^+9+4r[uG9JfXG'q&K>O
r#,GKr=o2Br=8c6r!N6*_?YYtJd6l4Jd9a0rWojqP3W#0rT=(:rR^tgrO2ZsrJ1>jrE]=rrC$TKrB./C
JieQGJieQGniQb3r]c"9_lWg;rMfalrLWqNrJ(8nrF>e)rC-WFrA+=(r@IdqJh)F'Jh)F'Uau?or\!@S
JfWMbq&K>Or#,GKr=o2Br=8c6r!N6*g]rE9Jd6l4Jd8gkrWpd6K'N*qrTO4BrS[Y+r5eiFrLa%DrG_^@
r(d2YrBL6C`]Jc6JieQGJihUHr&jsCZ`K=krN#mrrMBIar0.)6rH8'KrDWY`r&Xd3r@\%"X=JlQJh)F'
Jh-CBr%.h"JfVTHq&K>Or#,GKr=o2Br=8c6r!N6*p'60SJd6l4Jd7nQrWq]PK'M1WrTO4BrS[Y+r5eiF
rLa%DrG_^@r(d2YrBL6Ci&cNPJieQGJig\.r&jsCc)cMupT4=orMfalrLWqNrJ(8nrF>e)rC-WFrA+=(
r@Gr=Jh)F'Jh)F'fIQkNr[tMtNZIp8r>PSOr>,>Gr=Su<r<rN1q$<o(Jd6l4Jd6l4m0EUrK'1&7rT=(=
rS@G%r5S]ArLNnArG_^@r(d2YrBL6CqE'9jJieQGJifbir&jsCkGj-6h5^FQrMTUhrLEeKrIk,jrF5_'
rC-WFrA+=(r@HkWJh)F'Jh)F'^+9+4r[uG9JfXS+q&K>Pr>PSNr>,>Fr=Jo;r<rN1q$=hBJd6l4Jd6l4
dg,jXZfdM7rT=(=rS@G%r5S]ArLNnArG_^@r(d2YrBL6CX?2"qJieQGJiiNbr&jsCJuZ_grMfanrM0=]
r0%#3rH%pHrDNS_r&Xd3r@\%"qC@.JJh)F'Jh*WIr%.h"k8f-ph&Z;2r>Y\Rr##AJr=f,@r=8c6r!N6*
g]rE9Jd6l4Jd8gkrWpd3K'2mkrT=(=rS@G%r5S]ArLNnArG_^@r(d2YrBL6C`]Jc6JieQGJihUHr&jsC
Z`91grMfanrM0=]r0%#3rH%pHrDNS_r&Xd3r@\%"X=JlQJh)F'Jh-CBr%.h"JfV`Lq&K>Pr>PSNr>,>F
r=Jo;r<rN1q$?[!Jd6l4Jd6l4T*P?$kN@H[h<4b!rT!k4rRCbbrNlHnrJ(8irE]=rrC$TKrB0""JieQG
JieQG^,u6Tr]eZ-Ju\RFrMfanrM0=]r0%#3rH%pHrDNS_r&Xd3r@\%"`[cWkJh)F'Jh,J(r%.h"ZQ52L
q&K>Pr>PSNr>,>Fr=Jo;r<rN1q$<o(Jd6l4Jd6l4m0EUrK&Xi1rSd_5rS@G*rQb>WrNH0grIb&drEK1o
rC$TKrB0p<JieQGJieQGUc\K:r]fSCJu7A$rMBIfrLj+Vr/U`,rGhdDrDEM\r&O^2r@\%"i%'C0Jh)F'
Jh+Pcr%.h"boD<To,RQFr>GMMr>,>Fr=Jo;r<rN1q$=hBJd6l4Jd6l4dg,jXZf7;1rSd_5rS@G*rQb>W
rNH0grIb&drEK1orC$TKrB./CJieQGJieQGniQb3r]c"3_l!C/rM0=arL!MCrIOoerF#S$rBpKCrA+=(
r@IdqJh)F'Jh)F'Uau?or\!@RJfNG`q&B8Mr##AJr=f,@r=8c6r!N6*g]rE9Jd6l4Jd8gkrWpd.K&Z[e
rSd_5rS@G*rQb>WrNH0grIb&drEK1orC$TKrB/(]JieQGJieQGfK9!nr]d`dP,A2SrM0=arL!MCrIOoe
rF#S$rBpKCrA+=(r@G$#Jh)F'Jh)F'ngjVhr[rdB^E!%gr>GMMr>,>Fr=Jo;r<rN1q$?[!Jd6l4Jd6l4
T*P?$kMh*QiSsgprS[Y1rRq.pr5&?8rL3\;rGMR<r([,XrBL6Ci&cNPJieQGJig\.r&jsCc)-)ipSRnc
rM0=arL!MCrIOoerF#S$rBpKCrA+=(r@Gr=Jh)F'Jh)F'fIQkNr[tMsNZ@j6r>GMMr>,>Fr=Jo;r<rN1
q$<o(Jd6l4Jd6l4m0EUrK%S,rq:GSprQbA]r42d)rKR80rG2@8r(R&WrBL6CqE'9jJieQGJifbir&jsC
kF[?uiLfq;rLEhRrK@)7rHnK[rE]@trBgEArA+=(r@HkWJh)F'Jh)F'^+9+4r[uG7JfFS+oc!cHr>>GK
r>#8Dr=Jo:r<rN0q$=hBJd6l4Jd6l4dg,jXZe1Srq:GSprQbA]r42d)rKR80rG2@8r(R&WrBL6CX?2"q
JieQGJiiNbr&jsCJtL)Uq4@PTrL!PHr.t;urGDL=rD3AYr&FX1r@\%"qC@.JJh)F'Jh*WIr%.h"k8T!l
i>_G.r>GPNr"o;Hr=]&?r=/]5r!E0)g]rE9Jd6l4Jd8gkrWpd$K%TtQq:GSprQbA]r42d)rKR80rG2@8
r(R&WrBL6C`]Jc6JieQGJihUHr&jsCZ_*PUq4@PTrL!PHr.t;urGDL=rD3AYr&FX1r@\%"X=JlQJh)F'
Jh-CBr%.h"JfMfNoc*iJr>GMMr>#8Er=Jo;r=&T2r<`$#Jd?r6Jd?r6S-\<1K%T&7q:GSprQbA]r42d)
rKR80rG2@8r(R&WrBL6Ci&cNPJieQGJig\.r&jsCc(BT[qk*\UrLEhRrK@)7rHnK[rE]@trBgEArA+=(
r@Gr=Jh)F'Jh)F'fIQkNr[tMsQ5oQ:r>PVPr##AIr=f,@r=8c7r!NB/U^2PXJd?r6JdCWIK#tpPrQ+rW
rPAHCr2opirJ^]#rFZ"1r(HuUrBL6CqE'9jJieQGJifbir&jsCkELR_h3@l%rK@,>rJ:B%rH8'OrE9(l
rBU9>rA+=(r@HkWJh)F'Jh)F'^+9+4r[uG6Jf=5!q&0,Jr"f5Fr=]&>r=/]5r!NB/^'K;rJd?r6JdB^/
ZcSBPrQ+rWrPAHCr2opirJ^]#rFZ"1r(HuUrBL6CX?2"qJieQGJiiNbr&jsCJs=0;rKI2CrJpi4r.+`g
rFc(3rCd)Sr&=R0r@\%"qC@.JJh)F'Jh*WIr%.h"k8Jpjfc'Z(r>>GJr=o2Cr=Ai9r<rN1r<_*^Jd?r6
Jd?r6[Kt."K$!c/rQ+rWrPAHCr2opirJ^]#rFZ"1r(HuUrBL6C`]Jc6JieQGJihUHr&jsCZ]pW;rKI2C
rJpi4r.+`grFc(3rCd)Sr&=R0r@\%"X=JlQJh)F'Jh-CBr%.h"Jf;BBq&0,Jr"f5Fr=]&>r=/]5r!NB/
nd'gQJd?r6Jd@kPkK/=th9#W:rPnfPrOMj.rLa%IrH\?RrE/tjrBpNJrB0""JieQGJieQG^,u6Tr]eYl
Js?"orKI2CrJpi4r.+`grFc(3rCd)Sr&=R0r@\%"`[cWkJh)F'Jh,J(r%.h"ZPniBq&0,Jr"f5Fr=]&>
r=/]5r!NB/U^2PXJd?r6JdCWIK#tpPrQ+rWrPAHCr2opirJ^]#rFZ"1r(HuUrBL6CqE'9jJieQGJifbi
r&jsCkELR_h3@l%rK@,>rJ:B%rH8'OrE9(lrBU9>rA+=(r@HkWJh)F'Jh)F'^+9+4r[uG6Jf=5!q&0,J
r"f5Fr=]&>r=/]5r!NB/^'K;rJd?r6JdB^/ZaPn&rNlI+rM]XdrK7&0rG_^CrDWVcrB^BHrB./CJieQG
JieQGniQb3r]c!h^P;]?rIOoor,qsRrEoM%rC?fLr&4L-r@\%"qC@.JJh)F'Jh*WIr%.h"k8/^deJJ0"
r>#5Er=]&?r=8c7r<rN0e-LX3Jd?r6JdAdjc*i54o="V(rNH0ur1EqMrIOodrF#S&r(6iQrBL6C`]Jc6
JieQGJihUHr&jsCZ\FKprIk-#rHnHbrG2@=rDWYbrB:':r@n1&r@G$#Jh)F'Jh)F'ngjVhr[rd=],1D]
r>#5Er=]&?r=8c7r<rN0mKeCMJd?r6Jd@kPkI,uNfs^jcrNH0ur1EqMrIOodrF#S&r(6iQrBL6Ci&cNP
JieQGJig\.r&jsCc%^h)o7m3srIOoor,qsRrEoM%rC?fLr&4L-r@\%"`[cWkJh)F'Jh,J(r%.h"ZPSK8
r>,>Hr"T)Br=Jo;r=&W4r!B#%Jd?r6Jd?r6l3N!M^UF*IrNH0ur1EqMrIOodrF#S&r(6iQrBL6CqE'9j
JieQGJifbir&jsCkD"SCfnTHYrIOoor,qsRrEoM%rC?fLr&4L-r@\%"i%'C0Jh)F'Jh+Pcr%.h"bnksJ
mhbp<r>#5Er=]&?r=8c7r<rN0\d3lnJd?r6JdB^/Z_*8MrLNnUrKR5=rIOohrFZ"2rD*8[rB^BGrB./C
JieQGJieQGniQb3r]c!W^NKKrrGhdQr+Gt8rDiehrBgHDr&"@+r@Rt!qC@.JJh)F'Jh*WIr%.h"k7iL^
d1lNmr"Ar>r=Ai9r<rQ2r!CjYJd?r6Jd?r6[Kt-MJtMY,rLNnUrKR5=rIOohrFZ"2rD*8[rB^BGrB/(]
JieQGJieQGfK9!nr]d`3Nck;ArGhdQr+Gt8rDiehrBgHDr&"@+r@Rt!X=JlQJh)F'Jh-CBr%.h"JeY[.
r=f)Ar=Jo<r=/]5r<iH/mKeCMJd?r6Jd@kPkF[?ufq856rL3\Lr/CT*rH/!MrE9(or'pWNrBC0Bi&cNP
JieQGJig\.r&jsCc#nV\o6("QrGhdQr+Gt8rDiehrBgHDr&"@+r@Rt!`[cWkJh)F'Jh,J(r%.h"ZP8-.
r=f)Ar=Jo<r=/]5r<iH/TEp,TJd?r6JdCWIJtKfMrLNnUrKR5=rIOohrFZ"2rD*8[rB^BGrB0p<JieQG
JieQGUc\K:r]fRgJp#ahrH%pWrGDIFrEoM'rCd)UrAsj5r@n1%r@HkWJh)F'Jh)F'^+9+4r[uG0Je[Mb
r=f)Ar=Jo<r=/]5r<iH/\d3lnJd?r6JdB^/Z\OQrrJ(9(rI4ZirG_^IrET;!rCZuUrBU<ErB./CJieQG
JieQGp,i%3r]c!F^L[:QrF5_2r)rtsrCm/XrB:*<r%e4(r@R^oJh2L)Jh2L)T.Ksok7N:Xd1Q<gr"&`9
r=/]6r<i<+e-LX3Jd?r6JdAdjc%gn+o8!:!rIk,ur-A6[rFZ"5rDNSdr'^KKrB:*A`]Jc6JieQGJihaL
pcSO?ZXf),rF>e8rE]>(rDWYgrC$TIrAXX0r@e+$W%<NOJh2L)Jh6:?r[rd7[h8QMr"&`9r=/]6r<i<+
mKeCMJd?r6Jd@kPkD+YEfn]N\rIk,ur-A6[rFZ"5rDNSdr'^KKrB:*Ai&cNPJieQGJigh2pcSO?c")E:
o47f0rF5_2r)rtsrCm/XrB:*<r%e4(r@Pl;Jh2L)Jh2L)dk(JNZOqp(r=Jl;r=8c8r=&W3p^*T!Jd?r6
Jd?r6l3Mus^PDcBrIk,ur-A6[rFZ"5rDNSdr'^KKrB:*AqE'9jJieQGJifnmpcSO?k@B0Tfjt%krF5_2
r)rtsrCm/XrB:*<r%e4(r@QeUJh2L)Jh2L)\Ld_4bn5O>lOj(,r"&`9r=/]6r<i<+\d3lnJd?r6JdB^/
ZZ(e@rGMRLr+>n9rEB.trCm/Zr'C9GrB9s=YWIFuJieQGJiifjq)nR<r]l'6]2SZ*rD3>brCHlSrB:*=
rA=F+r@\%#p+1eHJh2L)Jh3]Kr%7n$k73(RbmsX\q$d'+r<^dUJd?r6Jd?r6[Kt,sJoL0trGMRLr+>n9
rEB.trCm/Zr'C9GrB9s=aub2:JieQGJihmPq)nR<r]megMGsINrD3>brCHlSrB:*=rA=F+r@\%#W%<NO
Jh2L)Jh6IDr%7n$Je,I(q%!0/r=&W4r<i<+mKeCMJd?r6Jd@kPkAZ#leStJ)rG2=CrF,Y.rDNSfrC6]N
rBL6Dq)m_"JieQGJieQG`]NuYr&t$Ebu93mmo00^rD3>brCHlSrB:*=rA=F+r@\%#_CU9iJh2L)Jh5P*
r%7n$ZO_p(q%!0/r=&W4r<i<+TEp,TJd?r6JdCWIJoJ>@rGMRLr+>n9rEB.trCm/Zr'C9GrB9s=r]>]n
JieQGJig%qq)nR<r]oXFJlC2urDEMhr(R&[rBpNHrAaa4r%S(%r@QeUJh2L)Jh2L)^+B16r\)M,Je.;\
q%!0/r=&W4r<i<+\d3lnJd?r6JdB^/ZX/MqrE]A*r)intrD<GdrC?fRr'C9GrBC0CX?;(sJinWIJir`h
rB:'Br]u-*]12`frBpKKrBL6BrAaa5rA+:)q(DUtqCI4LJh2L)Jh3iOr@Rq"r\3LDJdf^/q$[-.oEj"Q
Jd?r6Jd?r6\Hr0@c!H!.mp>rurEB,$rDiemrCm/[rBpKKrBL6ErB8._JinWIJinWIgcYNur'(*GZUTgA
rC-ZPr'C9GrB's;rAFO/r%Rq!r@P*%Jh2L)Jh2L)p+6.or%@t&Jdedjq$[-.oEjpkJd?r6Jd?r6T*YE&
k?`aHeR&2[rEB,$rDiemrCm/[rBpKKrBL6ErB9($JinWIJinWI_E@c[r'(*Gbsm:Smmd7ErBpKKrBL6B
rAaa5rA+:)q(DUt`[l]mJh2L)Jh5\.r@Rq"r\1YeJdhPcq$[-.oEh/rJd?r6Jd?r6m0N[tJmQ&qrE]A*
r)intrD<GdrC?fRr'C9GrBC0CqE0?lJinWIJiotorB:'Br^#^:Jk"9[rC-ZPr'C9GrB's;rAFO/r%Rq!
r@QqYJh2L)Jh2L)_CYX;r%@t&bm]14iXGVjr<i0'\d3lnJd?r6JdBg2rX#o/L/RtIr(m8brCd)[rC-ZP
pd+jDW'>kuJj4iOJj8rnrBU9Hr^29#[ls[Pr&aj;rAX[4rA4C-pb;Y"p+CqLJhDX-JhEuSr@e(&r\EXE
Jd]g2oEspkfEd'7Jd?r6JdB'rq$G;DJl:o4rDEJgrCm/_rCHlUrBp?GrBS4aJj4iOJj4iOgcta&r'C<L
ZTX%+rB1!>rAjg8rAFO0rA+.%r@b*%JhDX-JhDX-p+H:sr%S+*Jd\mmoEspknd'gQJd?r6JdA.Xq$H4^
Jl9uorDEJgrCm/_rCHlUrBp?GrBT.&Jj4iOJj4iO_E[uar'C<LbrpYAlTP2/r&aj;rAX[4rA4C-pb;Y"
_CgEmJhDX-JhGh2r@e(&r\CefJd_2Xlj9HnJd?r6Jd?r6nd,$tJl9'UrDEJgrCm/_rCHlUrBp?GrBU'@
Jj4iOJj4iOW'C5Gr'C<Lk<4D[d67Fjr&aj;rAX[4rA4C-pb;Y"gb+12JhDX-JhFnmr@e(&r\D_+Jd^`L
oEspk^'K;rJd?r6JdC!7q$FB*L/RtIr(m8brCd)[rC-ZPpd+jDW'>kuJj4iOJj8rnrBU9Hr^29#[ls[P
r&aj;rAX[4rA4C-pb;Y"p+CqLJhDX-JhEuSr@e(&r\EXEJd]g2oEspkfEd'7Jd?r6JdB'rq$G;@JkkW,
rD!&\rCd)]rCHlWr'pKN_F/uDJjb2YJjeB^rC-WRr^jFWL-#8npc8./q)/(,q(ns)Jhhp5Jhhp5p+lS&
r&"C2JdS4Zi<b)BJdI#8JdJ%UrX.g`Jkj]grD!&\rCd)]rCHlWr'pKNgdH`^Jjb2YJjdIDrC-WRr^k?q
Ji`3YoJu_+q)/(,q(olCJhhp5Jhhp5gbSgar&"C2ZO29kn-Y?cJdI#8JdI#8m0Wb!JkidMrD!&\rCd)]
rCHlWr'pKNp-aL#Jjb2YJjcP*rC-WRr^l96Ji_:?oJu_+q)/(,q(pe]Jhhp5Jhhp5_D;'Gr&"C2bmK%0
edAMcJdI#8JdI#8dg?!\ZVH6MrD!&\rCd)]rCHlWr'pKNW'l5*Jjb2YJjf<#rC-WRr^h]&[lX.Aq)A+,
r&"4*p+h4TJhhp5Jhj8[rA4@.r\ipHJdT-t`sI>(JdI#8JdJsorX-nJJl:H'rDEMilqbJnJkgnmJkgnm
geRW?r_g'cJj&llrB0:*W&fMkJi\KEJi`TdpcJI<Jd\:\i<k/DJdR):JdS+WrX7meJl9NbrDEMilqcD3
JkgnmJkgnm_G9l%r_h!(Jj%sRrB0:*_E*90Ji\KEJi_[JpcJI<ZO;?mn-bEeJdR):JdR):m0`h#Jl8UH
rDEMilqd=MJkgnmJkgnmW)!+`r_hoBJj%%8rB0:*gcC$JJi\KEJi^b0pcJI<bmT+2edJSeJdR):JdR):
dgH'^ZVlBQpeq&frD;iVW(qq>JkgnmJkl#7peUleJj$+srB0:*p,[ddJi\KEJi]hkpcJI<k6lkL]F2ae
JdR):JdR):\I/<Dc!H!.em>IaJmEt6JmEt6fNnD]raE-&Jk#6!P=:'lJjk8[Jjo6!r'pZVJdm;@Jdm;@
Jdm;@S.4XfJmQ)ra'F:&JmEt6JmH)rr*KA2bsm:Sejcc1Jjk8[Jjk8[fL>^-r^a@)Jdm;@Jdm;@Jdm;@
l4&>OU0ceaJmEt6JmEt6Ug<n)raFtZJk!CBa$kSKJjk8[JjmCBr'pZVbmf76Jdm;@Jdm;@Jdp'9ZX/5i
n6V;aJmEt6JmEt6nm20"raCCJU.4*1Jjk8[Jjk8[Udb2Nr^c2]Jdm;@Jdm;@Jdm;@[LLK$JoQB^JoQB^
JoQB^fQ$h0rcGJFJl@8"Jl@8"Jl@8"nl,Hcr`+O\Je*GDJe*GDJe+IarXe74JoQB^JoQB^JoQB^^2a'k
rcHC`Jl@8"Jl@8"Jl@8"fMh]Ir`-98Je*GDJe*GDJe*GDm191-JoQB^JoQB^JoQB^UiH<QrcI=%Jl@8"
Jl@8"Jl@8"^/Or/r`.2RJe*GDJe*GDJe*GDdguEhZZ1S:JoQB^JoQB^JoU@$r,VdYJl@8"Jl@8"Jl@8"
Uf71jr`/+lJe*GDJe*GDJe*GD\I\ZNc%gn+Jqnr5Jqnr5Jqr-:rJ:B.ree$mJn0IDJn0IDJn0IDnmqZ0
rap`pJeEYJJeEYJJeFjlq%MqHJqnr5Jqnr5Jqnr5_MA)Gr/(E1c")E:Jn0IDJn0IDJn3MEr+5k>ZP%j&
JeEYJJeEYJJeIVeq%J@8Jqnr5Jqnr5Jqp:[rJ:B.reflLJn0IDJn0IDJn0ID^1@.QrasCfJeEYJJeEYJ
JeEYJfFmunZ\O-fJqnr5Jqnr5Jqs&TrJ:B.rec;<Jn0IDJn0IDJn1Zfr+5k>k7W@ZJeEYJJeEYJJeGd1
q%M#GJtR^gJtR^gJtR^ge"H]7ZZ^qDJp)`hJp)`hJp-O)rc`r0JeiqRJeiqRJejjlkFdF"JtR^gJtR^g
JtTZIrh@Y\Jp)`hJp)`hJp)`hdrt_7ZPJ-.JeiqRJeiqRJemVeJtR^gJtR^gJtR^gT:l1XkB;H#Jp)`h
Jp)`hJp+\JrccU&JeiqRJeiqRJeiqRck`s\JtR^gJtR^gJtR^gm@aHQJp)`hJp)`hJp)`hT6C3Xk8&Xb
JeiqRJeiqRJekm4rYNhPJtR^gJtR^gJtR^ge"H]7ZZ^qDJp)`hJp)`hJp-O)rc`r0JeiqRJeiqRJejso
rYOb+K!p9>K!p9>K!p9>^:*sKrj^4-Jqel3Jqel3Jqel3fS9<ZreRluJf0.XJf0.XJf0.Xneq6AK!p9>
K!p9>K!p9>Upg31rj_-GJqel3Jqel3Jqel3^4uQ@reSf:Jf0.XJf0.XJf0.XfGXK'ZaPIoK!p9>K!p9>
K!t6Yr3u[8Jqel3Jqel3Jqel3Uk\f&reT_TJf0.XJf0.XJf0.X^)?_bc*i54K!p9>K!p9>K!s=?r3u[8
Z\O-fJqnr5Jqnr5JqroPr.t?/Jf0.XJf0.XJf0.XU`&tHkK8D!K$&\fK$&\fK$(XHrl`QPJsM"SJsM"S
JsM"Sd$D!XJfK@^JfK@^JfK@^l5YDuK$&\fK$&\fK$'_.rlaJjJsM"SJsM"SJsM"S[[,/XJfK@^JfK@^
JfK@^clBC7K$&\fK$&\fK$&\fmE5FOJsM"SJsM"SJsM"SS<i=XJfK@^JfK@^JfK@^[N*Q7K$&\fK$&\f
K$&\fe&q[5Z^-3/JsM"SJsM"SJsP\fJfK@^JfK@^JfK@^S/g_FK%Yb/K%Yb/K%Yb/[b8p!Jt[diJt[di
Jt[did%RceJf]LbJf]LbJf]Lbl5kQ1K%Yb/K%Yb/K%Z[IkFmL$Jt[diJt[diJt]WHboVHXJf]LbJf]Lb
Jf`8[Ze9r`K%Yb/K%Yb/K%]GBJt[diJt[diJt[diS>#*eJf]LbJf]LbJf]Lb[N<]HK%Yb/K%Yb/K%Yb/
d+Pb!Jt[diJt[diJt[dilCieNJf]LbJf]LbJf^F'kMq0SK&_ICK&_ICK&a<"c)?5mJuF:"JuF:"JuI%p
ZQOiBJfoXfJfoXfJfs>$K&_ICK&_ICK&_ICSE&e2JuF:"JuF:"JuF:"[]%FoJg#^hJg#^hJg#^hcloaU
K&_ICK&_ICK&_IClJmJpJuF:"JuF:"JuG3<k95F#Jg#^hJg#^hJg%QGc/XE9K&_ICK&_ICK&b5<Z`&JS
JuF:"JuF:"JuIt5Jg#^hJg#^hJg#^hS0@(ZK'7gMK'7gMK'7gM[cku;JujR*JujR*JujR*d&aPsJg#^h
Jg#^hJg#^hl61cCK'7gMK'7gMK'8`gkH'9:JujR*JujR*JulD^boqZ^Jg#^hJg#^hJg&JaZfm#)K'7gM
K'7gMK';L`JujR*JujR*JujR*S?1lsJg#^hJg#^hJg#^h[NWoZK'7gMK'7gMK'7gMd-.g;JujR*JujR*
JujR*lE#R\Jg#^hJg#^hJg$X-kNd`cK'S$SK'S$SK'Tl2c)uZ$K!'^.K!'^.K!*J'ZQauFJg,djJg,dj
Jg0J(K'S$SK'S$SK'S$SSEo@@K!'^.K!'^.K!'^.[][k!Jg,djJg,djJg,djcm#g^K'S$SK'S$SK'S$S
lKa&)K!'^.K!'^.K!(WHk9>L%Jg,djJg,djJg.WIc0KuIK'S$SK'S$SK'UeLZ`\n_K!'^.K!'^.K!+CA
Jg,djJg,djJg,djS0I.^K'S$SK'S$SK'S$S[d22@K!'^.K!'^.K!'^.d&s]!Jg,djJg,djJg,djl6:iH
K'\*UK'\*UK']#okHBK@K!0d0K!0d0K!2Vdbp%``Jg,djJg,djJg/PcZg<;1K'\*UK'\*UK'_dhK!0d0
K!0d0K!0d0S?M*"Jg,djJg,djJg,dj[N`u_K'\*UK'\*UK'\*Ud-S*BK!0d0K!0d0K!0d0lE>d`Jg,dj
Jg,djJg-^/kNmfeK'\*UK'\*UK']r4c*)`&K!0d0K!0d0K!3P)ZQk&HJg5jlJg5jlJg9P*K'\*UK'\*U
K'\*USF#FBK!0d0K!0d0K!0d0[]dq#Jg5jlJg5jlJg5jlcm,m`K'\*UK'\*UK'\*UlKj,+K!0d0K!0d0
K!1]Jk9GR'Jg5jlJg5jlJg7]Kc0U&KK'\*UK'\*UK'^kNZ`etaK!0d0K!0d0K!4ICJg5jlJg5jlJg5jl
S0R4`K'\*UK'\*UK'\*U[d;8BK!0d0K!0d0K!0d0d''c#Jg5jlJg5jlJg5jll6CoIK'\*UK'\*UK']#o
kHBK@K!0d0K!0d0K!2Vdbp.fbJg5jlJg5jlJg8VeZg<;1K'\*UK'\*UK'_dhK!0d0K!0d0K!0d0S?M*#
Jg5jlJg5jlJg5jl[Nj&`K'\*UK'\*UK'\*Ud-S*BK!0d0K!0d0K!0d0lE>daJg5jlJg5jlJg6d1kNmfe
K'\*UK'\*UK']r4c*)`&K!0d0K!0d0K!3P)ZQk&HJg5jlJg5jlJg9P*K'\*UK'\*UK'\*USF#FBK!0d0
K!0d0K!0d0[]dq#Jg5jlJg5jlJg5jlcm+&~>

%%EndBinary
grestore % PSGState
newpath % image
393.213 55.494 mo
383.17 55.494 li
383.296 55.1093 383.436 54.7224 383.589 54.333 cv
384.453 52.146 385.83 49.59 387.72 46.692 cv
389.448 44.109 390.825 41.949 391.851 40.221 cv
392.868 38.502 393.66 36.972 394.209 35.64 cv
394.758 34.308 395.127 33.057 395.325 31.878 cv
395.523 30.699 395.622 29.367 395.622 27.882 cv
395.622 23.409 394.596 19.98 392.553 17.586 cv
390.501 15.201 387.549 14.004 383.688 14.004 cv
380.304 14.004 377.46 15.066 375.174 17.181 cv
372.897 19.296 371.754 21.924 371.754 25.056 cv
371.754 25.758 371.943 26.109 372.339 26.109 cv
372.573 26.109 372.789 26.019 372.987 25.821 cv
373.185 25.623 373.473 25.173 373.869 24.471 cv
374.805 22.977 376.263 22.23 378.216 22.23 cv
380.34 22.23 381.987 22.824 383.157 23.994 cv
384.336 25.173 384.921 26.82 384.921 28.935 cv
384.921 31.131 384.237 32.895 382.869 34.227 cv
381.492 35.559 379.674 36.225 377.397 36.225 cv
374.886 36.225 372.843 35.388 371.25 33.696 cv
369.657 32.013 368.856 29.835 368.856 27.171 cv
368.856 24.822 369.387 22.572 370.44 20.412 cv
371.502 18.252 372.969 16.434 374.85 14.94 cv
376.893 13.374 379.107 12.267 381.492 11.637 cv
383.886 11.007 386.838 10.692 390.366 10.692 cv
397.026 10.692 402.237 12.303 405.999 15.525 cv
409.761 18.747 411.642 23.175 411.642 28.818 cv
411.642 33.129 410.661 36.891 408.699 40.104 cv
407.997 41.202 407.394 42.129 406.881 42.867 cv
406.368 43.614 405.63 44.46 404.649 45.396 cv
403.668 46.341 402.3 47.574 400.536 49.104 cv
398.776 50.6306 396.344 52.7577 393.213 55.494 cv
gsave % PSGState
clp
[1 0 0 -1 0 305 ] concat
/0 /CSA get_res setcolorspace
[43.3774 0 0 45.1783 368.555 249.264 ] concat
snap_to_device
Adobe_AGM_Image/AGMIMG_filter currentfile /ASCII85Decode filter /RunLengthDecode filter ddf
<<
/ImageType 1
/Width 181 
/Height 188 
/ImageMatrix[181 0 0 -188 0 188 ]
/MultipleDataSources true
/BitsPerComponent 8 
/Decode[0 1 0 1 0 1 ]
/DataSource [
[AGMIMG_filter 181 string /readstring cvx /pop cvx] cvx
[AGMIMG_filter 181 string /readstring cvx /pop cvx] cvx
[AGMIMG_filter 181 string /readstring cvx /pop cvx] cvx
]
/NComponents 3 
/HostSepColorImage false 
/SkipImageProc {false}
/Operator /image
>>
%%BeginBinary: 1
img
Jih.;\1X%!mLFgYh@?ADW&r`dJhHRGOq,)6a?,);r[rdTc7ZL7Qk&FDJihpQU+WK!fFEKCoF?pD^,s:d
LbAQ7Je$0<Z9+O;kUqH>j=[&7Xq&uDJii]gN%Vq!_@DJ6pcF'he2r77b:^:7Pn*4DJihgNV(S]!gCAfF
nIC^D]0"(dKeE?7Je$'9[6'a;lRmcAi@^i7Wt*cDJiiTdO"S.!`=@\6q`BBkd6"WdRkEn7Je$iOT0'2;
eLlG+pF_C7_%+=DM`^\dJhGP*Je#s6\3#s;mOj)DhCbW7W".QDJiiKaOtO@!a:<n6r]>]nc9&EdQnI\7
Je$`LU-#D;fIhb.oIc17^(/+DLcbJdJhGG'Z4<?6kW=AXj?&tdXtJ67Je%MbN'"j;_Cga!p^Vlce..'l
b<*3dPqMJ7Je$WIV)tV;gFe(1nLft7]+2nDKff8dJhG>$[18Q6lT9\[iB*bdX"N$7Je%D_O#t';`@cs!
q[S2fd13HDRlfgdJhH+:T+8"6eN8@EpH+<d_(NS7M[oMDJihIDJhG5!\.4c6mQ6"^hE.PdW%Qg7Je%;\
Oup9;a=`0!rXOMic476DQojUdJhH"7U(446fK4[HoK/*d^+RA7L^s;DJih@AZ7_V!kRN1Sj:7eDXuk/d
JhHdMN"3Z6_E3Z;pb%.Ne1Q=_b7;$DPrnCdJhGn4V%0F6gH1!KnN2md].V/7Kb")DJih7>[4[h!lOJLV
i=;SDX#nrdJhH[JNt/l6`B/l;q_!IQd4V^7Rh"XDJii$TT.[9!eII0@pC<-D_)oLdM_=c7Je$9?Jih.;
\1X%!mLFgYh@?ADW&r`dJhHRGOq,)6a?,);r[rdTc7ZL7Qk&FDJihpQU+WK!fFEKCoF?pD^,s:dLbAQ7
Je$0<Z9+O;kUqH>j=[&7Xq&uDJii]gN%Vq!_@DJ6pcF'he2r77b:^:7Pn*4DJihgNV(S]!gCAfFnIC^D
]0"(dKeE?7Je$'9[6'a;lRmcAi@^i7Wt*cDJiiTdO"S.!`=@\6q`BBkd6"WdRkEn7Je$iOT0'2;eLlG+
pF_C7_%+=DM`^\dJhGP*Je#s6\3#s;mOj)DhCbW7W".QDJiiKaOtO@!a:<n6r]>]nc9&EdQnI\7Je$`L
U-#D;fIhb.oIc17^(/+DLcbJdJhGG'Z4<?6kW=AXj?&tdXtJ67Je%MbN'"j;_Cga!p^Vlce..'lb<*3d
PqMJ7Je$WIV)tV;gFe(1nLft7]+2nDKff8dJhG>$[18Q6lT9\[iB*bdX"N$7Je%D_O#t';`@cs!q[S2f
d13HDRlfgdJhH+:T+8"6eN8@EpH+<d_(NS7M[oMDJihIDJhG5!\.4c6mQ6"^hE.PdW%Qg7Je%;\Oup9;
a=`0!rXOMic476DQojUdJhH"7U(446fK4[HoK/*d^+RA7L^s;DJih@AZ7_V!kRN1Sj:7eDXuk/dJhHdM
N"3Z6_E3Z;pb%.Ne1Q=_b7;$DPrnCdJhGn4V%0F6gH1!KnN2md].V/7Kb")DJih7>[4[h!lOJLVi=;SD
X#nrdJhH[JNt/l6`B/l;q_!IQd4V^7Rh"XDJii$TT.[9!eII0@pC<-D_)oLdM_=c7Je$9?Jih.;\1X%!
mLFgYh@?ADW&r`dJhHRGOq,)6a?,);r[rdTc7ZL7Qk&FDJihpQU+WK!fFEKCoF?pD^,s:dLbAQ7Je$0<
Z9+O;kUqH>j=[&7Xq&uDJii]gN%Vq!_@DJ6pcF'he2r77b:^:7Pn*4DJihgNV(S]!gCAfFnIC^D]0"(d
KeE?7Je$'9[6'a;lRmcAi@^i7Wt*cDJiiTdO"S.!`=@\6q`BBkd6"WdRkEn7Je$iOT0'2;eLlG+pF_C7
_%+=DM`^\dJhGP*Je#s6\3#s;mOj)DhCbW7W".QDJiiKaOtO@!a:<n6r]>]nc9&EdQnI\7Je$`LU-#D;
fIhb.oIc17^(/+DLcbJdJhGG'Z4<?6kW=AXj?&tdXtJ67Je%MbN'"j;_Cga!p^Vlce..'lb<*3dPqMJ7
Je$WIV)tV;gFe(1nLft7]+2nDKff8dJhG>$[18Q6lT9\[iB*bdX"N$8Je.JaO#t';`@cs!q[\8hd1<NE
RlfgdJhH+:T+A(8eNAFGpH4Bf_(WY9M\#SFJiqOFJhP;#\.=i8mQ?(`hE7VfW%Zm9Je.A^P!$?=a=i6#
rXXSkc4@<IQp9mkJhc4=U(=:8fKXsPoKSBk^+mS;L_'AIJj7XIZ8%h'kRW7Uj:@kIY!:GkJhd!SN"<`8
_EWrCpb@@Te1lOcb7D*OPst*uJi2CBV%KX<gI6]_nO8Tu]/@YAKb=;QJjmsR[5F=/lOe^\i=VeQX$tYu
Ji30XNtK)<`D;:cq`TNod64cKRhP!]JktH'T09>?eJ!NJpCiK]_,%p2M`phKJeQWIJksQc\36*?mLt0c
h@l_lW*\4MJk>K(Or(_HaBjR,r^h]5c:PD[Ql#'pJmRDBU.MCWfGB,UoG<Qp^0\cMLe7I[JeufNZ>uFT
kZEF=jB/#oXrPu4Jo^U+N**nu_AnIRpi:t,e8g.Cb?27oPoT44Jo]^gV-'ZugDkebnJm^J]84OBKk^N1
Jg/Ja[>:3+lY1rbiG##1X!62PJr'&TO(l=B`?L*^qhTi[d>5)BRq_(1Jg08"T:rE]eU<$tpO.uK_'m0o
MkTooJpl-sJgeej\=o1]mX9\8hL24KW$pDoJt__.P'srja=2flrh4q;cCqXoR!n9LJgoY-U:@86fT(QD
oT"tb^+RC7Lq*>BJr\6=Z7_V!kdZ5SjLChBY)_$bJhHdMN4?^6_N0V9pb%.Ne1Q?rbKIDeQ(ID"Jhu7>
V9>g\gRa"gnXbn"]/.OOL!0IeJtC8Z[541+lcXn'iQIseX.Is"Ji!$TO4q>%`N"`oq_s*cd5SAbS(d)+
Ju[n3T/Wo3e_5W/pY(S+_5b@2M`:FbK%e`.Ju["o\2T[3mcB&^hW:T>W3Y/=Ji`E_P3'=;aKgN*r]>]n
c9&GqR-!Y>K!O@@U-#D;f]@_Ho];.>^9Y^>LcbM!K'LbKZF672kWFGZj?0("Y3OQGK!tE^N'+p=_Wm'E
ppPd_e@'rkb<3<"Q0ReGK!sOEV*(\=g[0U[na2LL]=>pFKg#G&K'gkN[CDU6lTKh_iB<q&X6nQLK"1H_
O$13?`U/KKqm_6fdC?JFRm$!&K'hXdT=D&6eNJLIpH=K'_=#1NMn/UGJj%UHK'phM\@Im8mQH.bhE@_'
W:&ENK":E^P!-E?aR4cMrjdWkcFL>HQp0j(K'qUcU:I>8fKOmNoKJ?(^@&tNLq3CHJj.RGZL44Mkdc;U
jLLmHY!1D(K'rC$N4Hd8_ENlAq!Nb%eF%q!bIP,HPs4X(K'qL`V7EP8gHL3QnNN-(]C*bNKt71HJj.ID
[I0FMla_VXiOP[HX$52(K'r:!O1E!8`BK)AJ,~>

%%EndBinary
grestore % PSGState
newpath % image
320.877 51.939 mo
320.652 51.939 320.382 51.741 320.076 51.336 cv
319.77 50.931 319.491 50.418 319.239 49.806 cv
318.996 49.194 318.789 48.537 318.609 47.844 cv
318.438 47.151 318.357 46.512 318.357 45.936 cv
318.357 44.937 318.564 43.893 318.987 42.813 cv
319.419 41.742 320.085 40.491 321.012 39.06 cv
321.867 37.791 322.533 36.729 323.037 35.883 cv
323.541 35.037 323.928 34.29 324.198 33.633 cv
324.468 32.976 324.648 32.364 324.747 31.788 cv
324.837 31.212 324.891 30.555 324.891 29.817 cv
324.891 27.63 324.387 25.947 323.388 24.768 cv
322.38 23.589 320.94 23.004 319.05 23.004 cv
317.394 23.004 316.008 23.526 314.892 24.561 cv
313.776 25.605 313.218 26.892 313.218 28.44 cv
313.218 28.782 313.308 28.953 313.506 28.953 cv
313.623 28.953 313.722 28.908 313.821 28.809 cv
313.92 28.719 314.064 28.494 314.253 28.143 cv
314.721 27.414 315.432 27.045 316.395 27.045 cv
317.43 27.045 318.24 27.342 318.816 27.918 cv
319.392 28.494 319.689 29.304 319.689 30.339 cv
319.689 31.419 319.347 32.283 318.672 32.94 cv
317.997 33.597 317.106 33.921 315.99 33.921 cv
314.757 33.921 313.749 33.507 312.966 32.679 cv
312.183 31.851 311.787 30.78 311.787 29.475 cv
311.787 28.323 312.048 27.216 312.57 26.154 cv
313.083 25.092 313.812 24.201 314.73 23.472 cv
315.738 22.698 316.818 22.167 317.997 21.861 cv
319.167 21.555 320.625 21.402 322.362 21.402 cv
325.629 21.402 328.194 22.185 330.039 23.76 cv
331.893 25.335 332.811 27.513 332.811 30.285 cv
332.811 32.4 332.334 34.254 331.362 35.829 cv
331.02 36.369 330.714 36.819 330.471 37.188 cv
330.219 37.548 329.85 37.962 329.364 38.43 cv
328.887 38.889 328.212 39.492 327.339 40.248 cv
326.466 40.995 325.26 42.048 323.721 43.398 cv
322.596 44.397 321.786 45.297 321.282 46.107 cv
320.787 46.917 320.535 47.763 320.535 48.654 cv
320.535 48.96 320.562 49.266 320.616 49.572 cv
320.679 49.887 320.805 50.31 320.994 50.85 cv
321.111 51.273 321.165 51.516 321.165 51.597 cv
321.165 51.831 321.075 51.939 320.877 51.939 cv
gsave % PSGState
clp
[1 0 0 -1 0 305 ] concat
/0 /CSA get_res setcolorspace
[21.5689 0 0 31 311.517 252.868 ] concat
snap_to_device
Adobe_AGM_Image/AGMIMG_filter currentfile /ASCII85Decode filter /RunLengthDecode filter ddf
<<
/ImageType 1
/Width 90 
/Height 129 
/ImageMatrix[90 0 0 -129 0 129 ]
/MultipleDataSources true
/BitsPerComponent 8 
/Decode[0 1 0 1 0 1 ]
/DataSource [
[AGMIMG_filter 90 string /readstring cvx /pop cvx] cvx
[AGMIMG_filter 90 string /readstring cvx /pop cvx] cvx
[AGMIMG_filter 90 string /readstring cvx /pop cvx] cvx
]
/NComponents 3 
/HostSepColorImage false 
/SkipImageProc {false}
/Operator /image
>>
%%BeginBinary: 1
img
s6]dOrTX:ArRq+lrO;a!rJ:DlrEfCtrC-ZLrB0+%s0qs8rNuO-rM]XarJgc'rFu:6s&f4jr&t!9rA"7(
j"C3grAX[5rA4@*r@@gnr?2%Xr>,;Er=Jo<mgejts6]dOrTX:ArRq+lrO;a!rJ:DlrEfCtrC-ZLrB0+%
s0qs8rNuO-rM]^cs.'%IrI"QXrE0"hr&t!9rA"7(j"C3grAX[5rA4@*r@@gnr?2%Xr>,;Er=Jo<rsmut
s6]dOrTX:ArRq+lrO;a!rJ:DlrEfCtrC-ZLrB0+%s0r!9!4Mj5rNQ7!r1*_FrI"QXrE0"hr&t!9rA"7(
j"C3grAX[5rA4@*r@@gnr?2%XrY>JLr"K#?r=@cqs6]dOrTX:ArRq+lrO;a!rJ:DlrEfCtrC-ZLrB0L0
p,i;`rO2[3rNQ7!r1*_FrI"QXrE0"hr&t!9rA"7(j"C3grAX[5rA4@*r[Rt!r?hIcr>Y\Nr"K#?r=@cq
s6]dOrTX:ArRq+lrO;a!rJ:DlrEfCtrC-ZLrB1'@ju`UPrO2[3rNQ7!r1*_FrI"QXrE0"hr&t!9rA"7(
j"C3grAX[5rA4@*r@@gnr?2%Xr>,;Er=Jo<h[]\RrTsLIrT*q1r6,&JrLs1GrGhdBrD*DhrC-ZLrB0+%
s0qs8rNuO-rM]XarJgc'rFu44rCHiLrAFO.r@dCfq_%b*rAX[5rA4@*r@@gnr?2%Xr>,;Er=Jo<h[]\R
rTsLIrT*q1r6,&JrLs1GrGhdBr(m8[rBL6Cj#d:MrO2[3rNQ7!r1*_FrI"QXrE0"hr&t!9rA"7(q(Ctc
q`+O5rAOU1r%S("r?hIcr>Y\Nr"K#?r=@cqs6]dOrTX:A!87A)r6,&JrLs1GrGhdBr(m8[rBL6Cj#d:M
rO2[3rNQ7!r1*_FrI"QXrE0"hr&t!9rA"7(j"C3grAX[5rA4@*r@@gnr?2%Xr>,;Er=Jo<i!oeumHsl=
rTX:ArRq+lrO;a!rJ:DlrEfCtrC-ZLrB0+%s0qs8rNuO-rM]XarJgc'rFl76r`K+ir&t!9rA"7(j"C3g
rAX[5rA4@*r@@gnr?2%Xr>,;Er=Jo<n.+pts6]dOrTX:ArRq+lrO;a!rJ:DlrEfCtrC-ZLrB0+%s0qs8
rNuO-rM]adrg`qHrI"QXrE0"hr&t!9rA"7(j"C3grAX[5rA4@*r@@gnr?2%Xr>,;Er=Jo<!"Ross6]dO
rTX:ArRq+lrO;a!rJ:DlrEfCtrC-ZLrB0+%s0r$:s0hm5rNQ7!r1*_FrI"QXrE0"hr&t!9rA"7(j"C3g
rAX[5rA4@*r@@gnr?2%XrtbVMr"K#?r=@cqs6]dOrTX:ArRq+lrO;a!rJ:DlrEfCtrC-ZLrB0O1ofN2_
rO2[3rNQ7!r1*_FrI"QXrE0"hr&t!9rA"7(j"C3grAX[5rA4@*s""+"r?hIcr>Y\Nr"K#?r=@cqs6]dO
rTX:ArRq+lrO;a!rJ:DlrEfCtrC-ZLrB1*AjZELOrO2[3rNQ7!r1*_FrI"QXrE0"hr&t!9rA"7(j"C3g
r\jg9rAOU1r%S("r?hIcr>Y\Nr"K#?r=@cqs6]dOrTX:ArRq+lrO;a!rJ:DlrEfJ!s%iS^rBL6Cj#d:M
rO2[3rNQ7!r1*_FrI"QXrE0"hr&t!9rA"7(l7Vocq`+O5rAOU1r%S("r?hIcr>Y\Nr"K#?r=@cqs6]dO
rTX:ArRq+lrO;d"!29@IrGhdBr(m8[rBL6Cj#d:MrO2[3rNQ7!r1*_FrI"QXrE0"hr&t!9rA"7(qC_%c
q`+O5rAOU1r%S("r?hIcr>Y\Nr"K#?r=@cqs6]dOrTX:ArRq+lrO;a!rJ:DlrEfCtrC-ZLrB0+%s0qs8
rNuO-rM]XarJgc'rFu:6s&f4jr&t!9rA"7(j"C3grAX[5rA4@*r@@gnr?2%Xr>,;Er=Jo<mgejts6]dO
rTX:ArRq+lrO;a!rJ:DlrEfCtrC-ZLrB0+%s0qs8rNuO-rM]^cs.'%IrI"QXrE0"hr&t!9rA"7(j"C3g
rAX[5rA4@*r@@gnr?2%Xr>,;Er=Jo<rsmuts6]dOrTX:ArRq+lrO;a!rJ:DlrEfCtrC-ZLrB0+%s0r!9
!4Mj5rNQ7!r1*_FrI"QXrE0"hr&t!9rA"7(j"C3grAX[5rA4@*r@@gnr?2%XrY>JLr"K#?r=@cqs6]dO
rTX:ArRq+lrO;a!rJ:DlrEfCtrC-ZLrB0L0p,i;`rO2[3rNQ7!r1*_FrI"QXrE0"hr&t!9rA"7(j"C3g
rAX[5rA4@*r[Rt!r?hIcr>Y\Nr"K#?r=@cqs6]dOrTX:ArRq+lrO;a!rJ:DlrEfCtrC-ZLrB1'@ju`UP
rO2[3rNQ7!r1*_FrI"QXrE0"hr&t!9rA"7(j"C3grAX[5rA4@*r@@gnr?2%Xr>,;Er=Jo<h[]\RrTsLI
rT*q1r6,&JrLs1GrGhdBrD*DhrC-ZLrB0+%s0qs8rNuO-rM]XarJgc'rFu44rCHiLrAFO.r@dCfq_%b*
rAX[5rA4@*r@@gnr?2%Xr>,;Er=Jo<h[]\RrTsLIrT*q1r6,&JrLs1GrGhdBr(m8[rBL6Cj#d:MrO2[3
rNQ7!r1*_FrI"QXrE0"hr&t!9rA"7(q(Ctcq`+O5rAOU1r%S("r?hIcr>Y\Nr"K#?r=@cqs6]dOrTX:A
!87A)r6,&JrLs1GrGhdBr(m8[rBL6Cj#d:MrO2[3rNQ7!r1*_FrI"QXrE0"hr&t!9rA"7(j"C3grAX[5
rA4@*r@@gnr?2%Xr>,;Er=Jo<i!oeumHsl=rTX:ArRq+lrO;a!rJ:DlrEfCtrC-ZLrB0+%s0qs8rNuO-
rM]XarJgc'rFl76r`K+ir&t!9rA"7(j"C3grAX[5rA4@*r@@gnr?2%Xr>,;Er=Jo<n.+pts6]dOrTX:A
rRq+lrO;a!rJ:DlrEfCtrC-ZLrB0+%s0qs8rNuO-rM]adrg`qHrI"QXrE0"hr&t!9rA"7(j"C3grAX[5
rA4@*r@@gnr?2%Xr>,;Er=Jo<!"Ross6]dOrTX:ArRq+lrO;a!rJ:DlrEfCtrC-ZLrB0+%s0r$:s0hm5
rNQ7!r1*_FrI"QXrE0"hr&t!9rA"7(j"C3grAX[5rA4@*r@@gnr?2%XrtbVMr"K#?r=@cqs6]dOrTX:A
rRq+lrO;a!rJ:DlrEfCtrC-ZLrB0O1ofN2_rO2[3rNQ7!r1*_FrI"QXrE0"hr&t!9rA"7(j"C3grAX[5
rA4@*s""+"r?hIcr>Y\Nr"K#?r=@cqs6]dOrTX:ArRq+lrO;a!rJ:DlrEfCtrC-ZLrB1*AjZELOrO2[3
rNQ7!r1*_FrI"QXrE0"hr&t!9rA"7(j"C3gr\jg9rAOU1r%S("r?hIcr>Y\Nr"K#?r=@cqs6]dOrTX:A
rRq+lrO;a!rJ:DlrEfJ!s%iS^rBL6Cj#d:MrO2[3rNQ7!r1*_FrI"QXrE0"hr&t!9rA"7(l7Vocq`+O5
rAOU1r%S("r?hIcr>Y\Nr"K#?r=@cqs6]dOrTX:ArRq+lrO;d"!29@IrGhdBr(m8[rBL6Cj#d:MrO2[3
rNQ7!r1*_FrI"QXrE0"hr&t!9rA"7(qC_%cq`+O5rAOU1r%S("r?hIcr>Y\Nr"K#?r=@cqs6]dOrTX:A
rRq+lrO;a!rJ:DlrEfCtrC-ZLrB0+%s0qs8rNuO-rM]XarJgc'rFu:6s&f4jr&t!9rA"7(j"C3grAX[5
rA4@*r@@gnr?2%Xr>,;Er=Jo<mgejtqs=:GrT!k0r6,&JrLs1GrGhdBr(m8[rBL6Cj#d.HrNuO,rMTXb
s.'%IrI"QXrE0"hr&t!9rA"7(j"C3grAX[5rA4@*r@@gnr?2%Xr>,;Er=Jo<rsmutqs=:GrT!k0r6,&J
rLs1GrGhdBr(m8[rBL6Cj#d1I!4Mj5rNH0tr1*_FrI"QXrE0"hr&t!9rA"7(j"C3grAX[5rA4@*r@@gn
r?2%XrY>JLr"K#?r=@cqqs=:GrT!k0r6,&JrLs1GrGhdBr(m8[rBL6CmQ:,(qmQI1rNH0tr1*_FrI"QX
rE0"hr&t!9rA"7(j"C3grAX[5rA4@*r[Rt!r?hIcr>Y\Nr"K#?r=@cqqs=:GrT!k0r6,&JrLs1GrGhdB
r(m8[rBL6Cr]B7(qmQI1rNH0tr1*_FrI"QXrE0"hr&t!9rA"7(j"C3grAX[5rA4@*r@@gnr?2%Xr>,;E
r=Jo<h[]\QrTa@FrSme/r6"uIrLj+FrGhdBrD*DhrC-ZLrB0+%s0hm6rNlI+rMTR`rJgc&rFu44rCHiL
rAFO.r@dCfq_%n.q)A70rA4@*r@@gnr?2%Xr>,;Er=Jo<h[]\QrTa@FrSme/r6"uIrLj+FrGhdBr(m8[
rBL6Cj#d:LrO)U1rNH0tr1*_FrHnKWrE0"hr&t!9rA"7(q(Ctcs#Bg5rAFO0r%S("r?hIcr>Y\Nr"K#?
r=@cqs6T^LrTO4>!87A)r6"uIrLj+FrGhdBr(m8[rBL6Cj#d:LrO)U1rNH0tr1*_FrHnKWrE0"hr&t!9
rA"7(j"C?kq)A70rA4@*r@@gnr?2%Xr>,;Er=Jo<i!oeum-O]9rTO4>rRq+krO;`urJ:DlrEfCtrC-ZL
rB0+%s0hm6rNlI+rMTR`rJgc&rFl76r`K+ir&t!9rA"7(j"C?kq)A70rA4@*r@@gnr?2%Xr>,;Er=Jo<
n.+pts69LGrT4"8rRUnfrNuNprJ1>jrEfCtrC-ZLrB0+%s0Va2rNZ=&rMBO_rgNeDrHeEUrE&qgr&t!9
rA"7(j"C3frAOU3rA4@)r@@gmr?2%Xr>,;Er=Jo<!"Ross69LGrT4"8rRUnfrNuNprJ1>jrEfCtrC-ZL
rB0+%s0Vg4s0M[/rN,sor0mSBrHeEUrE&qgr&t!9rA"7(j"C3frAOU3rA4@)r@@gmr?2%XrtbVMr"K#?
r=@cqs69LGrT4"8rRUnfrNuNprJ1>jrEfCtrC-ZLrB0O1ofN2\rNlI-rN,sor0mSBrHeEUrE&qgr&t!9
rA"7(j"C3frAOU3rA4@)s""+"r?_Cbr>Y\Nr"K#?r=@cqs69LGrT4"8rRUnfrNuNprJ1>jrEfCtrC-ZL
rB1*AjZELLrNlI-rN,sor0mSBrHeEUrE&qgr&t!9rA"7(j"C3fr\aa7rAFO0r%J"!r?_Cbr>Y\Nr"K#?
r=@cqs5X(;rSRS-rQtJZrNZ<jrIk,frET=ss%`M]rBL6Cj#d.ArN,ssrLs.TrJCJtrFZ".rC?cJrAFO.
r@dFgqC_e+q)/+-rA"4&r@7alr?(tVr>,;Dr=Jo<h[]\HrSme5rS%4sr5/E;rgNnWrIk,frET7qrC-ZL
rB0+%qlft"rMfahr0I;<rHS9QrDiedr&jp8rA"7(qC_%cs#0[1rA=I-r%@ptr?_Car>PVMr"Ar>r=@cq
s5X(;rSRS-rQtJZrNZ<jrIk,frET7qrC-ZLrB0+%qlft"rMfahr0I;<rHS9Qs&K)!rC?cJrAFO.r@d1`
s#0[1rA=I-r%@ptr?_Car>PVMr"Ar>r=A?,nIGTZrSme5rS%4sr5/E;rL<b=rGVX>r(d2ZrBL6Cj#d.A
rN,ssrLs4Vs-EV?rHS9QrDiedr&jp8rA"7(j"C?iq)/+-rA"4&r@7alr?(tVr>,;Dr=Jo<rsmutqq:r!
rQtMar4Dp,rKdD3rG;F:r([,YrBL6Cj#d1:!2odlrLs1Yr/gl0rH/!IrDWYar&jp8rA"7(j"C'^rA"7(
r%.dpr?M7^r>GSM!#GJFr=Jo<h[]P:rRUqorQ+oKrMfa]rI=c^rEK1orC-ZLrB0L0p,i/LrMBIdrL3YG
rIb&jrF5_(rC6]IrAFO.r@d1`pG;b&r@e("r[7apr?M7^r>GPLr"Ar>r=@cqqq:r!rQtMar4Dp,rKdD3
rG;F:r([,YrBL6Cr]B7(qksChrLs1Yr/gl0rH/!IrDWYar&jp8rA"7(j"C3crA4C-r@n.$r@.[jr?(tV
r>,;Er=Si9istt>rRUqorQ+oKrMfa]rI=c^rEK4p!)<D\rBL6Cj#d.9rMBIdrL3YGrIb&jrF5_(rC6]I
rAFO.r@dCfq_%b&rA4C-r@n.$r@.[jr?(tVr>,;Er=Si9isu+4rQ>)[rPJNFr3-'lrJgc%rFc(2r(HuV
rBL6Cj#d..rL3\NrK-r4rHnK[rEfG!rC$QErA=I-r@dt!lRr&hr@n1'r@Rpsr?hIer>khSr>#5Cr=Jc8
isu+4rQ>)[rPAQHrk&*3rLj+KrHeETrE/tjrC$TKrB0+%qjdVRrKdDDr.k5trGDL>rD<G\r&Xd5rA"7(
j"C3`r@n1'r@Rpsr?hIer>khSr>#5Cr=Jc8j:25$bKKk,rQ+rSrO`!2rLj+KrHeETrE/tjrC$TKrB0+%
qjdVRrKdDDr.k5trGDL>!)WYkrC$QErA=I-r@d1`q_A%'r@e+$r$qXlr?D1\r>GPKr"Ar>q%**-n.,KA
rQ>)[rPJNFr3-'lrJgc%rFc(2r(HuVrBL6Cj#d..rL3\NrK.&7reLH!rGDL>rD<G\r&Xd5rA"7(j"C3`
r@n1'r@Rpsr?hIer>khSr>#5Cr=Jl;rX\$!s3(A`rQ+rSrO`!2rLj+KrHeETrE/tjrC$TKrB0+%rLEnX
rL3\NrK-r4rHnK[rEfG!rC$QErA=I-r@d1`q_A%'r@e+$r$qXlr?D1\r>GVMrtYGEr=Jc8istsqrNuO.
rMf^frK@,2rGhdErD`\drBgHIrB0O1ofN&1rJUW2rIb#prGhdHrE0"krB^?ArA4C,r@d1`q^h[rr@7ap
r$MFgs!.Iar>Y\Or=o/Br=Jc8istsqrNuO.rMf^frK@,2rGhdErD`\drBgHIrB1*AjZE@!rJUW2rIb#p
rGhdHrE0"krB^?ArA4C,r@d1`q^h^s!%\!tr@.Xkr?M7_r>Y\Or=o/Br=Jc8istsqrNuO.rMf^frK@,2
rGhdErD`bfs%3/UrBL6Cj#d-trJUW2rIb#prGhdHrE0"krB^?ArA4C,r@dFgqC_Xrr@@grr@.Xkr?M7_
r>Y\Or=o/Br=Jc8istsqrNuO.rMf^frK@/3!.t/hrF,Y(r(6iRrBL6Cj#d-trJUW2rIb#prGhdHrE0"k
rB^?ArA4C,r@e""l7Vrbr@@grr@.Xkr?M7_r>Y\Or=o/Br=Jc8isu*_rLj+\rL<bOr/LZ,rH8'OrEB.q
r($]PrBC0Bj#d9grHnKhrHS9_r,)CCrEB.rs$m#XrB:';rA4C+r@d1`s!RUhr?_Cfr$)(]r>bbRr>,>F
r"8l=q%*',nIGSmrLj+\rL<bOr/LZ,rH8'OrEB.qr($]PrBC0Bj#d9grHnKhrHS9_rb_[PrFGk1rD<G^
rB:';rA4C+r@d1`s!RUhr?_Cfr$)(]r>bbRr>,>Fr"8l=q[`];isu*_rLj+\rL<bOr/LZ,rH8'OrEB.q
r($]PrBC0Bj#d9grd+WlrHeEerH.sSrFGk1rD<G^rB:';rA4C+r@d1`s!RUhr?_Cfr$)(]r>bbRr>,AG
!#,8Br=Jc8isu*_rLj+\rL<bOr/LZ,rH8'OrEB.qr($]PrBC0BmQ:,(s*XclrHeEerH.sSrFGk1rD<G^
rB:';rA4C+r@d1`s!RUhr?_Cfr$)+^!$D.Zr>GPLr=f)@r=Jc8istsBrJ1?*rI=`krGhdKrE]A#rCZuV
rBU<ErB1'@ju`<OrFc(=r*TD)rD<G`rBU<Br&+F.r@n1'j"C3Pr?2%]r?(qXr>Y\Qr>,>Gr=]#?oag'm
qhY3+rIt3"r-J<]rFc(7rDWYerC$]TrBU<ErB0+%pM'S=rF>b4rE0"prCHlPrAsj6rA+=*r@dCfq_%ah
q&oVXr#P_Tr>GPLr=o2Cr"8T4istsBrJ1?*rI=`krGhdKrE]A#rCZuVrBU<ErB0+%pM'S=rF>b4rE0"p
rCHlPrAsj6rA+=*r@dt!lRr&Xq&oVXr#P_Tr>GPLr=o2Cr"8T4istsBrJ1?*!.Xutr-J<]rFc(7rDWYe
r'gQLrB:*Aj#d!LrFc(=r*TD)rD<G`rBU<Br&+F.r@n1'j"C3Pq&oVXr#P_Tr>GPLr=o2Cr"8T4j:2/"
qf2RRrGVXNr+Gt;rEK5!rCm/[r'L?HrB9s=k<&QCrE&qurD`\krCm/[rBL?Er]C';r%n:+r@n%#k:Z?F
r>PSOr>5DJr=o2Cr=Sr=nIPC)n.,>8rG_^RrG;CErF5_0rDWYgrC?cPrBL6Dq)mh%qcNeurDrkrs%r\k
rCm/[rBU<CrAXX1rA"7)q(Ln`pDj,Nr>PSOr>>JKr=o2Dr=Sr=p^c9nqf2RRrGVXNr+Gt;rEK5!rCm/[
r'L?HrB9s=k<&WEs&f5$rDrkrr)!>crC?fOrB's:r%n:+r@n%#k:ZKKr>Y\Rr#,GMr>,>Gr=f2Crt5/?
f+7aurG_^RrG;CErF5_0rDWYgrC?cPrBL6Dq)n71ofN%QrE&qurD`\krCm/[rBU<CrAXX1rA"7)q(Ln`
pDj,Nr>PSOrttbQr>,>Gr=f,Ar".HjpL!l*rEK2%rDrkorCm/\rC$QLrBL6ErB:0CjZN90rCQrXr'gQN
rBL6BrAaa5r%n:+q(Uh^p_WiEp_NfCr=o2Dr=]&@r".HjpL!l*rEK2%rDrkorCm/\rC$WNs$?TJrBC0C
j#m'.rCQrXr'gQNrBL6BrAaa5r%n:+q(V(eqChFVp_NfCr=o2Dr=]&@r".HjpL!l*rEK2%rDrnp!)`\g
rCHlTr'C9GrBC0Cj#m'.rCQrXr'gQNrBL6BrAaa5r%n:+q(VXul7_`Fp_NfCr=o2Dr=]&@r".HjpL!l*
rEK2%rDrkorCm/\rC$QLrBL6ErB91'pIbBUrC?cSrBgHIrB($=s#Bs7r%n:+q(Uh^o,%0;r>#8Fr=f,B
r=Sr=k7@(no2GTcr)!>drCd)[rC6`Rr'L?JrBT7)o0E7=r]^?GrB1$>rAaa6rAF@+rA*7bl4j11q%EK8
oFV$5i=GNYrDNPirD!5`rCHlVrC$QMrB^BIh`q$(pd"dBr'('ArAsm:rAOU3pbVk(h_FC1r=eu>q@N]>
oFTmjo2GTcr)!>drCd)[rC6`Rr'L?JrBTX4p-8.6rBL3DrB1$>rAaa6rAF@+rA*7bl4j42!#,/@q%<61
h[f<WrDNPirD!5`rCHlVrC$QMrB^BIqEO+,o0E7=r'('ArAsm:rAOU3pbVk(h_Fj>oG%6;q%EK8oFTmj
o2GTcr)!>drCd)[rC6`RrB^KNrB^BIh`p]trBL3DrB1$>rAaa6rAF@+rA*Ihq_@@Mr=eu>q%<61h[f<S
rD*,^rCd)]q+1ERq*s71mlgG.q)\=2r&=F0oel%mjqI7tdLl(H!)EMgpeC][rCZlVr($QPhaQuspcS@5
q)J:2rAOU4h_jO0nIj:_!"nfurD*,^rCd)]q+1ERq*s71mlgG.q)SL8qDeC3q)7+fjqI7tit:bmo2#<[
peC][rCZlVr($QPhaQuss#g-?q)\=2r&=F0h_jO0nIkF*i">*MrDNSklqlS8rBTX5q*440h`]U+neBsp
k#;4VrDDoXlVI1Lk!8`,los;ikS3"jh\5-NrDNSklqmRTj\P#(q*440h`^`KdM1RPk#;4VrDE8bpJBaC
k!8`,losPpqE;q7h\5$Wr*RTQhFc`ul:KhLaqroAb$Npss%1F+hAFr_nJC%hb$OF,o1I.shAGMoi>:?X
b$P!<j%@HchAH)*d20*/p2['5k8_;X_K+dZVc`[5YoM24eoIlpqcKa9ic<%Z]iaT&V]>8`[YW1BgM*T1
!$\=sh.b&H\0CDdVhj_S]4o>1i$,(TrFr<HfHSZdZ_@&cVg[bW^aR*oje8T#paE?pe"P<cY'p.pV^UT!
`M("ol@#QZVkMmob^HrLnL:BGm#J`=a"H='VmuYbXH(mbd4V`7p:.#\k:XS'_RSa<ViUR)YqFJJf#t1e
qjs]Ailf?b]q4P]V_dne[`cpegRb?"!&LOrh4Df]\23V1VqUO<];iq2i&@RfrMloufJh/9ZeG*+VlJr>
^c00bjk?W4pc#E9e)f-AY-Ro0V`Nl"`T=h>lE[<LVrc^>bd+]>nN3Z1m'=:0a#i6AVs=2gXL?_Cd6+`"
p?JQak<-RC_Wp:KVmc=^YrpJ"f'9BGqmNCbipFbQ]t!C<V`jV<[dD>LgUO1F!'R7Ih71Y<\39=EJ,~>

%%EndBinary
grestore % PSGState
newpath % image
324.135 55.494 mo
318.249 55.494 li
318.249 55.494 li
319.059 54.684 320.058 54.279 321.255 54.279 cv
322.371 54.279 323.334 54.684 324.135 55.494 cv
324.135 55.494 li
gsave % PSGState
clp
[1 0 0 -1 0 305 ] concat
/0 /CSA get_res setcolorspace
[6.47067 0 0 1.68217 317.988 249.264 ] concat
snap_to_device
Adobe_AGM_Image/AGMIMG_filter currentfile /ASCII85Decode filter /RunLengthDecode filter ddf
<<
/ImageType 1
/Width 27 
/Height 7 
/ImageMatrix[27 0 0 -7 0 7 ]
/MultipleDataSources true
/BitsPerComponent 8 
/Decode[0 1 0 1 0 1 ]
/DataSource [
[AGMIMG_filter 27 string /readstring cvx /pop cvx] cvx
[AGMIMG_filter 27 string /readstring cvx /pop cvx] cvx
[AGMIMG_filter 27 string /readstring cvx /pop cvx] cvx
]
/NComponents 3 
/HostSepColorImage false 
/SkipImageProc {false}
/Operator /image
>>
%%BeginBinary: 1
img
k3hBBk!%qqm^`/(k!%qqk.0V<p?qJ=k.0V<k3hBBr]]R1k3hBBk!&,!r9i^Xk!":~>

%%EndBinary
grestore % PSGState
newpath % image
.504 55.494 mo
0 55.494 li
0 0 li
.504 0 li
.504 55.494 li
gsave % PSGState
clp
[1 0 0 -1 0 305 ] concat
/0 /CSA get_res setcolorspace
[.958618 0 0 55.9922 -.273135 249.264 ] concat
snap_to_device
Adobe_AGM_Image/AGMIMG_filter currentfile /ASCII85Decode filter /RunLengthDecode filter ddf
<<
/ImageType 1
/Width 4 
/Height 233 
/ImageMatrix[4 0 0 -233 0 233 ]
/MultipleDataSources true
/BitsPerComponent 8 
/Decode[0 1 0 1 0 1 ]
/DataSource [
[AGMIMG_filter 4 string /readstring cvx /pop cvx] cvx
[AGMIMG_filter 4 string /readstring cvx /pop cvx] cvx
[AGMIMG_filter 4 string /readstring cvx /pop cvx] cvx
]
/NComponents 3 
/HostSepColorImage false 
/SkipImageProc {false}
/Operator /image
>>
%%BeginBinary: 1
img
rr)oprr)oprr)oprr)oprr)oprr)oprr)oprr)oprr)oprqlclrqlclrqlclrqlclrqlclrqlclrqlcl
rqlclrqlclrqlclrqlclrqlclrqc]hrqc]hrqc]hrqc]hrqc]hrqc]hrqc]hrqc]hrqc]hrqc]hrqc]h
rqc]hrqQQcrqQQcrqQQcrqQQcrqQQcrqQQcrqQQcrqQQcrqQQcrqQQcrqQQcrqQQcrqQQcrqQQcrqQQc
rqHK`rqHK`rqHK`rqHK`rqHK`rqHK`rqHK`rqHK`rqHK`rqHK`rqHK`rqHK`rq?E\rq?E\rq?K^p\+^_
mf)q\mf)q\mf)q\mf)q\mf)q\mf)q\mf)q\mf)q\mf)n[m/H\Ym/H\Ym/H\Ym/H\Ym/H\Ym/H\Ym/H\Y
m/H\Ym/H\Ym/H\Ym/H\Ym/HYXm/HYXm/HYXm/HYXm/HYXm/HYXm/HYXm/HYXm/HYXm/HYXm/HYYm.CGQ
p$D\N!:0XW!:0XW!:0XW!:0XW!:0XW!:0XW!:0XW!:0XW!:0XW!:0XW!:0XW!:0XW!:'RV!:'RV!:'RV
!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV
!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV
!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV
!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV
!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!p]IO!VPaW
o`4:Vo`4:Vo`4:Vo`4:Vo`4:Vo`4:Vo`4:Vo`4:Vo`4:Vo`4:Vo`4:Vo`4:Vo`4:Vo`4:Vo`4:Vo`4:V
o`4:Vo`4:Vo`4:Vo`4:Vo`4:Vo`4:Vo`4:Vo`4:Vo`4:Vo`4:Vo`4:Vo`4:Vo`4:Vo`4:Vo`=@N!ql6O
rq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9V
rq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9V
rq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9V
rq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9V
rq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9V
rq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-?Xp%8@YlMgGV
lMgGVlMgGVlMgGVlMgGVlMgGVlMgGVlMgGVlMgGVlMgGVlMgGVlMgGVlMgGVlMgGVlMgGVlMgGVlMgGV
lMgGVlMgGVlMgGVlMgGVlMgGVlMgGVlMgGVlMgGVlMgGVlMgGVlMgGVlMgGVlMgGVlMgGWlLb5Op$2PL
!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV
!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV
!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV
!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV
!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV
!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!:'RV!p]IO!VPaWo`4:V
o`4:Vo`4:Vo`4:Vo`4:Vo`4:Vo`4:Vo`4:Vo`4:Vo`4:Vo`4:Vo`4:Vo`4:Vo`4:Vo`4:Vo`4:Vo`4:V
o`4:Vo`4:Vo`4:Vo`4:Vo`4:Vo`4:Vo`4:Vo`4:Vo`4:Vo`4:Vo`4:Vo`4:Vo`4:Vo`=@N!ql6Orq-9V
rq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9Vrq-9V
rq-9Vrq-9Wrq-9Wrq-9Wrq-9Wrq-9Wrq-9Wrq-9Wrq-9Wrq-9Wrq-9Wrq-9Wrq-9Wrq-9Wrq-9Wrq-9W
rq-9Xrq-9Xrq-9Xrq-9Xrq-9Xrq-9Xrq-9Xrq-9Xrq-9Xrq-9Xrq-9Xrq-9Xrq6?Yrq6?Yrq6?Yrq6?Y
rq6?Yrq6?Yrq6?Yrq6?Yrq6?Yrq6?Yrq6?Yrq6?Yrq?E\rq?E\rq?E\rq?E\rq?E\rq?E\rq?E\rq?E\
rq?E\rq?E\rq?E\rq?E\rqHK`rqHK`rqHK`rqHK`rqHK`rqHK`rqHK`rqHK`rqHK`rqHK`rqHK`rqHK`
rqQQcrqQQcrqQQcrqQQcrqQQcrqQQcrqQQcrqQQcrqQQcrqQQcrqQQcrqQQcrqccjqtgEkpAXphpAXph
pAXphpAXphpAXphpAXphpAXphpAXphpAXphpAXphpAXphpAXphpAXphpAXsiq>U9lq>U9lq>U9lq>U9l
q>U9lq>U9lq>U9lq>U9lq>U9lq>U9lq>U9lq>U?nqu6Qpqu6Qpqu6Qpqu6Qpqu6Qqqu-Zrrql]o!;lcp
!;lcp!;lcp!;lcp!;lcp!<)or!<)or!<)or!<)or!<)or!<)or!<)or!<)or!<)or!<)or!<)or!<)os
!<2ut!<2ut!<2ut!<2ut!<2ut!<2ut!<2ut!<2ut!<2ut!<2ut!<2ut!<2foK)^H&s8RT~>

%%EndBinary
grestore % PSGState
newpath % image
260.087 55.494 mo
222.747 55.494 li
225.303 53.2613 227.325 51.491 228.834 50.184 cv
230.508 48.735 231.813 47.556 232.74 46.665 cv
233.676 45.765 234.387 44.964 234.864 44.253 cv
235.35 43.542 235.926 42.669 236.601 41.625 cv
238.464 38.565 239.4 34.983 239.4 30.879 cv
239.4 25.506 237.609 21.285 234.027 18.225 cv
230.454 15.165 225.495 13.635 219.159 13.635 cv
215.811 13.635 212.994 13.932 210.717 14.526 cv
208.449 15.129 206.343 16.173 204.399 17.667 cv
202.617 19.089 201.213 20.826 200.214 22.878 cv
199.206 24.93 198.702 27.072 198.702 29.313 cv
198.702 31.851 199.467 33.921 200.988 35.523 cv
202.518 37.125 204.471 37.935 206.856 37.935 cv
209.025 37.935 210.762 37.296 212.067 36.027 cv
213.372 34.758 214.029 33.084 214.029 30.987 cv
214.029 28.971 213.462 27.405 212.346 26.289 cv
211.221 25.173 209.655 24.606 207.648 24.606 cv
205.776 24.606 204.399 25.317 203.499 26.739 cv
203.13 27.405 202.851 27.837 202.662 28.026 cv
202.473 28.206 202.266 28.305 202.05 28.305 cv
201.672 28.305 201.483 27.963 201.483 27.297 cv
201.483 24.309 202.563 21.807 204.723 19.791 cv
206.883 17.784 209.565 16.776 212.769 16.776 cv
216.414 16.776 219.204 17.91 221.139 20.187 cv
223.083 22.464 224.046 25.731 224.046 29.979 cv
224.046 31.401 223.956 32.67 223.767 33.786 cv
223.578 34.911 223.227 36.099 222.705 37.368 cv
222.183 38.637 221.436 40.095 220.464 41.733 cv
219.501 43.38 218.196 45.432 216.558 47.898 cv
214.767 50.652 213.462 53.082 212.643 55.17 cv
212.6 55.2782 212.559 55.3862 212.518 55.494 cv
178.716 55.494 li
177.253 47.4179 173.518 40.8038 167.508 35.658 cv
159.561 28.854 148.554 25.452 134.478 25.452 cv
127.026 25.452 120.78 26.118 115.731 27.45 cv
110.682 28.782 106.002 31.113 101.7 34.434 cv
97.731 37.584 94.626 41.436 92.394 45.99 cv
90.8815 49.0636 89.8822 52.2318 89.3918 55.494 cv
44.7485 55.494 li
44.8855 54.2933 44.955 53.0548 44.955 51.777 cv
44.955 44.694 42.597 39.132 37.872 35.091 cv
33.147 31.05 26.613 29.034 18.252 29.034 cv
13.833 29.034 10.116 29.43 7.119 30.222 cv
4.779 30.834 2.574 31.824 .504 33.165 cv
.504 36.135 li
3.123 34.164 6.255 33.174 9.9 33.174 cv
14.724 33.174 18.414 34.677 20.979 37.683 cv
23.544 40.68 24.822 44.991 24.822 50.598 cv
24.822 52.4172 24.7027 54.0488 24.4729 55.494 cv
10.928 55.494 li
11.317 54.4282 11.511 53.2403 11.511 51.93 cv
11.511 49.275 10.773 47.205 9.297 45.729 cv
7.821 44.253 5.751 43.506 3.096 43.506 cv
2.133 43.506 1.269 43.659 .504 43.947 cv
.504 55.494 li
.504 0 li
41.697 0 li
41.463 1.179 41.346 2.403 41.346 3.672 cv
41.346 8.82 43.083 13.095 46.575 16.497 cv
50.058 19.89 54.369 21.6 59.517 21.6 cv
64.656 21.6 68.886 19.935 72.207 16.614 cv
75.528 13.302 77.184 9.072 77.184 3.924 cv
77.184 2.556 77.049 1.251 76.806 0 cv
242.316 0 li
241.641 2.079 241.29 4.221 241.29 6.417 cv
241.29 10.098 242.388 13.095 244.593 15.417 cv
246.789 17.739 249.615 18.9 253.071 18.9 cv
256.203 18.9 258.714 17.982 260.604 16.146 cv
262.494 14.31 263.439 11.88 263.439 8.856 cv
263.439 5.931 262.629 3.663 261.009 2.043 cv
260.037 1.062 258.813 .387 257.364 0 cv
277.272 0 li
277.83 2.187 278.136 4.635 278.136 7.389 cv
278.136 9.441 278.001 11.286 277.731 12.906 cv
277.461 14.526 276.948 16.254 276.192 18.09 cv
275.436 19.926 274.356 22.032 272.961 24.408 cv
271.557 26.784 269.667 29.754 267.3 33.318 cv
264.708 37.323 262.818 40.833 261.639 43.857 cv
260.451 46.881 259.857 49.797 259.857 52.605 cv
259.857 53.5151 259.934 54.4792 260.087 55.494 cv
145.086 55.494 mo
120.972 55.494 li
120.524 54.7969 120.008 54.1546 119.421 53.568 cv
116.937 51.084 113.454 49.842 108.981 49.842 cv
104.841 49.842 101.781 51.417 99.792 54.558 cv
99.6035 54.8981 99.4259 55.2098 99.2588 55.494 cv
95.3207 55.494 li
95.3938 49.0051 97.7961 43.5629 102.519 39.159 cv
107.316 34.686 113.265 32.445 120.384 32.445 cv
128.484 32.445 134.685 34.974 138.987 40.023 cv
142.281 43.8961 144.314 49.052 145.086 55.494 cv
gsave % PSGState
clp
[1 0 0 -1 0 305 ] concat
/0 /CSA get_res setcolorspace
[278.239 0 0 55.9922 .206174 249.264 ] concat
snap_to_device
Adobe_AGM_Image/AGMIMG_filter currentfile /ASCII85Decode filter /RunLengthDecode filter ddf
<<
/ImageType 1
/Width 1161 
/Height 233 
/ImageMatrix[1161 0 0 -233 0 233 ]
/MultipleDataSources true
/BitsPerComponent 8 
/Decode[0 1 0 1 0 1 ]
/DataSource [
[AGMIMG_filter 1161 string /readstring cvx /pop cvx] cvx
[AGMIMG_filter 1161 string /readstring cvx /pop cvx] cvx
[AGMIMG_filter 1161 string /readstring cvx /pop cvx] cvx
]
/NComponents 3 
/HostSepColorImage false 
/SkipImageProc {false}
/Operator /image
>>
%%BeginBinary: 1
img
!:'OGrT4";rS@D(rRCemrQbAcrQ;4`K#rVdK#rVdK#rVdK#rVdn&YR1rMogorMBIdr1<kVrL*VMrK[>G
^6=/4Js1eMJs1eMJs1eMJs5#Sr#5AKp_`N;bSGdGJeiqRJeiqRJeiqRJelNF!:'OGrT4";rS@D(rRCem
rQbAcrQ;4`K#rVdK#rVdK#rVdK#rVdn&YR1rMogorMBIdr1<kVrL*VMrK[>G^6=/4Js1eMJs1eMJs1eM
Js5#Sr#5AKp_`N;bSGdGJeiqRJeiqRJeiqRJelNF!:'OGrT4";rS@D(rRCemrQbAcrQ;4`K#rVdK#rVd
K#rVdK#rVdn&YR1rMogorMBIdr1<kVrL*VMrK[>G^6=/4Js1eMJs1eMJs1eMJs5#Sr#5AKp_`N;bSGdG
JeiqRJeiqRJeiqRJelNF!9jCDrSme1rRCbirPnfPrOi*>rO8l:K!p9>K!p9>K!p9>K!p9>n$W4rrM][k
rLs1Zr0I;DrJgc5rJ:6'_hE\rJq\f1Jq\f1Jq\f1Jq`$7!#kYNr>>;Gr>,2Da:s4?JeWeNJeWeNJeWeN
JeZBB!9jCDrSme1rRCbirPnfPrOi*>rO8l:K!p9>K!p9>K!p9>K!p9>n$W4rrM][krLs1Zr0I;DrJgc5
rJ:6'_hE\rJq\f1Jq\f1Jq\f1Jq`$7!#kYNr>>;Gr>,2Da:s4?JeWeNJeWeNJeWeNJeZBB!9jCDrSme1
rRCbirPnfPrOi*>rO8l:K!p9>K!p9>K!p9>K!p9>n$W4rrM][krLs1Zr0I;DrJgc5rJ:6'_hE\rJq\f1
Jq\f1Jq\f1Jq`$7!#kYNr>>;Gr>,2Da:s4?JeWeNJeWeNJeWeNJeZBB!9jCDrSme1rRCbirPnfPrOi*>
rO8l:K!p9>K!p9>K!p9>K!p9>n$W4rrM][krLs1Zr0I;DrJgc5rJ:6'_hE\rJq\f1Jq\f1Jq\f1Jq`$7
!#kYNr>>;Gr>,2Da:s4?JeWeNJeWeNJeWeNJeZBB!9a=@rS@G%rQG,TrO2[-rM][jrLs.^Z(HW?JtIXe
JtIXeJtIXeJtMM(!3,porLs1ZrKR5>rJ(9$rHnKfrH>ntJouZfJouZfJouZfJouZfh/r]9r>GPNr>5DJ
r"]/Eq%Lg^JeEYJJeEYJJeEYJJeEYJb7Xg<rT!k4rRCehr5&??rN?*trM9Ccr1L<eJtIXeJtIXeJtIXe
JtIXen"0TZrMKOerL<bMr/LZ0rIFinrHS9a^3,$MJouZfJouZfJouZfJp#ml!#keRr>>JLr>,;Gr=o&@
a:a(;JeEYJJeEYJJeEYJJeH6>!9a=@rS@G%rQG,TrO2[-rM][jrLs.^Z(HW?JtIXeJtIXeJtIXeJtMM(
!3,porLs1ZrKR5>rJ(9$rHnKfrH>ntJouZfJouZfJouZfJouZfh/r]9r>GPNr>5DJr"]/Eq%Lg^JeEYJ
JeEYJJeEYJJeEYJb7Xg<rT!k4rRCehr5&??rN?*trM9Ccr1L<eJtIXeJtIXeJtIXeJtIXen"0TZrMKOe
rL<bMr/LZ0rIFinrHS9a^3,$MJouZfJouZfJouZfJp#ml!#keRr>>JLr>,;Gr=o&@a:a(;JeEYJJeEYJ
JeEYJJeH6>!9X7<rRh(nrPAE<rMBI^rKI2>rJCH.Z%mpdJqnr5Jqnr5Jqnr5JqrfM!3#jlrLWtRrJg`-
rH\?]rG2@ErFPn;rF<lWJms=@Jms=@Jms=@Jms=@h.$:"r>>JLr>#5Er=]&@q%1a\Je*GDJe*GDJe*GD
Je*GDb7=U8rS[Y,rQY;Wr3Q?urL<bLrJgc4r.qV5Jqnr5Jqnr5Jqnr5Jqnr5mtUnArM9C`rKdDAr.Frn
rGhdOrFc(?r+,b9a'sX0Jms=@Jms=@Jms=@Jn!PFr#,GMr>5DIr"T)Br=Si:bR]:9Je*GDJe*GDJe*GD
Je-$8!9X7<rRh(nrPAE<rMBI^rKI2>rJCH.Z%mpdJqnr5Jqnr5Jqnr5JqrfM!3#jlrLWtRrJg`-rH\?]
rG2@ErFPn;rF<lWJms=@Jms=@Jms=@Jms=@h.$:"r>>JLr>#5Er=]&@q%1a\Je*GDJe*GDJe*GDJe*GD
b7=U8rS[Y,rQY;Wr3Q?urL<bLrJgc4r.qV5Jqnr5Jqnr5Jqnr5Jqnr5mtUnArM9C`rKdDAr.FrnrGhdO
rFc(?r+,b9a'sX0Jms=@Jms=@Jms=@Jn!PFr#,GMr>5DIr"T)Br=Si:bR]:9Je*GDJe*GDJe*GDJe-$8
!9X7<rRh(nrPAE<rMBI^rKI2>rJCH.Z%mpdJqnr5Jqnr5Jqnr5JqrfM!3#jlrLWtRrJg`-rH\?]rG2@E
rFPn;rF<lWJms=@Jms=@Jms=@Jms=@h.$:"r>>JLr>#5Er=]&@q%1a\Je*GDJe*GDJe*GDJe*GDb7=U7
rSIM&rPnfEr2'@WrJ:E$rHS9^r,Ju\JoH<\JoH<\JoH<\JoH<\mr/9)rM0=\rK7&5r-A6XrFGk3rE0"t
r):L2Jl71uJl71uJl71uJl71uh,=.gr>5DJr=o/Br=Su=r=8H/eI7$<Jdd5>Jdd5>Jdd5>Jdfg2!9O19
rRCecrO2X#rK[>;rI4]irH%mVZ#G;6JoH<\JoH<\JoH<\JoL0t!2odjrL<bJrJ(5qrGDLDrET;'rD`\n
_bu(aJl71uJl71uJl71uJl:E&r#,GLr>,>Gr"Ar?r=Ai:oF9=ZJdd5>Jdd5>Jdd5>Jdd5>b7"C4rSIM&
rPnfEr2'@WrJ:E$rHS9^r,Ju\JoH<\JoH<\JoH<\JoH<\mr/9)rM0=\rK7&5r-A6XrFGk3rE0"tr):L2
Jl71uJl71uJl71uJl71uh,=.gr>5DJr=o/Br=Su=r=8H/eI7$<Jdd5>Jdd5>Jdd5>Jdfg2!9O19rRCec
rO2X#rK[>;rI4]irH%mVZ#G;6JoH<\JoH<\JoH<\JoL0t!2odjrL<bJrJ(5qrGDLDrET;'rD`\n_bu(a
Jl71uJl71uJl71uJl:E&r#,GLr>,>Gr"Ar?r=Ai:oF9=ZJdd5>Jdd5>Jdd5>Jdd5>b7"C3rS.:trPAH8
r1!Y@rH\?YrFPq9r*HX6JmEt6JmEt6e6T7aJmO%8JmRnP!2odhrL*VDrIFfcrFGk/rD<GbrC?cS_aK)E
Jjb2YJjdID_*rrEJjk8[h*h;]r>>JLr>#8Er"8l<r=/]6q$YOVJdR):JdR):JdR):JdR):b6e71rS.:t
rPAH8r1!Y@rH\?YrFPq9r*HX6JmEt6JmEt6e6T7aJmO%8JmRnP!2odhrL*VDrIFfcrFGk/rD<GbrC?cS
_aK)EJjb2YJjdID_*rrEJjk8[h*h;]r>>JLr>#8Er"8l<r=/]6q$YOVJdR):JdR):JdR):JdR):b6e71
rS.:trPAH8r1!Y@rH\?YrFPq9r*HX6JmEt6JmEt6e6T7aJmO%8JmRnP!2odhrL*VDrIFfcrFGk/rD<Gb
rC?cS_aK)EJjb2YJjdID_*rrEJjk8[h*h;]r>>JLr>#8Er"8l<r=/]6q$YOVJdR):JdR):JdR):JdR):
b6e71rS.:trPAH8r1!Y@rH\?YrFPq9r*HX6JmEt6JmEt6e6T7aJmO%8JmRnP!2odhrL*VDrIFfcrFGk/
rD<GbrC?cS_aK)EJjb2YJjdID_*rrEJjk8[h*h;]r>>JLr>#8Er"8l<r=/]6q$YOVJdR):JdR):JdR):
JdR):b6e70rRq.prOi*-r0.).rGDL@rE0"rpeS:mJkgnmJkgnmkt^S@rD<Gi[o.fUJl71umns._rLa%S
rJLQ#r+l79rD<G^rBU<Dpc?GUJiSECJiSECf/`1Yq)c\\JinWIJiqjO!#b_Pr>5DIr=f)?r=8c7r<rQ2
bR&k-JdI#8JdI#8JdI#8JdKU,!9=%2rQbASrM]XXrI4]^rF#S+rDNDd[8)<KJkgnmJkkQ*lqdRVrDC%%
Jl71uJl;&8!2f^erKdD>rHnHXrET:trC6`NrB0j9a#S`3JiSECJiVFCloOr(aZP/;JinWIh)kZTr>>JL
r>#8Er"/f:r=&W4r<gaTJdI#8JdI#8JdI#8JdI#8b6\1/rRq.prOi*-r0.).rGDL@rE0"rpeS:mJkgnm
Jkgnmkt^S@rD<Gi[o.fUJl71umns._rLa%SrJLQ#r+l79rD<G^rBU<Dpc?GUJiSECJiSECf/`1Yq)c\\
JinWIJiqjO!#b_Pr>5DIr=f)?r=8c7r<rQ2bR&k-JdI#8JdI#8JdI#8JdKU,!9=%2rQbASrM]XXrI4]^
rF#S+rDNDd[8)<KJkgnmJkkQ*lqdRVrDC%%Jl71uJl;&8!2f^erKdD>rHnHXrET:trC6`NrB0j9a#S`3
JiSECJiVFCloOr(aZP/;JinWIh)kZTr>>JLr>#8Er"/f:r=&W4r<gaTJdI#8JdI#8JdI#8JdI#8b6\1.
rRq.nrOMm&r/LZ"rFPq0rD*;_r'pWR[7#U7Jjb2YJjeikq*k3NrC?fWrC[#]pe:W\`(knZJkgnmmnNkZ
rLa%RrJ:Dsr+Gt1rC[#RrAjg6pbTrGJhhp5Jhhp5f.utSrA=I1rAOU5pc-\^JiSECJiVXI!#b_Pr>5DH
r=]#>r=/]5r<iK0bQre+Jd?r6Jd@tSj9^DEJdI#8b6\1.rRq.nrOMm&r/LZ"rFPq0rD*;_r'pWR[7#U7
Jjb2YJjeikq*k3NrC?fWrC[#]pe:W\`(knZJkgnmmnNkZrLa%RrJ:Dsr+Gt1rC[#RrAjg6pbTrGJhhp5
Jhhp5f.utSrA=I1rAOU5pc-\^JiSECJiVXI!#b_Pr>5DHr=]#>r=/]5r<iK0bQre+Jd?r6Jd@tSj9^DE
JdI#8b6\1.rRq.nrOMm&r/LZ"rFPq0rD*;_r'pWR[7#U7Jjb2YJjeikq*k3NrC?fWrC[#]pe:W\`(knZ
JkgnmmnNkZrLa%RrJ:Dsr+Gt1rC[#RrAjg6pbTrGJhhp5Jhhp5f.utSrA=I1rAOU5pc-\^JiSECJiVXI
!#b_Pr>5DHr=]#>r=/]5r<iK0bQre+Jd?r6Jd@tSj9^DEJdI#8b6\1.rRq.nrOMm&r/LZ"rFPq0rD*;_
r'pWR[7#U7Jjb2YJjeikq*k3NrC?fWrC[#]pe:W\`(knZJkgnmmnNkZrLa%RrJ:Dsr+Gt1rC[#RrAjg6
pbTrGJhhp5Jhhp5f.utSrA=I1rAOU5pc-\^JiSECJiVXI!#b_Pr>5DHr=]#>r=/]5r<iK0bQre+Jd?r6
Jd@tSj9^DEJdI#8b6\1.rRq.lrO;a!r/(AnrF,Y&rCQrTr'C9H[6K7-Jj4iOJj8KarBU-DrBpNPrCHl[
rCm,brDCL2Jl71uJl;&8!2]XdrKR88rHA*MrD`_crB1$9rA"(#a"DrrJhDX-JhGY-q(MY"rA"7,rAFO4
rAa^9rB&RmJinWIJiqjO!#b_Pr>,>Gr=]#=r=/]5r<`E.bQi_)Jd6l4Jd8XfnHe"YJdI#8JdKU,!93t1
rQ>)JrLs.GrH%pGrDNScrBpKKrBRbTJj4iOJj4iOks,,3pd+jGrC-ZUrCd)_r(m8g`);1bJl71umns.^
rLa%QrJ(8or+5h+rC?fKrAFO.pb0Z?JhDX-JhDX-f.QkPr%S((rA4C0rAX[7r&Xd<ei\OHJinWIh)kZT
r>>JKr=o2Cr"&`8r<rQ1r<UUPJd6l4Jd6l4Zj6+,h[+l@JdI#8b6\1.rRq.lrO;a!r/(AnrF,Y&rCQrT
r'C9H[6K7-Jj4iOJj8KarBU-DrBpNPrCHl[rCm,brDCL2Jl71uJl;&8!2]XdrKR88rHA*MrD`_crB1$9
rA"(#a"DrrJhDX-JhGY-q(MY"rA"7,rAFO4rAa^9rB&RmJinWIJiqjO!#b_Pr>,>Gr=]#=r=/]5r<`E.
bQi_)Jd6l4Jd8XfnHe"YJdI#8JdKU,!93t1rQ>)JrLs.GrH%pGrDNScrBpKKrBRbTJj4iOJj4iOks,,3
pd+jGrC-ZUrCd)_r(m8g`);1bJl71umns.^rLa%QrJ(8or+5h+rC?fKrAFO.pb0Z?JhDX-JhDX-f.QkP
r%S((rA4C0rAX[7r&Xd<ei\OHJinWIh)kZTr>>JKr=o2Cr"&`8r<rQ1r<UUPJd6l4Jd6l4Zj6+,h[+l@
JdI#8b6\1.rRh(jrO2Ztr.t;krEfFurC6`Or'('B[60%'JinWIJirE_rB:*CrBL3GrBpNRrCm/drDibt
rEB/*aBjI)JmO%8mp6!jrLWtOrJ(8nr+,b)rC-ZGrA4C*pasN;Jh2L)Jh2L)gFW.Pr@\"$rA"7-rAX[:
rBC-ErBgHNg-pT^Jjk8[h*h;]r>>JKr=o2Cr"&`8r<iK0r<UUPJd6l4Jd6l4Zj6C4q$GpcJdR):JdT[.
!93t0rQ5#HrLj(ErGhdBrD3A]rB^?FrB7PNJinWIJinWIm6(>1rBC0Er'C9KrC?f[rD<Gmr)io$rE[KN
JmO%8JmRnP!2]XcrKI27rH8$KrDWY`rAsm5r@dpta"2fnJh2L)Jh5Y-q(;Otr%J"'rA=I3rB'sAr':3I
rC#@.Jjk8[JjnKa!#b_Pr>,>Gr=]#=r=/]4r<`E.bQi_)Jd6l4Jd8Xfq$?d&h[4rBJdR):b6e7/rRh(j
rO2Ztr.t;krEfFurC6`Or'('B[60%'JinWIJirE_rB:*CrBL3GrBpNRrCm/drDibtrEB/*aBjI)JmO%8
mp6!jrLWtOrJ(8nr+,b)rC-ZGrA4C*pasN;Jh2L)Jh2L)gFW.Pr@\"$rA"7-rAX[:rBC-ErBgHNg-pT^
Jjk8[h*h;]r>>JKr=o2Cr"&`8r<iK0r<UUPJd6l4Jd6l4Zj6C4q$GpcJdR):JdT[.!93t0rQ5#HrLj(E
rGhdBrD3A]rB^?FrB7PNJinWIJinWIm6(>1rBC0Er'C9KrC?f[rD<Gmr)io$rE[KNJmO%8JmRnP!2]Xc
rKI27rH8$KrDWY`rAsm5r@dpta"2fnJh2L)Jh5Y-q(;Otr%J"'rA=I3rB'sAr':3IrC#@.Jjk8[JjnKa
!#b_Pr>,>Gr=]#=r=/]4r<`E.bQi_)Jd6l4Jd8Xfq$?d&h[4rBJdR):b6e7/rRh(jrO2Ztr.t;krEfFu
rC6`Or'('B[60%'JinWIJirE_rB:*CrBL3GrBpNRrCm/drDibtrEB/*aBjI)JmO%8mp6!jrLWtOrJ(8n
r+,b)rC-ZGrA4C*pasN;Jh2L)Jh2L)gFW.Pr@\"$rA"7-rAX[:rBC-ErBgHNg-pT^Jjk8[h*h;]r>>JK
r=o2Cr"&`8r<iK0r<UUPJd6l4Jd6l4Zj6C4q$GpcJdR):JdT[.!93t0rQ5#HrLa"CrG_^@rD3A\rBU9D
q)l2LJieQGJieQGnN6P/rB:*Dr'C9NrCm/frEB/.r+>nCrGK\qJoH<\JoL0t!2]XcrKI26rH8$JrDNS^
rAsm5r@e(#q(0]>Jh)F'Jh)F'h^eLRr@Rt#r%S(*rAX[;rBgHQr(Hu`rD;3GJl71uJl:E&!#b_Pr>,>G
r=]#=r=&W3r<`E.bQi_)Jd6l4Jd8djq$?p*r<i<-j:$VKJdd5>b7"C1rRh(jrO2Zsr.k5irE]@trC-ZM
r&sj<\N>C)JieQGJiiKaq)nU=rBL3GrC6`ZrDNStrF,V9rG2@LaDc`MJoH<\mr/9'rLWtOrIt2mr+#\'
rC$TFrA4C*r%7^qb:A/pJh)F'Jh,_/q(2Irr@\"%rA4C2rB1$FrC?cYrD*;fg/<N#Jl71uh,44jr>>JK
r=o2Cr"&`7r<iK0r<UUPJd6l4Jd6l4\-Mg8r<`E0p^?-kJdd5>Jdfg2!93t0rQ5#HrLa"CrG_^@rD3A\
rBU9Dq)l2LJieQGJieQGnN6P/rB:*Dr'C9NrCm/frEB/.r+>nCrGK\qJoH<\JoL0t!2]XcrKI26rH8$J
rDNS^rAsm5r@e(#q(0]>Jh)F'Jh)F'h^eLRr@Rt#r%S(*rAX[;rBgHQr(Hu`rD;3GJl71uJl:E&!#b_P
r>,>Gr=]#=r=&W3r<`E.bQi_)Jd6l4Jd8djq$?p*r<i<-j:$VKJdd5>b7"C1rRh(jrO2Zsr.k5irE]@t
rC-ZMr&sj<\N>C)JieQGJiiKaq)nU=rBL3GrC6`ZrDNStrF,V9rG2@LaDc`MJoH<\mr/9'rLWtOrIt2m
r+#\'rC$TFrA4C*r%7^qb:A/pJh)F'Jh,_/q(2Irr@\"%rA4C2rB1$FrC?cYrD*;fg/<N#Jl71uh,44j
r>>JKr=o2Cr"&`7r<iK0r<UUPJd6l4Jd6l4\-Mg8r<`E0p^?-kJdd5>Jdfg2!93t0rQ5#HrLa"CrG_^@
rD*;ZrBL'>[6&t%JieQGJii?]rB1$ArBU9KrC[#drET;5rG_[[rI4]urJ&OOJqnr5JqrfM!2]XcrKI26
rH8$IrDNS^rAjg3r@[jra")`lJh)F'Jh,S+r@In!r@e((rAOU:rBpNVrDNPqrET;/g1#YCJms=@h-p@%
r>>JKr=o2Cr"&`7r<iK0r<UUPJd6l4Jd6l4]a+<<r<`E0r<rQ4r!iT7kRW7UJe*GDb7=U4rRh(jrO2Zs
r.k5irE]@srC$TKpcPrGJieQGJieQGm5t8/rB:*Er'^KUrDNT!rFZ"Ir-A6irIk-(b_Le*Jqnr5mtUn>
rLWtOrIt2mr*oV&rC$TErA+=(pajH9Jh)F'Jh)F'gFN4Rr@Rt$r%e4/rB1$GrCd)er)io&rF">gJms=@
Jn!PF!#b_Pr>,>Gr=]#=r=&W3r<`E.bQi_)Jd6l4Jd8sop^$g)r<iK2r=&T5r=8$%Je*GDJe-$8!93t0
rQ5#HrLa"CrG_^@rD*;ZrBL'>[6&t%JieQGJii?]rB1$ArBU9KrC[#drET;5rG_[[rI4]urJ&OOJqnr5
JqrfM!2]XcrKI26rH8$IrDNS^rAjg3r@[jra")`lJh)F'Jh,S+r@In!r@e((rAOU:rBpNVrDNPqrET;/
g1#YCJms=@h-p@%r>>JKr=o2Cr"&`7r<iK0r<UUPJd6l4Jd6l4]a+<<r<`E0r<rQ4r!iT7kRW7UJe*GD
b7=U4rRh(jrO2Zsr.k5irE]@srC$TKpcPrGJieQGJieQGm5t8/rB:*Er'^KUrDNT!rFZ"Ir-A6irIk-(
b_Le*Jqnr5mtUn>rLWtOrIt2mr*oV&rC$TErA+=(pajH9Jh)F'Jh)F'gFN4Rr@Rt$r%e4/rB1$GrCd)e
r)io&rF">gJms=@Jn!PF!#b_Pr>,>Gr=]#=r=&W3r<`E.bQi_)Jd6l4Jd8sop^$g)r<iK2r=&T5r=8$%
Je*GDJe-$8!93t0rQ5#HrLa"CrG_^@rD*;ZrBL3BYrdP!JieQGJii?]rB1$BrB^?NrD*;orFZ"MrIOm*
rKR8LrLM0)JtIXeJtMM(!2]XcrKI26rH8$IrDNS^rAjg3r@\"!_^g<hJh)F'Jh,S+r@In!r@n.*rAjgB
rCd)hrEfD7rGDLQrH%pZicTiqJouZfh/r]9r>GPMr>#8Dr"&`8r<rQ1r<UUPJd6l4Jd6l4_$B`@r<`E0
r=&W6r=Af;r=S6+JeEYJJeH6>!93t0rQ5#HrLa"CrG_^@rD*;ZrBL3BYrdP!JieQGJii?]rB1$BrB^?N
rD*;orFZ"MrIOm*rKR8LrLM0)JtIXeJtMM(!2]XcrKI26rH8$IrDNS^rAjg3r@\"!_^g<hJh)F'Jh,S+
r@In!r@n.*rAjgBrCd)hrEfD7rGDLQrH%pZicTiqJouZfh/r]9r>GPMr>#8Dr"&`8r<rQ1r<UUPJd6l4
Jd6l4_$B`@r<`E0r=&W6r=Af;r=S6+JeEYJJeH6>!93t0rQ5#HrLa"CrG_^@rD*;ZrBL3BYrdP!JieQG
Jii?]rB1$BrB^?NrD*;orFZ"MrIOm*rKR8LrLM0)JtIXeJtMM(!2]XcrKI26rH8$IrDNS^rAjg3r@\"!
_^g<hJh)F'Jh,S+r@In!r@n.*rAjgBrCd)hrEfD7rGDLQrH%pZicTiqJouZfh/r]9r>GPMr>#8Dr"&`8
r<rQ1r<UUPJd6l4Jd6l4_$B`@r<`E0r=&W6r=Af;r=S6+JeEYJJeH6>!93t0rQ5#HrLa"CrG_^@rD*;Z
rBL3BYrdP!JieQGJii?]rB1$BrB^?NrD*;orFZ"MrIOm*rKR8LrLM0)JtIXeJtMM(!2]XcrKI26rH8$I
rDNS^rAjg3r@\"!_^g<hJh)F'Jh,S+r@In!r@n.*rAjgBrCd)hrEfD7rGDLQrH%pZicTiqJouZfh/r]9
r>GPMr>#8Dr"&`8r<rQ1r<UUPJd6l4Jd6l4_$B`@r<`E0r=&W6r=Af;r=S6+JeEYJJeH6>!93t0rQ5#H
rLa"CrG_^@rD*;ZrBL3BYrdP!JieQGJii?]rB1$CrB^?QrDWZ&rG_^drK7#MrM][urNj_VK!p9>K!t-V
!2]XcrKI26rH8$IrDNS^rAjg3r@\"!_^g<hJh)F'Jh,S+r@In"r@n.,rB:*KrDNT#rG)7PrHnKnrI`s\
Jq\f1Jq`$7!#keRr>5DIr=]#=r=/]5r<`E.bQi_)Jd6l4Jd9*sp^$g*r<rQ5r=Ai=r"ArAr=nT5Je`kP
JecHD!93t0rQ5#HrLa"CrG_^@rD*;ZrBL3BYrdP!JieQGJii?]rB1$CrB^?QrDWZ&rG_^drK7#MrM][u
rNj_VK!p9>K!t-V!2]XcrKI26rH8$IrDNS^rAjg3r@\"!_^g<hJh)F'Jh,S+r@In"r@n.,rB:*KrDNT#
rG)7PrHnKnrI`s\Jq\f1Jq`$7!#keRr>5DIr=]#=r=/]5r<`E.bQi_)Jd6l4Jd9*sp^$g*r<rQ5r=Ai=
r"ArAr=nT5Je`kPJecHD!93t0rQ5#HrLa"CrG_^@rD*;ZrBL3BYrdP!JieQGJii?]rB1$CrB^?QrDWZ&
rG_^drK7#MrM][urNj_VK!p9>K!t-V!2]XcrKI26rH8$IrDNS^rAjg3r@\"!_^g<hJh)F'Jh,S+r@In"
r@n.,rB:*KrDNT#rG)7PrHnKnrI`s\Jq\f1Jq`$7!#keRr>5DIr=]#=r=/]5r<`E.bQi_)Jd6l4Jd9*s
p^$g*r<rQ5r=Ai=r"ArAr=nT5Je`kPJecHD!93t0rQ5#HrLa"CrG_^@rD*;ZrBL3BYrdP!JieQGJii?]
rB1$CrB^?QrDWZ&rG_^drK7#MrM][urNj_VK!p9>K!t-V!2]XcrKI26rH8$IrDNS^rAjg3r@\"!_^g<h
Jh)F'Jh,S+r@In"r@n.,rB:*KrDNT#rG)7PrHnKnrI`s\Jq\f1Jq`$7!#keRr>5DIr=]#=r=/]5r<`E.
bQi_)Jd6l4Jd9*sp^$g*r<rQ5r=Ai=r"ArAr=nT5Je`kPJecHD!93t0rQ5#HrLa"CrG_^@rD*;ZrBL3B
YrdP!JieQGJii?]rB1$CrBpKUrE0#1rH\@#rLa"irOMmCrPnfWd)gm]K#rVdn&YR+rLWtOrIt2mr*oV&
rC$TErA+=(r%,`9Jh)F'Jh)F'gFN4Rr@\%'r&=R>rCd)krFc(Nr."[$rJgc<hNNPTJs1eMh3.gWr>GPM
r>#8Dr"&`8r<rQ1r<UUPJd6l4Jd6l4_$BoEr!E</r=&W7r=Jo?r"T)Er>+`9Jes"TJeuTH!93t0rQ5#H
rLa"CrG_^@rD*;ZrBL3BYrdP!JieQGJii?]rB1$CrBpKUrE0#1rH\@#rLa"irOMmCrPnfWd)gm]K#rVd
n&YR+rLWtOrIt2mr*oV&rC$TErA+=(r%,`9Jh)F'Jh)F'gFN4Rr@\%'r&=R>rCd)krFc(Nr."[$rJgc<
hNNPTJs1eMh3.gWr>GPMr>#8Dr"&`8r<rQ1r<UUPJd6l4Jd6l4_$BoEr!E</r=&W7r=Jo?r"T)Er>+`9
Jes"TJeuTH!93t0rQ5#HrLa"CrG_^@rD*;ZrBL3BYrdP!JieQGJii?]rB1$CrBpKUrE0#1rH\@#rLa"i
rOMmCrPnfWd)gm]K#rVdn&YR+rLWtOrIt2mr*oV&rC$TErA+=(r%,`9Jh)F'Jh)F'gFN4Rr@\%'r&=R>
rCd)krFc(Nr."[$rJgc<hNNPTJs1eMh3.gWr>GPMr>#8Dr"&`8r<rQ1r<UUPJd6l4Jd6l4_$BoEr!E</
r=&W7r=Jo?r"T)Er>+`9Jes"TJeuTH!93t0rQ5#HrLa"CrG_^@rD*;ZrBL3BYrdP!JieQGJii?]rB1$C
rBpKUrE0#1rH\@#rLa"irOMmCrPnfWd)gm]K#rVdn&YR+rLWtOrIt2mr*oV&rC$TErA+=(r%,`9Jh)F'
Jh)F'gFN4Rr@\%'r&=R>rCd)krFc(Nr."[$rJgc<hNNPTJs1eMh3.gWr>GPMr>#8Dr"&`8r<rQ1r<UUP
Jd6l4Jd6l4_$BoEr!E</r=&W7r=Jo?r"T)Er>+`9Jes"TJeuTH!93t0rQ5#HrLa"CrG_^@rD*;ZrBL3B
YrdP!JieQGJii?]rB1$CrC$QWrEB/8rI4^0rM]Y)rPnf]rRCYpeC]B*K%P\-n(7W:rLWtOrIt2mr*oV&
rC$TErA+=(r%,`9Jh)F'Jh)F'gFN4Rr@\%(r&FXArD*;rrGDL[r.t<6rKmJPq46Z>Jt@RcJtCei!#keR
r>5DIr=]#=r=/]5r<`E.bQi_)Jd6l4Jd9*sr<W<-r<iK3r=Ai=r=f)Dr>58Hn/6fqJf0.Xb8C<>rRh(j
rO2Zsr.k5irE]@srC$TKr&h5GJieQGJieQGm5t8/rBL6Kr(R&mrG2@\rKR8Zr42dGrQbAkq:F-KK%P\-
K%TPE!2]XcrKI26rH8$IrDNS^rAjg3r@\"!_^g<hJh)F'Jh,S+r@In"rA+:1rBgHXrET;<rHnHurK7&F
rL<VRk+70rJt@Rch4=Tbr>GPMr>#8Dr"&`8r<rQ1r<UUPJd6l4Jd6l4_$BoEr!E</r=&W8r=SuAr"]/H
q&&T=Jf0.XJf2`L!93t0rQ5#HrLa"CrG_^@rD*;ZrBL3BYrdP!JieQGJii?]rB1$CrC$QWrEB/8rI4^0
rM]Y)rPnf]rRCYpeC]B*K%P\-n(7W:rLWtOrIt2mr*oV&rC$TErA+=(r%,`9Jh)F'Jh)F'gFN4Rr@\%(
r&FXArD*;rrGDL[r.t<6rKmJPq46Z>Jt@RcJtCei!#keRr>5DIr=]#=r=/]5r<`E.bQi_)Jd6l4Jd9*s
r<W<-r<iK3r=Ai=r=f)Dr>58Hn/6fqJf0.Xb8C<>rRh(jrO2Zsr.k5irE]@srC$TKr&h5GJieQGJieQG
m5t8/rBL6Kr(R&mrG2@\rKR8Zr42dGrQbAkq:F-KK%P\-K%TPE!2]XcrKI26rH8$IrDNS^rAjg3r@\"!
_^g<hJh)F'Jh,S+r@In"rA+:1rBgHXrET;<rHnHurK7&FrL<VRk+70rJt@Rch4=Tbr>GPMr>#8Dr"&`8
r<rQ1r<UUPJd6l4Jd6l4_$BoEr!E</r=&W8r=SuAr"]/Hq&&T=Jf0.XJf2`L!93t0rQ5#HrLa"CrG_^@
rD*;ZrBL3BYrdP!JieQGJii?]rB1$CrC$QWrEB/8rI4^0rM]Y)rPnf]rRCYpeC]B*K%P\-n(7W:rLWtO
rIt2mr*oV&rC$TErA+=(r%,`9Jh)F'Jh)F'gFN4Rr@\%(r&FXArD*;rrGDL[r.t<6rKmJPq46Z>Jt@Rc
JtCei!#keRr>5DIr=]#=r=/]5r<`E.bQi_)Jd6l4Jd9*sr<W<-r<iK3r=Ai=r=f)Dr>58Hn/6fqJf0.X
b8C<>rRh(jrO2Zsr.k5irE]@srC$TKr&h5GJieQGJieQGm5t8/rBL6Kr([,orGMRdrL3\gr5&?WrRq/*
rS[Y5eDc)>K&VCAn)=>DrLWtOrIt2mr*oV&rC$TErA+=(r%,`9Jh)F'Jh)F'gFN4Rr@\%(r&O^CrD<H#
rGhddr/LZArLa%_rM8GLJu+'qJu.;"!#keRr>5DIr=]#=r=/]5r<`E.bQi_)Jd6l4Jd9*sr<W<-r<iK4
r=Ai>r=o/Fr>>>Jn/?lsJf94Zb8LB?rRh(jrO2Zsr.k5irE]@srC$TKr&h5GJieQGJieQGm5t8/rBL6K
r([,orGMRdrL3\gr5&?WrRq/*rS[Y5eDc)>K&VCAn)=>DrLWtOrIt2mr*oV&rC$TErA+=(r%,`9Jh)F'
Jh)F'gFN4Rr@\%(r&O^CrD<H#rGhddr/LZArLa%_rM8GLJu+'qJu.;"!#keRr>5DIr=]#=r=/]5r<`E.
bQi_)Jd6l4Jd9*sr<W<-r<iK4r=Ai>r=o/Fr>>>Jn/?lsJf94Zb8LB?rRh(jrO2Zsr.k5irE]@srC$TK
r&h5GJieQGJieQGm5t8/rBL6Kr([,orGMRdrL3\gr5&?WrRq/*rS[Y5eDc)>K&VCAn)=>DrLWtOrIt2m
r*oV&rC$TErA+=(r%,`9Jh)F'Jh)F'gFN4Rr@\%(r&O^CrD<H#rGhddr/LZArLa%_rM8GLJu+'qJu.;"
!#keRr>5DIr=]#=r=/]5r<`E.bQi_)Jd6l4Jd9*sr<W<-r<iK4r=Ai>r=o/Fr>>>Jn/?lsJf94Zb8LB?
rRh(jrO2Zsr.k5irE]@srC$TKr&h5GJieQGJieQGm5t8/rBL6Kr([,orGMRdrL3\gr5&?WrRq/*rS[Y5
eDc)>K&VCAn)=>DrLWtOrIt2mr*oV&rC$TErA+=(r%,`9Jh)F'Jh)F'gFN4Rr@\%(r&O^CrD<H#rGhdd
r/LZArLa%_rM8GLJu+'qJu.;"!#keRr>5DIr=]#=r=/]5r<`E.bQi_)Jd6l4Jd9*sr<W<-r<iK4r=Ai>
r=o/Fr>>>Jn/?lsJf94Zb8LB?rRh(jrO2Zsr.k5irE]@srC$TKr&h5GJieQGJieQGm5t8/rBL6Kr(d2r
rG_^irLNnnr5S]brS@G4rT;JiK'.aKK'2Uc!2]XcrKI26rH8$IrDNS^rAjg3r@\"!_^g<hJh)F'Jh,S+
r@In"rA+:2rC$T^rF5_HrIb$1rL<b[rMKOlii.O/JuO@$h5LAmr>GPMr>#8Dr"&`8r<rQ1r<UUPJd6l4
Jd6l4_$BoEr!E<0r=/]9r=]&Dr"o;Kr>GDLoG`B$JfB:\b8UH@rRh(jrO2Zsr.k5irE]@srC$TKr&h5G
JieQGJieQGm5t8/rBL6Kr(d2rrG_^irLNnnr5S]brS@G4rT;JiK'.aKK'2Uc!2]XcrKI26rH8$IrDNS^
rAjg3r@\"!_^g<hJh)F'Jh,S+r@In"rA+:2rC$T^rF5_HrIb$1rL<b[rMKOlii.O/JuO@$h5LAmr>GPM
r>#8Dr"&`8r<rQ1r<UUPJd6l4Jd6l4_$BoEr!E<0r=/]9r=]&Dr"o;Kr>GDLoG`B$JfB:\b8UH@rRh(j
rO2Zsr.k5irE]@srC$TKr&h5GJieQGJieQGm5t8/rBL6Kr(d2rrG_^irLNnnr5S]brS@G4rT;JiK'.aK
K'2Uc!2]XcrKI26rH8$IrDNS^rAjg3r@\"!_^g<hJh)F'Jh,S+r@In"rA+:2rC$T^rF5_HrIb$1rL<b[
rMKOlii.O/JuO@$h5LAmr>GPMr>#8Dr"&`8r<rQ1r<UUPJd6l4Jd6l4_$BoEr!E<0r=/]9r=]&Dr"o;K
r>GDLoG`B$JfB:\b8UH@rRh(jrO2Zsr.k5irE]@srC$TKr&h5GJieQGJieQGm5t8/rBL6Kr(d2rrG_^i
rLNnnr5S]brS@G4rT;JiK'.aKK'2Uc!2]XcrKI26rH8$IrDNS^rAjg3r@\"!_^g<hJh)F'Jh,S+r@In"
rA+:2rC$T^rF5_HrIb$1rL<b[rMKOlii.O/JuO@$h5LAmr>GPMr>#8Dr"&`8r<rQ1r<UUPJd6l4Jd6l4
_$BoEr!E<0r=/]9r=]&Dr"o;Kr>GDLoG`B$JfB:\b8UH@rRh(jrO2Zsr.k5irE]@srC$TKr&h5GJieQG
JieQGm5t8/rBL6Kr(d2rrG_^jrLa%sr5eigrS[Y:rTMVnK'IsQK'Mgi!2]XcrKI26rH8$IrDNS^rAjg3
r@\"!_^g<hJh)F'Jh,S+r@In"rA+:2rC$T^rF5_IrIt05rLNn_rM][pii@[3JuaL(h5^Mor>GPMr>#8D
r"&`8r<rQ1r<UUPJd6l4Jd6l4_$BoEr!E<0r=/]9r=]&Dr"o;Lq&8`AJfB:\JfDlP!93t0rQ5#HrLa"C
rG_^@rD*;ZrBL3BYrdP!JieQGJii?]rB1$CrC$QYrE]A@rJ1?DrO2XFrR_#+rT=(Bd-?5JK'IsQn*0nL
rLWtOrIt2mr*oV&rC$TErA+=(r%,`9Jh)F'Jh)F'gFN4Rr@\%(r&O^DrDNT'rH/!lr0.)MrM9CjrMnkX
JuaL(Jud_.!#keRr>5DIr=]#=r=/]5r<`E.bQi_)Jd6l4Jd9*sr<W<-r<rQ5r=Ai>r>#5Hr>GDLn/Hru
JfB:\b8UH@rRh(jrO2Zsr.k5irE]@srC$TKr&h5GJieQGJieQGm5t8/rBL6Kr(d2rrG_^jrLa%sr5eig
rS[Y:rTMVnK'IsQK'Mgi!2]XcrKI26rH8$IrDNS^rAjg3r@\"!_^g<hJh)F'Jh,S+r@In"rA+:2rC$T^
rF5_IrIt05rLNn_rM][pii@[3JuaL(h5^Mor>GPMr>#8Dr"&`8r<rQ1r<UUPJd6l4Jd6l4_$BoEr!E<0
r=/]9r=]&Dr"o;Lq&8`AJfB:\JfDlP!93t0rQ5#HrLa"CrG_^@rD*;ZrBL3BYrdP!JieQGJii?]rB1$C
rC$QYrE]A@rJ1?DrO2XFrR_#+rT=(Bd-?5JK'IsQn*0nLrLWtOrIt2mr*oV&rC$TErA+=(r%,`9Jh)F'
Jh)F'gFN4Rr@\%(r&O^DrDNT'rH/!lr0.)MrM9CjrMnkXJuaL(Jud_.!#keRr>5DIr=]#=r=/]5r<`E.
bQi_)Jd6l4Jd9*sr<W<-r<rQ5r=Ai>r>#5Hr>GDLn/HruJfB:\b8UH@rRh(jrO2Zsr.k5irE]@srC$TK
r&h5GJieQGJieQGm5t8/rBL6Kr(d2rrG_^jrLa%sr5nohrSd_<q<HJqK'S$SK'Vmk!2]XcrKI26rH8$I
rDNS^rAjg3r@\"!_^g<hJh)F'Jh,S+r@In"rA+:2rC$T^rF5_JrIt05rLNn`rMfUnk,a09JujR*h5gSp
r>GPMr>#8Dr"&`8r<rQ1r<UUPJd6l4Jd6l4_$BoEr!E<0r=/]9r=]&Dr"o;Lr>P#AJfB:\JfDlP!93t0
rQ5#HrLa"CrG_^@rD*;ZrBL3BYrdP!JieQGJii?]rB1$CrC$QYrE]A@rJ1?DrO2XGrR_#,rTF"AeE__P
K'S$Sn*9tMrLWtOrIt2mr*oV&rC$TErA+=(r%,`9Jh)F'Jh)F'gFN4Rr@\%(r&O^DrDNT'rH8'mr0.)M
rMBIlq5`YZJujR*Jume0!#keRr>5DIr=]#=r=/]5r<`E.bQi_)Jd6l4Jd9*sr<W<-r<rQ5r=Ai>r>#5H
r>GPPll1NqJfB:\b8UH@rRh(jrO2Zsr.k5irE]@srC$TKr&h5GJieQGJieQGm5t8/rBL6Kr(d2rrG_^j
rLa%sr5nohrSd_<q<HJqK'S$SK'Vmk!2]XcrKI26rH8$IrDNS^rAjg3r@\"!_^g<hJh)F'Jh,S+r@In"
rA+:2rC$T^rF5_JrIt05rLNn`rMfUnk,a09JujR*h5gSpr>GPMr>#8Dr"&`8r<rQ1r<UUPJd6l4Jd6l4
_$BoEr!E<0r=/]9r=]&Dr"o;Lr>P#AJfB:\JfDlP!93t0rQ5#HrLa"CrG_^@rD*;ZrBL3BYrdP!JieQG
Jii?]rB1$CrC$QYrE]A@rJ1?DrO2XGrR_#,rTF"AeE__PK'S$Sn*9tMrLWtOrIt2mr*oV&rC$TErA+=(
r%,`9Jh)F'Jh)F'gFN4Rr@\%(r&O^DrDNT'rH8'mr0.)MrMBIlq5`YZJujR*Jume0!#keRr>5DIr=]#=
r=/]5r<`E.bQi_)Jd6l4Jd9*sr<W<-r<rQ5r=Ai>r>#5Hr>GPPll1NqJfB:\b8UH@rRh(jrO2Zsr.k5i
rE]@srC$TKr&h5GJieQGJieQGm5t8/rBL6Kr(d2rrG_^jrLa%sr5noirSme=rT_bqK'S$SK'Vmk!2]Xc
rKI26rH8$IrDNS^rAjg3r@\"!_^g<hJh)F'Jh,S+r@In"rA+:2rC$T^rF5_JrIt05rLWtarMfariiIa5
JujR*h5gSpr>GPMr>#8Dr"&`8r<rQ1r<UUPJd6l4Jd6l4_$BoEr!E<0r=/]9r=]&Dr"o;Lr>P#AJfB:\
JfDlP!93t0rQ5#HrLa"CrG_^@rD*;ZrBL3BYrdP!JieQGJii?]rB1$CrC$QYrE]A@rJ1?DrO2XGrRh).
rTF.Ed-H;LK'S$Sn*9tMrLWtOrIt2mr*oV&rC$TErA+=(r%,`9Jh)F'Jh)F'gFN4Rr@\%(r&O^DrDNT'
rH8'mr0.)NrMBIlrN"qZJujR*Jume0!#keRr>5DIr=]#=r=/]5r<`E.bQi_)Jd6l4Jd9*sr<W<-r<rQ5
r=Ai>r>#5Hr>GPPll1NqJfB:\b8UH@rRh(jrO2Zsr.k5irE]@srC$TKr&h5GJieQGJieQGm5t8/rBL6K
r(d2rrG_^jrLa%sr5noirSme=rT_bqK'S$SK'Vmk!2f^erKR88rH8$JrDWY`rAsm4r@\"!_^g<hJh)F'
Jh,S+r@In"rA+:3rC-Z`rF>eKrJ(67rLa%crMogtiiRg7JusX,h5pYqr>GPMr>#8Dr"&`8r<rQ1r<UUP
Jd6l4Jd6l4_$BoEr!E<0r=/]9r=]&Dr"o;Lr>P#AJfB:\JfDlP!93t0rQ5#HrLa"CrG_^@rD*;ZrBL3B
YrdP!JieQGJii?]rB1$CrC$QYrE]A@rJ1?DrO2XGrRh).rTF.Ed-H;LK'S$Sn*9tNrLa%QrJ(8nr+#\(
rC-ZGrA+=(r%,`9Jh)F'Jh)F'gFN4Rr@\%(r&XdFrDWZ)rH8'nr07/PrMKOnrN,"\JusX,K!!k2!#keR
r>5DIr=]#=r=/]5r<`E.bQi_)Jd6l4Jd9*sr<W<-r<rQ5r=Ai>r>#5Hr>GPPll1NqJfB:\b8UH@rRh(j
rO2Zsr.k5irE]@srC$TKr&h5GJieQGJieQGm5t8/rBL6Kr(d2rrG_^jrLa%sr5noirSme=rT_bqK'S$S
K'Vmk!2f^erKR88rH8$JrDWY`rAsm4r@\"!_^g<hJh)F'Jh,S+r@In"rA+:3rC-Z`rF>eKrJ(67rLa%c
rMogtiiRg7JusX,h5pYqr>GPMr>#8Dr"&`8r<rQ1r<UUPJd6l4Jd6l4_$BoEr!E<0r=/]9r=]&Dr"o;L
r>P#AJfB:\JfDlP!93t0rQ5#HrLa"CrG_^@rD*;ZrBL3BYrdP!JieQGJii?]rB1$CrC$QYrE]A@rJ1?D
rO2XGrRh).rTF.Ed-H;LK'S$Sn*9tNrLa%QrJ(8nr+#\(rC-ZGrA+=(r%,`9Jh)F'Jh)F'gFN4Rr@\%(
r&XdFrDWZ)rH8'nr07/PrMKOnrN,"\JusX,K!!k2!#keRr>5DIr=]#=r=/]5r<`E.bQi_)Jd6l4Jd9*s
r<W<-r<rQ5r=Ai>r>#5Hr>GPPll1NqJfB:\b8UH@rRh(jrO2Zsr.k5irE]@srC$TKr&h5GJieQGJieQG
m5t8/rBL6Kr(d2rrG_^jrLa%sr5noirSme=rT_bqK'S$SK'Vmk!2f^erKR88rH8$JrDWY`rAsm4r@\"!
_^g<hJh)F'Jh,S+r@In"rA+:3rC-Z`rF>eKrJ(67rLa%crMogtiiRg7JusX,h5pYqr>GPMr>#8Dr"&`8
r<rQ1r<UUPJd6l4Jd6l4_$BoEr!E<0r=/]9r=]&Dr"o;Lr>P#AJfB:\JfDlP!93t0rQ5#HrLa"CrG_^@
rD*;ZrBL3BYrdP!JieQGJii?]rB1$CrC$QYrE]A@rJ1?DrO2XGrRh).rTF.Ed-H;LK'S$Sn*9tNrLa%Q
rJ(8nr+#\(rC-ZGrA+=(r%,`9Jh)F'Jh)F'gFN4Rr@\%(r&XdFrDWZ)rH8'nr07/PrMKOnrN,"\JusX,
K!!k2!#tkTr>>JKr=f)?r=/]5r<`E.bQi_)Jd6l4Jd9*sr<W<-r<rQ5r=Jo@r>,;Jr>PVRll:TsJfK@^
b8^NArRh(jrO2Zsr.k5irE]@srC$TKr&h5GJieQGJieQGm5t8/rBL6Kr(d2rrG_^jrLa%sr5noirSme=
rT_bqK'S$SK'Vmk!2f^erKR88rH8$JrDWY`rAsm4r@\"!_^g<hJh)F'Jh,S+r@In"rA+:3rC-Z`rF>eK
rJ(67rLa%crMogtiiRg7JusX,h5pYrr>PVOr>,>Fr"/f9r<rQ1r<UUPJd6l4Jd6l4_$BoEr!E<0r=/]:
r=f,Fr##ANr>Y)CJfK@^JfMrR!93t0rQ5#HrLa"CrG_^@rD*;ZrBL3BYrdP!JieQGJii?]rB1$CrC$QY
rE]A@rJ1?DrO2XGrRh).rTF.Ed-H;LK'S$Sn*9tNrLa%QrJ(8nr+#\(rC-ZGrA+=(r%,`9Jh)F'Jh)F'
gFN4Rr@\%(r&XdFrDWZ)rH8'nr07/PrMKOnrN,"\JusX,K!!k2!#tkTr>>JKr=f)?r=/]5r<`E.bQi_)
Jd6l4Jd9*sr<W<-r<rQ5r=Jo@r>,;Jr>PVRll:TsJfK@^b8^NArRh(jrO2Zsr.k5irE]@srC$TKr&h5G
JieQGJieQGm5t8/rBL6Kr(d2rrG_^jrLa%sr5noirSme=rT_bqK'S$SK'Vmk!2f^erKR88rH8$JrDWY`
rAsm4r@\"!_^g<hJh)F'Jh,S+r@In"rA+:3rC-Z`rF>eKrJ(67rLa%crMogtiiRg7JusX,h5pYrr>PVO
r>,>Fr"/f9r<rQ1r<UUPJd6l4Jd6l4_$BoEr!E<0r=/]:r=f,Fr##ANr>Y)CJfK@^JfMrR!93t0rQ5#H
rLa"CrG_^@rD*;ZrBL3BYrdP!JieQGJii?]rB1$CrC$QYrE]A@rJ1?DrO2XGrRh).rTF.Ed-H;LK'S$S
n*9tNrLa%QrJ(8nr+#\(rC-ZGrA+=(r%,`9Jh)F'Jh)F'gFN4Rr@\%(r&XdFrDWZ)rH8'nr07/PrMKOn
rN,"\JusX,K!!k2!#tkTr>>JKr=f)?r=/]5r<`E.bQi_)Jd6l4Jd9*sr<W<-r<rQ5r=Jo@r>,;Jr>PVR
ll:TsJfK@^b8^NArRh(jrO2Zsr.k5irE]@srC$TKr&h5GJieQGJieQGm5t8/rBL6Kr(d2rrG_^jrLa%s
r5noirSme=rT_bqK'S$SK'Vmk!2f^erKR88rH8$JrDWY`rAsm4r@\"!_^g<hJh)F'Jh,S+r@In"rA+:3
rC-Z`rF>eKrJ(67rLa%crMogtiiRg7JusX,h5pYrr>PVOr>,>Fr"/f9r<rQ1r<UUPJd6l4Jd6l4_$BoE
r!E<0r=/]:r=f,Fr##ANr>Y)CJfK@^JfMrR!93t0rQ5#HrLa"CrG_^@rD*;ZrBL3BYrdP!JieQGJii?]
rB1$CrC$QYrE]A@rJ1?DrO2XGrRh).rTF.Ed-H;LK'S$Sn*9tNrLa%QrJ(8nr+#\(rC-ZGrA+=(r%,`9
Jh)F'Jh)F'gFN4Rr@\%(r&XdFrDWZ)rH8'nr07/PrMKOnrN,"\JusX,K!!k2!#tkTr>>JKr=f)?r=/]5
r<`E.bQi_)Jd6l4Jd9*sr<W<-r<rQ5r=Jo@r>,;Jr>PVRll:TsJfK@^b8^NArRh(jrO2Zsr.k5irE]@s
rC$TKr&h5GJieQGJieQGm5t8/rBL6Kr(d2rrG_^jrLa%sr5noirSme=rT_bqK'S$SK'Vmk!2f^erKR88
rH8$JrDWY`rAsm4r@\"!_^g<hJh)F'Jh,S+r@In"rA+:3rC-Z`rF>eKrJ(67rLa%crMogtiiRg7JusX,
h5pYrr>PVOr>,>Fr"/f9r<rQ1r<UUPJd6l4Jd6l4_$BoEr!E<0r=/]:r=f,Fr##ANr>Y)CJfK@^JfMrR
!93t0rQ5#HrLa"CrG_^@rD*;ZrBL3BYrdP!JieQGJii?]rB1$CrC$QYrE]A@rJ1?DrO2XGrRh).rTF.E
d-H;LK'S$Sn*9tNrLa%QrJ(8nr+#\(rC-ZGrA+=(r%,`9Jh)F'Jh)F'gFN4Rr@\%(r&XdFrDWZ)rH8'n
r07/PrMKOnrN,"\JusX,K!!k2!#tkTr>>JKr=f)?r=/]5r<`E.bQi_)Jd6l4Jd9*sr<W<-r<rQ5r=Jo@
r>,;Jr>PVRll:TsJfK@^b8^NArRh(jrO2Zsr.k5irE]@srC$TKr&h5GJieQGJieQGm5t8/rBL6Kr(d2r
rG_^jrLa%sr5noirSme=rT_bqK'S$SK'Vmk!2f^erKR88rH8$JrDWY`rAsm4r@\"!_^g<hJh)F'Jh,S+
r@In"rA+:3rC-Z`rF>eKrJ(67rLa%crMogtiiRg7JusX,h5pYrr>PVOr>,>Fr"/f9r<rQ1r<UUPJd6l4
Jd6l4_$BoEr!E<0r=/]:r=f,Fr##ANr>Y)CJfK@^JfMrR!93t0rQ5#HrLa"CrG_^@rD*;ZrBL3BYrdP!
JieQGJii?]rB1$CrC$QYrE]A@rJ1?DrO2XGrRh).rTF.Ed-H;LK'S$Sn*9tNrLa%QrJ(8nr+#\(rC-ZG
rA+=(r%,`9Jh)F'Jh)F'gFN4Rr@\%(r&XdFrDWZ)rH8'nr07/PrMKOnrN,"\JusX,K!!k2!#tkTr>>JK
r=f)?r=/]5r<`E.bQi_)Jd6l4Jd9*sr<W<-r<rQ5r=Jo@r>,;Jr>PVRll:TsJfK@^b8^NArRh(jrO2Zs
r.k5irE]@srC$TKr&h5GJieQGJieQGm5t8/rBL6Kr(d2rrG_^jrLa%sr5noirSme=rT_bqK'S$SK'Vmk
!2f^erKR88rH8$JrDWY`rAsm4r@\"!_^g<hJh)F'Jh,S+r@In"rA+:3rC-Z`rF>eKrJ(67rLa%crMogt
iiRg7JusX,h5pYrr>PVOr>,>Fr"/f9r<rQ1r<UUPJd6l4Jd6l4_$BoEr!E<0r=/]:r=f,Fr##ANr>Y)C
JfK@^JfMrR!93t0rQ5#HrLa"CrG_^@rD*;ZrBL3BYrdP!JieQGJii?]rB1$CrC$QYrE]A@rJ1?DrO2XG
rRh).rTF.Ed-H;LK'S$Sn*9tNrLa%QrJ(8nr+#\(rC-ZGrA+=(r%,`9Jh)F'Jh)F'gFN4Rr@\%(r&XdF
rDWZ)rH8'nr07/PrMKOnrN,"\JusX,K!!k2!#tkTr>>JKr=f)?r=/]5r<`E.bQi_)Jd6l4Jd9*sr<W<-
r<rQ5r=Jo@r>,;Jr>PVRll:TsJfK@^b8^NArRh(jrO2Zsr.k5irE]@srC$TKr&h5GJieQGJieQGm5t8/
rBL6Kr(d2rrG_^jrLa%sr5noirSme=rT_bqK'S$SK'Vmk!2f^erKR88rH8$JrDWY`rAsm4r@\"!_^g<h
Jh)F'Jh,S+r@In"rA+:3rC-Z`rF>eKrJ(67rLa%crMogtiiRg7JusX,h5pYrr>PVOr>,>Fr"/f9r<rQ1
r<UUPJd6l4Jd6l4_$BoEr!E<0r=/]:r=f,Fr##ANr>Y)CJfK@^JfMrR!93t0rQ5#HrLa"CrG_^@rD*;Z
rBL3BYrdP!JieQGJii?]rB1$CrC$QYrE]A@rJ1?DrO2XGrRh).rTF.Ed-H;LK'S$Sn*9tNrLa%QrJ(8n
r+#\(rC-ZGrA+=(r%,`9Jh)F'Jh)F'gFN4Rr@\%(r&XdFrDWZ)rH8'nr07/PrMKOnrN,"\JusX,K!!k2
!#tkTr>>JKr=f)?r=/]5r<`E.bQi_)Jd6l4Jd9*sr<W<-r<rQ5r=Jo@r>,;Jr>PVRll:TsJfK@^b8^NA
rRh(jrO2Zsr.k5irE]@srC$TKr&h5GJieQGJieQGm5t8/rBL6Kr(d2rrG_^jrLa%sr5noirSme=rT_bq
K'S$SK'Vmk!2f^erKR88rH8$JrDWY`rAsm4r@\"!_^g<hJh)F'Jh,S+r@In"rA+:3rC-Z`rF>eKrJ(67
rLa%crMogtiiRg7JusX,h5pYrr>PVOr>,>Fr"/f9r<rQ1r<UUPJd6l4Jd6l4_$BoEr!E<0r=/]:r=f,F
r##ANr>Y)CJfK@^JfMrR!93t0rQ5#HrLa"CrG_^@rD*;ZrBL3BYrdP!JieQGJii?]rB1$CrC$QYrE]A@
rJ1?DrO2XGrRh).rTF.Ed-H;LK'S$Sn*9tNrLa%QrJ(8nr+#\(rC-ZGrA+=(r%,`9Jh)F'Jh)F'gFN4R
r@\%(r&XdFrDWZ)rH8'nr07/PrMKOnrN,"\JusX,K!!k2!#tkTr>>JKr=f)?r=/]5r<`E.bQi_)Jd6l4
Jd9*sr<W<-r<rQ5r=Jo@r>,;Jr>PVRll:TsJfK@^b8^NArRh(jrO2Zsr.k5irE]@srC$TKr&h5GJieQG
JieQGm5t8/rBL6Kr(d2rrG_^jrLa%sr5noirSme=rT_bqK'S$SK'Vmk!2f^erKR88rH8$JrDWY`rAsm4
r@\"!_^g<hJh)F'Jh,S+r@In"rA+:3rC-Z`rF>eKrJ(67rLa%crMogtiiRg7JusX,h5pYrr>PVOr>,>F
r"/f9r<rQ1r<UUPJd6l4Jd6l4_$BoEr!E<0r=/]:r=f,Fr##ANr>Y)CJfK@^JfMrR!93t0rQ5#HrLa"C
rG_^@rD*;ZrBL3BYrdP!JieQGJii?]rB1$CrC$QYrE]A@rJ1?DrO2XGrRh).rTF.Ed-H;LK'S$Sn*9tN
rLa%QrJ(8nr+#\(rC-ZGrA+=(r%,`9Jh)F'Jh)F'gFN4Rr@\%(r&XdFrDWZ)rH8'nr07/PrMKOnrN,"\
JusX,K!!k2!#tkTr>>JKr=f)?r=/]5r<`E.bQi_)Jd6l4Jd9*sr<W<-r<rQ5r=Jo@r>,;Jr>PVRll:Ts
JfK@^b8^NArRh(jrO2Zsr.k5irE]@srC$TKr&h5GJieQGJieQGm5t8/rBL6Kr(d2rrG_^jrLa%sr5noi
rSme=rT_bqK'S$SK'Vmk!2f^erKR88rH8$JrDWY`rAsm4r@\"!_^g<hJh)F'Jh,S+r@In"rA+:3rC-Z`
rF>eKrJ(67rLa%crMogtiiRg7JusX,h5pYrr>PVOr>,>Fr"/f9r<rQ1r<UUPJd6l4Jd6l4_$BoEr!E<0
r=/]:r=f,Fr##ANr>Y)CJfK@^JfMrR!93t0rQ5#HrLa"CrG_^@rD*;ZrBL3BYrdP!JieQGJii?]rB1$C
rC$QYrE]A@rJ1?DrO2XGrRh).rTF.Ed-H;LK'S$Sn*9tNrLa%QrJ(8nr+#\(rC-ZGrA+=(r%,`9Jh)F'
Jh)F'gFN4Rr@\%(r&XdFrDWZ)rH8'nr07/PrMKOnrN,"\JusX,K!!k2!#tkTr>>JKr=f)?r=/]5r<`E.
bQi_)Jd6l4Jd9*sr<W<-r<rQ5r=Jo@r>,;Jr>PVRll:TsJfK@^b8^NArRh(jrO2Zsr.k5irE]@srC$TK
r&h5GJieQGJieQGm5t8/rBL6Kr(d2rrG_^jrLa%sr5noirSme=rT_bqK'S$SK'Vmk!2f^erKR88rH8$J
rDWY`rAsm4r@\"!_^g<hJh)F'Jh,S+r@In"rA+:3rC-Z`rF>eKrJ(67rLa%crMogtiiRg7JusX,h5pYr
r>PVOr>,>Fr"/f9r<rQ1r<UUPJd6l4Jd6l4_$BoEr!E<0r=/]:r=f,Fr##ANr>Y)CJfK@^JfMrR!93t0
rQ5#HrLa"CrG_^@rD*;ZrBL3BYrdP!JieQGJii?]rB1$CrC$QYrE]A@rJ1?DrO2XGrRh).rTF.Ed-H;L
K'S$Sn*9tNrLa%QrJ(8nr+#\(rC-ZGrA+=(r%,`9Jh)F'Jh)F'gFN4Rr@\%(r&XdFrDWZ)rH8'nr07/P
rMKOnrN,"\JusX,K!!k2!#tkTr>>JKr=f)?r=/]5r<`E.bQi_)Jd6l4Jd9*sr<W<-r<rQ5r=Jo@r>,;J
r>PVRll:TsJfK@^b8^NArRh(jrO2Zsr.k5irE]@srC$TKr&h5GJieQGJieQGm5t8/rBL6Kr(d2rrG_^j
rLa%sr5noirSme=rT_bqK'S$SK'Vmk!2f^erKR88rH8$JrDWY`rAsm4r@\"!_^g<hJh)F'Jh,S+r@In"
rA+:3rC-Z`rF>eKrJ(67rLa%crMogtiiRg7JusX,h5pYrr>PVOr>,>Fr"/f9r<rQ1r<UUPJd6l4Jd6l4
_$BoEr!E<0r=/]:r=f,Fr##ANr>Y)CJfK@^JfMrR!93t0rQ5#HrLa"CrG_^@rD*;ZrBL3BYrdP!JieQG
Jii?]rB1$CrC$QYrE]A@rJ1?DrO2XGrRh).rTF.Ed-H;LK'S$Sn*9tNrLa%QrJ(8nr+#\(rC-ZGrA+=(
r%,`9Jh)F'Jh)F'gFN4Rr@\%(r&XdFrDWZ)rH8'nr07/PrMKOnrN,"\JusX,K!!k2!#tkTr>>JKr=f)?
r=/]5r<`E.bQi_)Jd6l4Jd9*sr<W<-r<rQ5r=Jo@r>,;Jr>PVRll:TsJfK@^b8^NArRh(jrO2Zsr.k5i
rE]@srC$TKr&h5GJieQGJieQGm5t8/rBL6Kr(d2rrG_^jrLa%sr5noirSme=rT_bqK'S$SK'Vmk!2f^e
rKR88rH8$JrDWY`rAsm4r@\"!_^g<hJh)F'Jh,S+r@In"rA+:3rC-Z`rF>eKrJ(67rLa%crMogtiiRg7
JusX,h5pYsr>Y\Qr>,>Gr"8l;r<rQ2q$>=PJd6l4Jd6l4`<Z2Er!NB1r=8c<r=o2Gr#,GPr>b/EJfTF`
JfW#T!93t0rQ5#HrLa"CrG_^@rD*;ZrBL3BYrdP!JieQGJii?]rB1$CrC$QYrE]A@rJ1?DrO2XGrRh).
rTF.Ed-H;LK'S$Sn*9tNrLa%QrJ(8nr+#\(rC-ZGrA+=(r%,`9Jh)F'Jh)F'gFN4Rr@\%(r&XdFrDWZ)
rH8'nr07/PrMKOnrN,"\JusX,K!!k2!$(qVr>GPLr=o/Ar=8c6r<i?+cj,.-Jd6l4Jd97"q$?m*r<rQ6
r=SuBr>,;Kr>Y\TllCZuJfTF`b8gTBrRh(jrO2Zsr.k5irE]@srC$TKr&h5GJieQGJieQGm5t8/rBL6K
r(d2rrG_^jrLa%sr5noirSme=rT_bqK'S$SK'Vmk!2f^erKR88rH8$JrDWY`rAsm4r@\"!_^g<hJh)F'
Jh,S+r@In"rA+:3rC-Z`rF>eKrJ(67rLa%crMogtiiRg7JusX,h5pYsr>Y\Qr>,>Gr"8l;r<rQ2q$>=P
Jd6l4Jd6l4`<Z2Er!NB1r=8c<r=o2Gr#,GPr>b/EJfTF`JfW#T!93t0rQ5#HrLa"CrG_^@rD*;ZrBL3B
YrdP!JieQGJii?]rB1$CrC$QYrE]A@rJ1?DrO2XGrRh).rTF.Ed-H;LK'S$Sn*9tNrLa%QrJ(8nr+#\(
rC-ZGrA+=(r%,`9Jh)F'Jh)F'gFN4Rr@\%(r&XdFrDWZ)rH8'nr07/PrMKOnrN,"\JusX,K!!k2!$(qV
r>GPLr=o/Ar=8c6r<i?+cj,.-Jd6l4Jd97"q$?m*r<rQ6r=SuBr>,;Kr>Y\TllCZuJfTF`b8gTBrRh(j
rO2Zsr.k5irE]@srC$TKr&h5GJieQGJieQGm5t8/rBL6Kr(d2rrG_^jrLa%sr5noirSme=rT_bqK'S$S
K'Vmk!2f^erKR88rH8$JrDWY`rAsm4r@\"!_^g<hJh)F'Jh,S+r@In"rA+:3rC-Z`rF>eKrJ(67rLa%c
rMogtiiRg7JusX,h5pYsr>Y\Qr>,>Gr"8l;r<rQ2q$>=PJd6l4Jd6l4`<Z2Er!NB1r=8c<r=o2Gr#,GP
r>b/EJfTF`JfW#T!93t0rQ5#HrLa"CrG_^@rD*;ZrBL3BYrdP!JieQGJii?]rB1$CrC$QYrE]A@rJ1?D
rO2XGrRh).rTF.Ed-H;LK'S$Sn*9tNrLa%QrJ(8nr+#\(rC-ZGrA+=(r%,`9Jh)F'Jh)F'gFN4Rr@\%(
r&XdFrDWZ)rH8'nr07/PrMKOnrN,"\JusX,K!!k2!$(qVr>GPLr=o/Ar=8c6r<i?+cj,.-Jd6l4Jd97"
q$?m*r<rQ6r=SuBr>,;Kr>Y\TllCZuJfTF`b8gTBrRh(jrO2Zsr.k5irE]@srC$TKr&h5GJieQGJieQG
m5t8/rBL6Kr(d2rrG_^jrLa%sr5nohrSd_<q<HJqK'S$SK'Vmk!2f^erKR88rH8$JrDWY`rAsm4r@\"!
_^g<hJh)F'Jh,S+r@In"rA+:3rC-Z`rF>eKrJ(67rLWtbrMo[pk,j6;JusX,h5pYsr>Y\Qr>,>Gr"8l;
r<rQ2q$>=PJd6l4Jd6l4`<Z2Er!NB1r=8c<r=o2Gr#,GOr>b/EJfTF`JfW#T!93t0rQ5#HrLa"CrG_^@
rD*;ZrBL3BYrdP!JieQGJii?]rB1$CrC$QYrE]A@rJ1?DrO2XGrR_#,rTF"AeE__PK'S$Sn*9tNrLa%Q
rJ(8nr+#\(rC-ZGrA+=(r%,`9Jh)F'Jh)F'gFN4Rr@\%(r&XdFrDWZ)rH8'nr07/OrMKOnq5i_\JusX,
K!!k2!$(qVr>GPLr=o/Ar=8c6r<i?+cj,.-Jd6l4Jd97"q$?m*r<rQ6r=SuBr>,;Kr>PVSllCZuJfTF`
b8gTBrRh(jrO2Zsr.k5irE]@srC$TKr&h5GJieQGJieQGm5t8/rBL6Kr(d2rrG_^jrLa%sr5nohrSd_<
q<HJqK'S$SK'Vmk!2f^erKR88rH8$JrDWY`rAsm4r@\"!_^g<hJh)F'Jh,S+r@In"rA+:3rC-Z`rF>eK
rJ(67rLWtbrMo[pk,j6;JusX,h5pYsr>Y\Qr>,>Gr"8l;r<rQ2q$>=PJd6l4Jd6l4`<Z2Er!NB1r=8c<
r=o2Gr#,GOr>b/EJfTF`JfW#T!93t0rQ5#HrLa"CrG_^@rD*;ZrBL3BYrdP!JieQGJii?]rB1$CrC$QY
rE]A@rJ1?DrO2XGrR_#,rTF"AeE__PK'S$Sn*9tNrLa%QrJ(8nr+#\(rC-ZGrA+=(r%,`9Jh)F'Jh)F'
gFN4Rr@\%(r&XdFrDWZ)rH8'nr07/OrMKOnq5i_\JusX,K!!k2!$(qVr>GPLr=o/Ar=8c6r<i?+cj,.-
Jd6l4Jd97"q$?m*r<rQ6r=SuBr>,;Kr>PVSllCZuJfTF`b8gTBrRh(jrO2Zsr.k5irE]@srC$TKr&h5G
JieQGJieQGm5t8/rBL6Kr(d2rrG_^jrLa%sr5eigrS[Y:rTMVnK'IsQK'Mgi!2f^erKR88rH8$JrDWY`
rAsm4r@\"!_^g<hJh)F'Jh,S+r@In"rA+:3rC-Z`rF>eKrJ(66rLWtarMfariiIa5JujR*h5gSrr>Y\Q
r>,>Gr"8l;r<rQ2q$>=PJd6l4Jd6l4`<Z2Er!NB1r=8c<r=o2Gr#,GOq&JlEJfTF`JfW#T!93t0rQ5#H
rLa"CrG_^@rD*;ZrBL3BYrdP!JieQGJii?]rB1$CrC$QYrE]A@rJ1?DrO2XFrR_#+rT=(Bd-?5JK'IsQ
n*0nMrLa%QrJ(8nr+#\(rC-ZGrA+=(r%,`9Jh)F'Jh)F'gFN4Rr@\%(r&XdFrDWZ)rH8'nr0.)NrMBIl
rN"qZJujR*Jume0!$(qVr>GPLr=o/Ar=8c6r<i?+cj,.-Jd6l4Jd97"q$?m*r<rQ6r=SuBr>,;Kr>PJO
n/[*$JfTF`b8gTBrRh(jrO2Zsr.k5irE]@srC$TKr&h5GJieQGJieQGm5t8/rBL6Kr(d2rrG_^jrLa%s
r5eigrS[Y:rTMVnK'IsQK'Mgi!2f^erKR88rH8$JrDWY`rAsm4r@\"!_^g<hJh)F'Jh,S+r@In"rA+:3
rC-Z`rF>eKrJ(66rLWtarMfariiIa5JujR*h5gSrr>Y\Qr>,>Gr"8l;r<rQ2q$>=PJd6l4Jd6l4`<Z2E
r!NB1r=8c<r=o2Gr#,GOq&JlEJfTF`JfW#T!93t0rQ5#HrLa"CrG_^@rD*;ZrBL3BYrdP!JieQGJii?]
rB1$CrC$QYrE]A@rJ1?DrO2XFrR_#+rT=(Bd-?5JK'IsQn*0nMrLa%QrJ(8nr+#\(rC-ZGrA+=(r%,`9
Jh)F'Jh)F'gFN4Rr@\%(r&XdFrDWZ)rH8'nr0.)NrMBIlrN"qZJujR*Jume0!$(qVr>GPLr=o/Ar=8c6
r<i?+cj,.-Jd6l4Jd97"q$?m*r<rQ6r=SuBr>,;Kr>PJOn/[*$JfTF`b8gTBrRh(jrO2Zsr.k5irE]@s
rC$TKr&h5GJieQGJieQGm5t8/rBL6Kr(d2rrG_^irLNnnr5S]brS@G4rT;JiK'.aKK'2Uc!2f^erKR88
rH8$JrDWY`rAsm4r@\"!_^g<hJh)F'Jh,S+r@In"rA+:3rC-Z_rF5_HrIk*3rLEh]rMTUnii7U1JuXF&
h5UGpr>Y\Qr>,>Gr"8l;r<rQ2q$>=PJd6l4Jd6l4`<Z2Er!NB1r=8c;r=f,Fr##ANr>YPPoGrN(JfTF`
b8gTBrRh(jrO2Zsr.k5irE]@srC$TKr&h5GJieQGJieQGm5t8/rBL6Kr(d2rrG_^irLNnnr5S]brS@G4
rT;JiK'.aKK'2Uc!2f^erKR88rH8$JrDWY`rAsm4r@\"!_^g<hJh)F'Jh,S+r@In"rA+:3rC-Z_rF5_H
rIk*3rLEh]rMTUnii7U1JuXF&h5UGpr>Y\Qr>,>Gr"8l;r<rQ2q$>=PJd6l4Jd6l4`<Z2Er!NB1r=8c;
r=f,Fr##ANr>YPPoGrN(JfTF`b8gTBrRh(jrO2Zsr.k5irE]@srC$TKr&h5GJieQGJieQGm5t8/rBL6K
r(d2rrG_^irLNnnr5S]brS@G4rT;JiK'.aKK'2Uc!2f^erKR88rH8$JrDWY`rAsm4r@\"!_^g<hJh)F'
Jh,S+r@In"rA+:3rC-Z_rF5_HrIk*3rLEh]rMTUnii7U1JuXF&h5UGpr>Y\Qr>,>Gr"8l;r<rQ2q$>=P
Jd6l4Jd6l4`<Z2Er!NB1r=8c;r=f,Fr##ANr>YPPoGrN(JfTF`b8gTBrRh(jrO2Zsr.k5irE]@srC$TK
r&h5GJieQGJieQGm5t8/rBL6Kr(d2rrG_^irLNnnr5S]brS@G4rT;JiK'.aKK'2Uc!2f^erKR88rH8$J
rDWY`rAsm4r@\"!_^g<hJh)F'Jh,S+r@In"rA+:3rC-Z_rF5_HrIk*3rLEh]rMTUnii7U1JuXF&h5UGp
r>Y\Qr>,>Gr"8l;r<rQ2q$>=PJd6l4Jd6l4`<Z2Er!NB1r=8c;r=f,Fr##ANr>YPPoGrN(JfTF`b8gTB
rRh(jrO2Zsr.k5irE]@srC$TKr&h5GJieQGJieQGm5t8/rBL6Kr([,orGMRdrL3\gr5&?WrRq/*rS[Y5
eDc)>K&VCAn)=>ErLa%QrJ(8nr+#\(rC-ZGrA+=(r%,`9Jh)F'Jh)F'gFN4Rr@\%(r&O^CrDEN$rGhde
r/U`CrLj+arMAMNJu4-sJu7A$!$(qVr>GPLr=o/Ar=8c6r<i?+cj,.-Jd6l4Jd97"q$?m*r<rQ6r=Jo@
r>,;Jr>GDMn/R$"JfK@^b8^NArRh(jrO2Zsr.k5irE]@srC$TKr&h5GJieQGJieQGm5t8/rBL6Kr([,o
rGMRdrL3\gr5&?WrRq/*rS[Y5eDc)>K&VCAn)=>ErLa%QrJ(8nr+#\(rC-ZGrA+=(r%,`9Jh)F'Jh)F'
gFN4Rr@\%(r&O^CrDEN$rGhder/U`CrLj+arMAMNJu4-sJu7A$!$(qVr>GPLr=o/Ar=8c6r<i?+cj,.-
Jd6l4Jd97"q$?m*r<rQ6r=Jo@r>,;Jr>GDMn/R$"JfK@^b8^NArRh(jrO2Zsr.k5irE]@srC$TKr&h5G
JieQGJieQGm5t8/rBL6Kr([,orGMRdrL3\gr5&?WrRq/*rS[Y5eDc)>K&VCAn)=>ErLa%QrJ(8nr+#\(
rC-ZGrA+=(r%,`9Jh)F'Jh)F'gFN4Rr@\%(r&O^CrDEN$rGhder/U`CrLj+arMAMNJu4-sJu7A$!$(qV
r>GPLr=o/Ar=8c6r<i?+cj,.-Jd6l4Jd97"q$?m*r<rQ6r=Jo@r>,;Jr>GDMn/R$"JfK@^b8^NArRh(j
rO2Zsr.k5irE]@srC$TKr&h5GJieQGJieQGm5t8/rBL6Kr([,orGMRdrL3\gr5&?WrRq/*rS[Y5eDc)>
K&VCAn)=>ErLa%QrJ(8nr+#\(rC-ZGrA+=(r%,`9Jh)F'Jh)F'gFN4Rr@\%(r&O^CrDEN$rGhder/U`C
rLj+arMAMNJu4-sJu7A$!$(qVr>GPLr=o/Ar=8c6r<i?+cj,.-Jd6l4Jd97"q$?m*r<rQ6r=Jo@r>,;J
r>GDMn/R$"JfK@^b8^NArRh(jrO2Zsr.k5irE]@srC$TKr&h5GJieQGJieQGm5t8/rBL6Kr(R&mrG2@\
rKR8Zr42dGrQbAkq:F-KK%P\-K%TPE!2f^erKR88rH8$JrDWY`rAsm4r@\"!_^g<hJh)F'Jh,S+r@In"
rA+:1rBgHYrE]A=rHnHurK@,HrLE\Tk+@6tJtIXeh4FZer>Y\Qr>,>Gr"8l;r<rQ2q$>=PJd6l4Jd6l4
`<Z2Er!E<0r=/]:r=]&Dr"o;Kr>G8Hp`"f(JfB:\b8UH@rRh(jrO2Zsr.k5irE]@srC$TKr&h5GJieQG
JieQGm5t8/rBL6Kr(R&mrG2@\rKR8Zr42dGrQbAkq:F-KK%P\-K%TPE!2f^erKR88rH8$JrDWY`rAsm4
r@\"!_^g<hJh)F'Jh,S+r@In"rA+:1rBgHYrE]A=rHnHurK@,HrLE\Tk+@6tJtIXeh4FZer>Y\Qr>,>G
r"8l;r<rQ2q$>=PJd6l4Jd6l4`<Z2Er!E<0r=/]:r=]&Dr"o;Kr>G8Hp`"f(JfB:\b8UH@rRh(jrO2Zs
r.k5irE]@srC$TKr&h5GJieQGJieQGm5t8/rBL6Kr(R&mrG2@\rKR8Zr42dGrQbAkq:F-KK%P\-K%TPE
!2f^erKR88rH8$JrDWY`rAsm4r@\"!_^g<hJh)F'Jh,S+r@In"rA+:1rBgHYrE]A=rHnHurK@,HrLE\T
k+@6tJtIXeh4FZfr>bbSr>5DHr"8l;r=&W3r<^[RJd?r6Jd?r6_$KuGr!NB2r=8c;r=f,Er##AMr>P>J
p`+l*JfK@^b8^NArRh(jrO2Zsr.k5irE]@srC$TKr&h5GJieQGJieQGm5t8/rBL6Kr(R&mrG2@\rKR8Z
r42dGrQbAkq:F-KK%P\-K%TPE!2f^erKR88rH8$JrDWY`rAsm4r@\"!_^g<hJh)F'Jh,S+r@In"rA+:1
rBgHYrE]A=rHnHurK@,HrLE\Tk+@6tJtIXeh4FZfr>bbSr>5DHr"8l;r=&W3r<^[RJd?r6Jd?r6_$KuG
r!NB2r=8c;r=f,Er##AMr>P>Jp`+l*JfK@^b8^NArRh(jrO2Zsr.k5irE]@srC$TKr&h5GJieQGJieQG
m5t8/rBL6Jr(HujrFZ"RrJ^]Ir2oq.rPAHPrQ*@-K#rVdK$!K'!2f^erKR88rH8$JrDWY`rAsm4r@\"!
_^g<hJh)F'Jh,S+r@In"rA+:0rBU<SrE9)3rH8$grJ:E4rK@,Cifo%ZJs:kOh37m[r>bbSr>5DHr"8l;
r=&W3r<^[RJd?r6Jd?r6_$KuGr!NB1r=/]9r=]&Cr"f5Jq&/Z?Jf94ZJf;fN!93t0rQ5#HrLa"CrG_^@
rD*;ZrBL3BYrdP!JieQGJii?]rB1$CrBpKUrE0#1rH\@#rLa"irOMmCrPnfWd)gm]K#rVdn&YR,rLa%Q
rJ(8nr+#\(rC-ZGrA+=(r%,`9Jh)F'Jh)F'gFN4Rr@\%(r&=R>rCd)lrFc(Or.+a%rJpi>rKH6*Js:kO
Js>)U!$2"Xr>PVNr=o/Ar=8c7r<iK0bQre+Jd?r6JdB0ur<`B/r<rQ5r=Ai>r=o/Fr>>>Jn/?lsJf94Z
b8LB?rRh(jrO2Zsr.k5irE]@srC$TKr&h5GJieQGJieQGm5t8/rBL6Jr(HujrFZ"RrJ^]Ir2oq.rPAHP
rQ*@-K#rVdK$!K'!2f^erKR88rH8$JrDWY`rAsm4r@\"!_^g<hJh)F'Jh,S+r@In"rA+:0rBU<SrE9)3
rH8$grJ:E4rK@,Cifo%ZJs:kOh37m[r>bbSr>5DHr"8l;r=&W3r<^[RJd?r6Jd?r6_$KuGr!NB1r=/]9
r=]&Cr"f5Jq&/Z?Jf94ZJf;fN!93t0rQ5#HrLa"CrG_^@rD*;ZrBL3BYrdP!JieQGJii?]rB1$CrBpKU
rE0#1rH\@#rLa"irOMmCrPnfWd)gm]K#rVdn&YR,rLa%QrJ(8nr+#\(rC-ZGrA+=(r%,`9Jh)F'Jh)F'
gFN4Rr@\%(r&=R>rCd)lrFc(Or.+a%rJpi>rKH6*Js:kOJs>)U!$2"Xr>PVNr=o/Ar=8c7r<iK0bQre+
Jd?r6JdB0ur<`B/r<rQ5r=Ai>r=o/Fr>>>Jn/?lsJf94Zb8LB?rRh(jrO2Zsr.k5irE]@srC$TKr&h5G
JieQGJieQGm5t8/rBL6Jr(HujrFZ"RrJ^]Ir2oq.rPAHPrQ*@-K#rVdK$!K'!2f^erKR88rH8$JrDWY`
rAsm4r@\"!_^g<hJh)F'Jh,S+r@In"rA+:0rBU<SrE9)3rH8$grJ:E4rK@,Cifo%ZJs:kOh37m[r>bbS
r>5DHr"8l;r=&W3r<^[RJd?r6Jd?r6_$KuGr!NB1r=/]9r=]&Cr"f5Jq&/Z?Jf94ZJf;fN!93t0rQ5#H
rLa"CrG_^@rD*;ZrBL3BYrdP!JieQGJii?]rB1$CrB^?QrDWZ&rG_^drK7#MrM][urNj_VK!p9>K!t-V
!2f^erKR88rH8$JrDWY`rAsm4r@\"!_^g<hJh)F'Jh,S+r@In"r@n.-rB:*LrDWZ%rG2=RrHnKorIj$^
Jqel3Jqi*9!$2"Xr>PVNr=o/Ar=8c7r<iK0bQre+Jd?r6JdB$qr!E<0r=&W7r=Jo?r"T)Er>+`9Jes"T
JeuTH!93t0rQ5#HrLa"CrG_^@rD*;ZrBL3BYrdP!JieQGJii?]rB1$CrB^?QrDWZ&rG_^drK7#MrM][u
rNj_VK!p9>K!t-V!2f^erKR88rH8$JrDWY`rAsm4r@\"!_^g<hJh)F'Jh,S+r@In"r@n.-rB:*LrDWZ%
rG2=RrHnKorIj$^Jqel3Jqi*9!$2"Xr>PVNr=o/Ar=8c7r<iK0bQre+Jd?r6JdB$qr!E<0r=&W7r=Jo?
r"T)Er>+`9Jes"TJeuTH!93t0rQ5#HrLa"CrG_^@rD*;ZrBL3BYrdP!JieQGJii?]rB1$CrB^?QrDWZ&
rG_^drK7#MrM][urNj_VK!p9>K!t-V!2f^erKR88rH8$JrDWY`rAsm4r@\"!_^g<hJh)F'Jh,S+r@In"
r@n.-rB:*LrDWZ%rG2=RrHnKorIj$^Jqel3Jqi*9!$2"Xr>PVNr=o/Ar=8c7r<iK0bQre+Jd?r6JdB$q
r!E<0r=&W7r=Jo?r"T)Er>+`9Jes"TJeuTH!93t0rQ5#HrLa"CrG_^@rD*;ZrBL3BYrdP!JieQGJii?]
rB1$CrB^?QrDWZ&rG_^drK7#MrM][urNj_VK!p9>K!t-V!2f^erKR88rH8$JrDWY`rAsm4r@\"!_^g<h
Jh)F'Jh,S+r@In"r@n.-rB:*LrDWZ%rG2=RrHnKorIj$^Jqel3Jqi*9!$2"Xr>PVNr=o/Ar=8c7r<iK0
bQre+Jd?r6JdB$qr!E<0r=&W7r=Jo?r"T)Er>+`9Jes"TJeuTH!93t0rQ5#HrLa"CrG_^@rD*;ZrBL3B
YrdP!JieQGJii?]rB1$BrB^?NrD*;orFZ"MrIOm*rKR8LrLM0)JtIXeJtMM(!2f^erKR88rH8$JrDWY`
rAsm4r@\"!_^g<hJh)F'Jh,S+r@In!r@n.+rAsmDrCd)hrEoJ8rGDLQrH$h<JouZfJp#ml!$2"Xr>PVN
r=o/Ar=8c7r<iK0bQre+Jd?r6JdB$qr!E</r<rQ5r=Ai<r"ArAkS/U_JeWeNb7js9rRh(jrO2Zsr.k5i
rE]@srC$TKr&h5GJieQGJieQGm5t8/rBC0Gr'pW[rE9)2rH/!hr/CT=rL3\Ubb'KZJtIXen"0TWrLa%Q
rJ(8nr+#\(rC-ZGrA+=(r%,`9Jh)F'Jh)F'gFN4Rr@Rt%r&"@5rBgHUrDif'r+GtFrGhdWhK=EmJouZf
h/r]<r>bbSr>5DHr"8l;r=&W3r<^[RJd?r6Jd?r6]a4NBr<iK2r=/]9r=Jl>r=eB/JeWeNJeZBB!93t0
rQ5#HrLa"CrG_^@rD*;ZrBL3BYrdP!JieQGJii?]rB1$BrB^?NrD*;orFZ"MrIOm*rKR8LrLM0)JtIXe
JtMM(!2f^erKR88rH8$JrDWY`rAsm4r@\"!_^g<hJh)F'Jh,S+r@In!r@n.+rAsmDrCd)hrEoJ8rGDLQ
rH$h<JouZfJp#ml!$2"Xr>PVNr=o/Ar=8c7r<iK0bQre+Jd?r6JdB$qr!E</r<rQ5r=Ai<r"ArAkS/U_
JeWeNb7js9rRh(jrO2Zsr.k5irE]@srC$TKr&h5GJieQGJieQGm5t8/rBC0Gr'pW[rE9)2rH/!hr/CT=
rL3\Ubb'KZJtIXen"0TWrLa%QrJ(8nr+#\(rC-ZGrA+=(r%,`9Jh)F'Jh)F'gFN4Rr@Rt%r&"@5rBgHU
rDif'r+GtFrGhdWhK=EmJouZfh/r]<r>bbSr>5DHr"8l;r=&W3r<^[RJd?r6Jd?r6]a4NBr<iK2r=/]9
r=Jl>r=eB/JeWeNJeZBB!93t0rQ5#HrLa"CrG_^@rD*;ZrBL'>[6&t%JieQGJii?]rB1$ArBU9KrC[#d
rET;5rG_[[rI4]urJ&OOJqnr5JqrfM!2odgrK[>9rHA*LrDWY`rAsm4r@Yf8Jh2L)Jh2L)f.?kPr@e((
rAX[<rC$TXrDWVsrE]A2rF=\pJn0IDJn3\J!$2"Xr>PVNr=o/Ar=8c7r<iK0bQre+Jd?r6JdB$qp^-m+
r=&W6r=8`9r=J0)Je<SHJe?0<!93t0rQ5#HrLa"CrG_^@rD*;ZrBL'>[6&t%JieQGJii?]rB1$ArBU9K
rC[#drET;5rG_[[rI4]urJ&OOJqnr5JqrfM!2odgrK[>9rHA*LrDWY`rAsm4r@Yf8Jh2L)Jh2L)f.?kP
r@e((rAX[<rC$TXrDWVsrE]A2rF=\pJn0IDJn3\J!$2"Xr>PVNr=o/Ar=8c7r<iK0bQre+Jd?r6JdB$q
p^-m+r=&W6r=8`9r=J0)Je<SHJe?0<!93t0rQ5#HrLa"CrG_^@rD*;ZrBL'>[6&t%JieQGJii?]rB1$A
rBU9KrC[#drET;5rG_[[rI4]urJ&OOJqnr5JqrfM!2odgrK[>9rHA*LrDWY`rAsm4r@Yf8Jh2L)Jh2L)
f.?kPr@e((rAX[<rC$TXrDWVsrE]A2rF=\pJn0IDJn3\J!$2"Xr>PVNr=o/Ar=8c7r<iK0bQre+Jd?r6
JdB$qp^-m+r=&W6r=8`9r=J0)Je<SHJe?0<!93t0rQ5#HrLa"CrG_^@rD*;ZrBL'>[6&t%JieQGJii?]
rB1$ArBU9KrC[#drET;5rG_[[rI4]urJ&OOJqnr5JqrfM!2odgrK[>9rHA*LrDWY`rAsm4r@Yf8Jh2L)
Jh2L)f.?kPr@e((rAX[<rC$TXrDWVsrE]A2rF=\pJn0IDJn3\J!$2"Xr>PVNr=o/Ar=8c7r<iK0bQre+
Jd?r6JdB$qp^-m+r=&W6r=8`9r=J0)Je<SHJe?0<!93t0rQ5#HrLa"CrG_^@rD3A\rBU9Dq)l2LJieQG
JieQGnN6P/rB:*Dr'C9NrCm/frEB/.r+>nCrGK\qJoH<\JoL0t!2odgrK[>9rHA*LrDWY`rB's6r@e(#
_^pBjJh2L)Jh5M)r@Rt#r%S(+rAaa=rBpNSr(R&brDD9IJl@8"JlCK(!$2"Xr>PVNr=o/Ar=8c7r<iK0
bQre+Jd?r6JdAjlr<`9,q$d01j:6bOJe!ABb74O3rRh(jrO2Zsr.k5irE]@trC-ZMr&sj<\N>C)JieQG
JiiKaq)nU=rBL3GrC6`ZrDNStrF,V9rG2@LaDc`MJoH<\mr/9)rLj+SrJ(8or+,b)rC-ZHrA4C*r%5f;
Jh2L)Jh2L)f.?kPr@\"%rA=I4rB:*HrCHi[rD3Ahg/ET%Jl@8"h,=:pr>bbTr>>JJr"Ar=r=&W3r<^[R
Jd?r6Jd?r6]a4B>r<iK2r=&H1q$ua%Je*GDJe-$8!93t0rQ5#HrLa"CrG_^@rD3A\rBU9Dq)l2LJieQG
JieQGnN6P/rB:*Dr'C9NrCm/frEB/.r+>nCrGK\qJoH<\JoL0t!2odgrK[>9rHA*LrDWY`rB's6r@e(#
_^pBjJh2L)Jh5M)r@Rt#r%S(+rAaa=rBpNSr(R&brDD9IJl@8"JlCK(!$;(Yr>Y\Pr>#5Cr=Ai8r<iK0
bQre+Jd?r6JdB$qp^-m+r<rQ4p^R$/ljn[YJe*GDb7=U4rRh(jrO2Zsr.k5irE]@trC-ZMr&sj<\N>C)
JieQGJiiKaq)nU=rBL3GrC6`ZrDNStrF,V9rG2@LaDc`MJoH<\mr/9)rLj+SrJ(8or+,b)rC-ZHrA4C*
r%5f;Jh2L)Jh2L)f.?kPr@\"%rA=I4rB:*HrCHi[rD3Ahg/ET%Jl@8"h,=:pr>bbTr>>JJr"Ar=r=&W3
r<^[RJd?r6Jd?r6]a4B>r<iK2r=&H1q$ua%Je*GDJe-$8!93t0rQ5#HrLj(ErGhdBrD3A]rB^?FrB7PN
JinWIJinWIm6(>1rBC0Er'C9KrC?f[rD<Gmr)io$rE[KNJmO%8JmRnP!2odgrK[>:rHA*MrD`_brB's7
r@n.%r@Q&@Jh2L)Jh2L)gFW:Tq(DS!rA+=/rAaa;rBL3GrBpNPg.$Z`Jjt>]h*qAcr>bbTr>>JJr"Ar=
r=&W3q$GCRJd?r6Jd?r6]a46:r<i?.h[G)FJdd5>b7"C1rRh(jrO2Ztr.t;krEfFurC6`Or'('B[60%'
JinWIJirE_rB:*CrBL3GrBpNRrCm/drDibtrEB/*aBjI)JmO%8mp6!lrLj+SrJ1>pr+5h+rC6`IrA=I,
r%@q"a"2fnJh2L)Jh5Y-r@Rgtr%S()rAFO5rB'sBr'C9KrC,F0Jjt>]Jk"Qc!$;(Yr>Y\Pr>#5Cr=Ai8
r<i?,cj54/Jd?r6JdB$qoEkI'q$Z'gJdd5>Jdfg2!93t0rQ5#HrLj(ErGhdBrD3A]rB^?FrB7PNJinWI
JinWIm6(>1rBC0Er'C9KrC?f[rD<Gmr)io$rE[KNJmO%8JmRnP!2odgrK[>:rHA*MrD`_brB's7r@n.%
r@Q&@Jh2L)Jh2L)gFW:Tq(DS!rA+=/rAaa;rBL3GrBpNPg.$Z`Jjt>]h*qAcr>bbTr>>JJr"Ar=r=&W3
q$GCRJd?r6Jd?r6]a46:r<i?.h[G)FJdd5>b7"C1rRh(jrO2Ztr.t;krEfFurC6`Or'('B[60%'JinWI
JirE_rB:*CrBL3GrBpNRrCm/drDibtrEB/*aBjI)JmO%8mp6!lrLj+SrJ1>pr+5h+rC6`IrA=I,r%@q"
a"2fnJh2L)Jh5Y-r@Rgtr%S()rAFO5rB'sBr'C9KrC,F0Jjt>]Jk"Qc!$;(Yr>Y\Pr>#5Cr=Ai8r<i?,
cj54/Jd?r6JdB$qoEkI'q$Z'gJdd5>Jdfg2!93t1rQ>)JrLs.GrH%pGrDNScrBpKKrBRbTJj4iOJj4iO
ks,,3pd+jGrC-ZUrCd)_r(m8g`);1bJl71umns.`rLs1TrJ:Drr+>n-rCHlMrAOU0r%S(&a"DrrJhDX-
JhGY-r@dq"rA+=-rAFO4rAjd;rB/XoJj"]KJj%pQ!$;(Zr>Y\Pr>#5Cr=Ai9r<rQ2p^,IVJd?r6Jd?r6
_$KB6oEsXeJd[/<Jd]a0!93t1rQ>)JrLs.GrH%pGrDNScrBpKKrBRbTJj4iOJj4iOks,,3pd+jGrC-ZU
rCd)_r(m8g`);1bJl71umns.`rLs1TrJ:Drr+>n-rCHlMrAOU0r%S(&a"DrrJhDX-JhGY-r@dq"rA+=-
rAFO4rAjd;rB/XoJj"]KJj%pQ!$;(Zr>Y\Pr>#5Cr=Ai9r<rQ2p^,IVJd?r6Jd?r6_$KB6oEsXeJd[/<
Jd]a0!93t1rQ>)JrLs.GrH%pGrDNScrBpKKrBRbTJj4iOJj4iOks,,3pd+jGrC-ZUrCd)_r(m8g`);1b
Jl71umns.`rLs1TrJ:Drr+>n-rCHlMrAOU0r%S(&a"DrrJhDX-JhGY-r@dq"rA+=-rAFO4rAjd;rB/Xo
Jj"]KJj%pQ!$;(Zr>Y\Pr>#5Cr=Ai9r<rQ2p^,IVJd?r6Jd?r6_$KB6oEsXeJd[/<Jd]a0!93t1rQ>)J
rLs.GrH%pGrDNScrBpKKrBRbTJj4iOJj4iOks,,3pd+jGrC-ZUrCd)_r(m8g`);1bJl71umns.`rLs1T
rJ:Drr+>n-rCHlMrAOU0r%S(&a"DrrJhDX-JhGY-r@dq"rA+=-rAFO4rAjd;rB/XoJj"]KJj%pQ!$;(Z
r>Y\Pr>#5Cr=Ai9r<rQ2p^,IVJd?r6Jd?r6_$KB6oEsXeJd[/<Jd]a0!93t1rQ>)JrLs.GrH%pGrDNSc
rBpKKrBRbTJj4iOJj4iOks,,3pd+jGrC-ZUrCd)_r(m8g`);1bJl71umns.`rLs1TrJ:Drr+>n-rCHlM
rAOU0r%S(&a"DrrJhDX-JhGY-r@dq"rA+=-rAFO4rAjd;rB/XoJj"]KJj%pQ!$;(Zr>Y\Pr>#5Cr=Ai9
r<rQ2p^,IVJd?r6Jd?r6_$KB6oEsXeJd[/<Jd]a0!93t1rQP5NrM9@NrHS9PrE0"nrCQoVrC++^Jjb2Y
Jjb2YksY>9r'pWTrCHlZrCcoZrCt4*JkgnmJkkc0!2odhrKmJ>rH\<SrE9(lrB^BCrAOR1rA2JLJhhp5
Jhhp5f/!.Xr&"4,q)@q+eiJCDJi\KEh)YNWr>khUr>>JKr"K#?r=/]6q$PITJdI#8JdI#8YR/bcJdR):
JdT[.!93t1rQP5NrM9@NrHS9PrE0"nrCQoVrC++^Jjb2YJjb2YksY>9r'pWTrCHlZrCcoZrCt4*Jkgnm
Jkkc0!2odhrKmJ>rH\<SrE9(lrB^BCrAOR1rA2JLJhhp5Jhhp5f/!.Xr&"4,q)@q+eiJCDJi\KEh)YNW
r>khUr>>JKr"K#?r=/]6q$PITJdI#8JdI#8YR/bcJdR):JdT[.!93t1rQP5NrM9@NrHS9PrE0"nrCQoV
rC++^Jjb2YJjb2YksY>9r'pWTrCHlZrCcoZrCt4*JkgnmJkkc0!2odhrKmJ>rH\<SrE9(lrB^BCrAOR1
rA2JLJhhp5Jhhp5f/!.Xr&"4,q)@q+eiJCDJi\KEh)YNWr>khUr>>JKr"K#?r=/]6q$PITJdI#8JdI#8
YR/bcJdR):JdT[.!93t1rQP5NrM9@NrHS9PrE0"nrCQoVrC++^Jjb2YJjb2YksY>9r'pWTrCHlZrCcoZ
rCt4*JkgnmJkkc0!2odhrKmJ>rH\<SrE9(lrB^BCrAOR1rA2JLJhhp5Jhhp5f/!.Xr&"4,q)@q+eiJCD
Ji\KEh)YNWr>khUr>>JKr"K#?r=/]6q$PITJdI#8JdI#8YR/bcJdR):JdT[.!9=%2rQbASrM]XXrI4]^
rF#S+rDNDd[8)<KJkgnmJkkQ*lqdRVrDC%%Jl71uJl;&8!3#jirL!PArI"NZrE]A!rC?fPrB9p;a#\f5
Ji\KEJi_LEkWA`*aZY5=Jj"]Kh)t`Zr>khUr>GPLr"K#@r=8c8r=&W4cjG@3JdR):JdS^hdgLa8Jd[/<
b6n=1rRq.prOi*-r0.).rGDL@rE0"rpeS:mJkgnmJkgnmkt^S@rD<Gi[o.fUJl71umns.arLs1WrJUW%
r+u=;rDEM`rB^BFpcHMWJi\KEJi\KEf/i+WrB/1bJj"]KJj%pQ!$;(Zr>Y\Qr>,;Er=Su<r=/]6r<psZ
JdR):JdR):YR8heJd[/<Jd]a0!9=%2rQbASrM]XXrI4]^rF#S+rDNDd[8)<KJkgnmJkkQ*lqdRVrDC%%
Jl71uJl;&8!3#jirL!PArI"NZrE]A!rC?fPrB9p;a#\f5Ji\KEJi_LEkWA`*aZY5=Jj"]Kh)t`Zr>khU
r>GPLr"K#@r=8c8r=&W4cjG@3JdR):JdS^hdgLa8Jd[/<b6n=1rRq.prOi*-r0.).rGDL@rE0"rpeS:m
JkgnmJkgnmkt^S@rD<Gi[o.fUJl71umns.arLs1WrJUW%r+u=;rDEM`rB^BFpcHMWJi\KEJi\KEf/i+W
rB/1bJj"]KJj%pQ!$;(Zr>Y\Qr>,;Er=Su<r=/]6r<psZJdR):JdR):YR8heJd[/<Jd]a0!9O17rR(S\
rNH-grJCJurGDLFrF,V1Z!DreJmEt6JmHl3Y?lfeJmO%8mp6!nrM'7ZrK$o.r,_gJrE9(rrCd)[r'nRm
Jjk8[Jjk8[_F;:1Jjt>]Jk"Qc!$D.\r>bbSr>>GIr=f,@r=Ai:bRK.5Jdm;@Jdm;@Jdm;@Jdom4!9O17
rR(S\rNH-grJCJurGDLFrF,V1Z!DreJmEt6JmHl3Y?lfeJmO%8mp6!nrM'7ZrK$o.r,_gJrE9(rrCd)[
r'nRmJjk8[Jjk8[_F;:1Jjt>]Jk"Qc!$D.\r>bbSr>>GIr=f,@r=Ai:bRK.5Jdm;@Jdm;@Jdm;@Jdom4
!9O17rR(S\rNH-grJCJurGDLFrF,V1Z!DreJmEt6JmHl3Y?lfeJmO%8mp6!nrM'7ZrK$o.r,_gJrE9(r
rCd)[r'nRmJjk8[Jjk8[_F;:1Jjt>]Jk"Qc!$D.\r>bbSr>>GIr=f,@r=Ai:bRK.5Jdm;@Jdm;@Jdm;@
Jdom4!9O17rR(S\rNH-grJCJurGDLFrF,V1Z!DreJmEt6JmHl3Y?lfeJmO%8mp6!nrM'7ZrK$o.r,_gJ
rE9(rrCd)[r'nRmJjk8[Jjk8[_F;:1Jjt>]Jk"Qc!$D.\r>bbSr>>GIr=f,@r=Ai:bRK.5Jdm;@Jdm;@
Jdm;@Jdom4!9X7;rRLkerO;^%rKdD=rI=cjrH.sXZ#PA8JoQB^JoQB^JoQB^JoU7!!3,pmrLNnNrJ1;s
rGVXGrE]A)rDibp_c).cJl@8"Jl@8"Jl@8"JlCK(!$D.\r>khUr>GMKr=o2Dr=Si:cjt^=Je*GDJe*GD
Je*GDJe-$8!9X7;rRLkerO;^%rKdD=rI=cjrH.sXZ#PA8JoQB^JoQB^JoQB^JoU7!!3,pmrLNnNrJ1;s
rGVXGrE]A)rDibp_c).cJl@8"Jl@8"Jl@8"JlCK(!$D.\r>khUr>GMKr=o2Dr=Si:cjt^=Je*GDJe*GD
Je*GDJe-$8!9X7;rRLkerO;^%rKdD=rI=cjrH.sXZ#PA8JoQB^JoQB^JoQB^JoU7!!3,pmrLNnNrJ1;s
rGVXGrE]A)rDibp_c).cJl@8"Jl@8"Jl@8"JlCK(!$D.\r>khUr>GMKr=o2Dr=Si:cjt^=Je*GDJe*GD
Je*GDJe-$8!9X7;rRLkerO;^%rKdD=rI=cjrH.sXZ#PA8JoQB^JoQB^JoQB^JoU7!!3,pmrLNnNrJ1;s
rGVXGrE]A)rDibp_c).cJl@8"Jl@8"Jl@8"JlCK(!$D.\r>khUr>GMKr=o2Dr=Si:cjt^=Je*GDJe*GD
Je*GDJe-$8!9a=>rRq.orPJK>rMKO_rKI2?rJLN0rJ7k:Jqnr5Jqnr5Jqnr5Jqnr5mtUnCrMKOdrKmJD
r.P#prH%pRrFl.Ar+3cVJn0IDJn0IDJn0IDJn0IDh.-L-r>tnXr>bbSr##AJr>#8FoFoafJeEYJJeEYJ
JeEYJJeEYJb7Xg<rSd_.rQY;Xr3ZF"rL<bLrJpi6r/(B.[>0?hJqnr5Jqnr5Jqnr5JqrfM!36!prLj+U
rK$l0rHeE`rG;FGrFYt=_dn@0Jn0IDJn0IDJn0IDJn3\J!$D.\r>khVr>PSNr>,>Hr=nl;eImHHJeEYJ
JeEYJJeEYJJeH6>!9a=>rRq.orPJK>rMKO_rKI2?rJLN0rJ7k:Jqnr5Jqnr5Jqnr5Jqnr5mtUnCrMKOd
rKmJDr.P#prH%pRrFl.Ar+3cVJn0IDJn0IDJn0IDJn0IDh.-L-r>tnXr>bbSr##AJr>#8FoFoafJeEYJ
JeEYJJeEYJJeEYJb7Xg<rSd_.rQY;Xr3ZF"rL<bLrJpi6r/(B.[>0?hJqnr5Jqnr5Jqnr5JqrfM!36!p
rLj+UrK$l0rHeE`rG;FGrFYt=_dn@0Jn0IDJn0IDJn0IDJn3\J!$D.\r>khVr>PSNr>,>Hr=nl;eImHH
JeEYJJeEYJJeEYJJeH6>!9jCBrSIM'rQP2VrO;a/rM][krM$BdJtR^gJtR^gJtR^gJtR^gn"9Z]rM][i
rLNnQr/^f3rIOoprH\?c^35*OJp)`hJp)`hJp)`hJp,snr#bkYr>khVr#5MOr>>JLa;0@CJeiqRJeiqR
JeiqRJelNF!9jCBrSIM'rQP2VrO;a/rM][krM$BdJtR^gJtR^gJtR^gJtR^gn"9Z]rM][irLNnQr/^f3
rIOoprH\?c^35*OJp)`hJp)`hJp)`hJp,snr#bkYr>khVr#5MOr>>JLa;0@CJeiqRJeiqRJeiqRJelNF
!9jCBrSIM'rQP2VrO;a/rM][krM$BdJtR^gJtR^gJtR^gJtR^gn"9Z]rM][irLNnQr/^f3rIOoprH\?c
^35*OJp)`hJp)`hJp)`hJp,snr#bkYr>khVr#5MOr>>JLa;0@CJeiqRJeiqRJeiqRJelNF!9jCBrSIM'
rQP2VrO;a/rM][krM$BdJtR^gJtR^gJtR^gJtR^gn"9Z]rM][irLNnQr/^f3rIOoprH\?c^35*OJp)`h
Jp)`hJp)`hJp,snr#kq[r>tnWr#>SQq&&oDck_3KJeiqRJeiqRJeiqRJelNF!9jCBrSIM'rQP2VrO;a/
rM][krM$BdJtR^gJtR^gJtR^gJtR^gn"9Z]rM][irLNnQr/^f3rIOoprH\?c^35*OJp)`hJp)`hJp)`h
Jp,snr#kq[r>tnWr#>SQq&&oDck_3KJeiqRJeiqRJeiqRJelNF!9sIFrT!k3rRLhjrQ"lRrOr0@rODd7
Z*o7mK!p9>K!p9>K!p9>K!t-V!3H.!rMTUgrLNkQrKI2@rJUW2rJ:B,_hNbtJqel3Jqel3Jqel3Jqi*9
!$V.\r?(tZr#P_Ur>Y5EeJWrVJf0.XJf0.XJf0.XJf2`L!9sIFrT!k3rRLhjrQ"lRrOr0@rODd7Z*o7m
K!p9>K!p9>K!p9>K!t-V!3H.!rMTUgrLNkQrKI2@rJUW2rJ:B,_hNbtJqel3Jqel3Jqel3Jqi*9!$V.\
r?(tZr#P_Ur>Y5EeJWrVJf0.XJf0.XJf0.XJf2`L!9sIFrT!k3rRLhjrQ"lRrOr0@rODd7Z*o7mK!p9>
K!p9>K!p9>K!t-V!3H.!rMTUgrLNkQrKI2@rJUW2rJ:B,_hNbtJqel3Jqel3Jqel3Jqi*9!$V.\r?(tZ
r#P_Ur>Y5EeJWrVJf0.XJf0.XJf0.XJf2`L!9sIFrT!k3rRLhjrQ"lRrOr0@rODd7Z*o7mK!p9>K!p9>
K!p9>K!t-V!3Q4#rM][irLWqSrKR8ArJ^]4rJCH._hWi!Jqnr5Jqnr5Jqnr5Jqr0;!$V.\r?(tZr#P_U
r>Y5EeJWrVJf0.XJf0.XJf0.XJf2`L!:0UIrT=(=rSIJ*rRLkorQbAdrQD:bK$&\fK$&\fK$&\fK$&\f
n&bX5rN,strM][jr1X(\rL<bRrKt0^JsM"SJsM"SJsM"SJsM"Sh3J$aocX2Tp`B)KbT)3SJfK@^JfK@^
JfK@^JfMrR!:0UIrT=(=rSIJ*rRLkorQbAdrQD:bK$&\fK$&\fK$&\fK$&\fn&bX5rN,strM][jr1X(\
rL<bRrKt0^JsM"SJsM"SJsM"SJsM"Sh3J$aocX2Tp`B)KbT)3SJfK@^JfK@^JfK@^JfMrR!:0UIrT=(=
rSIJ*rRLkorQbAdrQD:bK$&\fK$&\fK$&\fK$&\fn&bX5rN,strM][jr1X(\rL<bRrKt0^JsM"SJsM"S
JsM"SJsM"Sh3J$aocX2Tp`B)KbT)3SJfK@^JfK@^JfK@^JfMrR!:0UIrT=(=rSIJ*rRLkorQbAdrQD:b
K$&\fK$&\fK$&\fK$&\fn&bX5rN,strM][jr1X(\rL<bRrKt0^JsM"SJsM"SJsM"SJsM"Sh3J$aocX2T
p`B)KbT)3SJfK@^JfK@^JfK@^JfMrR!:0UKrTO4CrT*n8rSRS/q:_e#K%Yb/K%Yb/K%Yb/K%Yb/n(IWA
rN,surMf^mrMBIfq4bHoJt[diJt[diJt[diJt[dih4a`iocWTCbT;?WJf]LbJf]LbJf]LbJf`)V!:0UK
rTO4CrT*n8rSRS/q:_e#K%Yb/K%Yb/K%Yb/K%Yb/n(IWArN,surMf^mrMBIfq4bHoJt[diJt[diJt[di
Jt[dih4a`iocWTCbT;?WJf]LbJf]LbJf]LbJf`)V!:0UKrTO4CrT*n8rSRS/q:_e#K%Yb/K%Yb/K%Yb/
K%Yb/n(IWArN,surMf^mrMBIfq4bHoJt[diJt[diJt[diJt[dih4a`iocWTCbT;?WJf]LbJf]LbJf]Lb
Jf`)V!:0UKrTO4CrT*n8rSRS/q:_e#K%Yb/K%Yb/K%Yb/K%Yb/n(IWArN,surMf^mrMBIfq4bHoJt[di
Jt[diJt[diJt[dih4a`iocWTCbT;?WJf]LbJf]LbJf]LbJf`)V!:9OIrTX:Er9+%@rT4"=UuR'eK&_IC
K&_ICK&_ICK&c=[!3c4$rN6%"r2]XnrMd6(JuF:"JuF:"JuF:"JuF:"h5KrhZQOiBJfoXfJfoXfJfoXf
Jfr5Z!:9OIrTX:Er9+%@rT4"=UuR'eK&_ICK&_ICK&_ICK&c=[!3c4$rN6%"r2]XnrMd6(JuF:"JuF:"
JuF:"JuF:"h5KriZQXoDJg#^hJg#^hJg#^hJg&;\!:9OIrTX:Er9+%@rT4"=UuR'eK&_ICK&_ICK&_IC
K&c=[!3c4$rN6%"r2]XnrMd6(JuF:"JuF:"JuF:"JuF:"h5KriZQXoDJg#^hJg#^hJg#^hJg&;\!:9OI
rTX:Er9+%@rT4"=UuR'eK&_ICK&_ICK&_ICK&c=[!3c4$rN6%"r2]XnrMd6(JuF:"JuF:"JuF:"JuF:"
h5KriZQXoDJg#^hJg#^hJg#^hJg&;\r9X+Br9F7FSEPRgK'7gMK'7gMK'7gMK';[er3,UmrN36(JujR*
JujR*JujR*JujR*h5oc`^`e:QJg#^hJg#^hJg#^hJg&;\r9X+Br9F7FSEPRgK'7gMK'7gMK'7gMK';[e
r3,UmrN36(JujR*JujR*JujR*JujR*h5oc`^`e:QJg#^hJg#^hJg#^hJg&;\r9X+Br9F7FSEPRgK'7gM
K'7gMK'7gMK';[er3,UmrN36(JujR*JujR*JujR*JujR*h5oc`^`e:QJg#^hJg#^hJg#^hJg&;\r9X+B
r9F7FSEPRgK'7gMK'7gMK'7gMK';[er3,UmrN36(JujR*JujR*JujR*JujR*h5oc`^`e:QJg#^hJg#^h
Jg#^hJg&;\nEcA)K'S$SK'S$SK'S$SK'S$Sn*BJHV65EQK!'^.K!'^.K!'^.K!*q4VBUU9Jg,djJg,dj
Jg,djJg/A^nEcA)K'S$SK'S$SK'S$SK'S$Sn*BJHV65EQK!'^.K!'^.K!'^.K!*q4VBUU9Jg,djJg,dj
Jg,djJg/A^nEcA)K'S$SK'S$SK'S$SK'S$Sn*BJHV65EQK!'^.K!'^.K!'^.K!*q4VBUU9Jg,djJg,dj
Jg,djJg/A^nEcA)K'S$SK'S$SK'S$SK'S$Sn*BJHV65EQK!'^.K!'^.K!'^.K!*q4VBUU9Jg,djJg,dj
Jg,djJg/A^nEcA)K'S$SK'S$SK'S$SK'S$Sn*BJHV65EQK!'^.K!'^.K!'^.K!*q4VBUU9Jg,djJg,dj
Jg,djJg/A^K'\*UK'\*UK'\*UK'\*UK'_smPco\BK!0d0K!0d0K!0d0K!4"6VBUU9Jg,djJg,djJg,dj
Jg/A^K'\*UK'\*UK'\*UK'\*UK'_smPco\BK!0d0K!0d0K!0d0K!4"6VBUU9Jg,djJg,djJg,djJg/A^
K'\*UK'\*UK'\*UK'\*UK'_smPco\BK!0d0K!0d0K!0d0K!4"6VBUU9Jg,djJg,djJg,djJg/A^K'\*U
K'\*UK'\*UK'\*UK'_smPco\BK!0d0K!0d0K!0d0K!4"6VB^[;Jg5jlJg5jlJg5jlJg8G`K'\*UK'\*U
K'\*UK'\*UK'_smPco\BK!0d0K!0d0K!0d0K!4"6VB^[;Jg5jlJg5jlJg5jlJg8G`K'\*UK'\*UK'\*U
K'\*UK'_smPco\BK!0d0K!0d0K!0d0K!4"6VB^[;Jg5jlJg5jlJg5jlJg8G`K'\*UK'\*UK'\*UK'\*U
K'_smPco\BK!0d0K!0d0K!0d0K!4"6VB^[;Jg5jlJg5jlJg5jlJg8G`K'\*UK'\*UK'\*UK'\*UK'_sm
Pco\BK!0d0K!0d0K!0d0K!4"6VB^[;Jg5jlJg5jlJg5jlJg8G`K'\*UK'\*UK'\*UK'\*UK'_smPco\B
K!0d0K!0d0K!0d0K!4"6VB^[;Jg5jlJg5jlJg5jlJg8G`K'\*UK'\*UK'\*UK'\*UK'_smPco\BK!0d0
K!0d0K!0d0K!4"6VB^[;Jg5jlJg5jlJg5jlJg8G`K'\*UK'\*UK'\*UK'\*UK'_smPco\BK!0d0K!0d0
K!0d0K!4"6VB^[;Jg5jlJg5jlJg5jlJg8G`K'\*UK'\*UK'\*UK'\*UK'_smPco\BK!0d0K!0d0K!0d0
K!4"6VB^[;Jg5jlJg5jlJg5jlJg8G`K'\*UK'\*UK'\*UK'\*UK'_smPco\BK!0d0K!0d0K!0d0K!4"6
VB^[;Jg5jlJg5jlJg5jlJg8G`J,~>

%%EndBinary
grestore % PSGState
newpath % image
178.716 55.494 mo
145.086 55.494 li
144.314 49.052 142.281 43.8961 138.987 40.023 cv
134.685 34.974 128.484 32.445 120.384 32.445 cv
113.265 32.445 107.316 34.686 102.519 39.159 cv
97.7961 43.5629 95.3938 49.0051 95.3207 55.494 cv
89.3918 55.494 li
89.8822 52.2318 90.8815 49.0636 92.394 45.99 cv
94.626 41.436 97.731 37.584 101.7 34.434 cv
106.002 31.113 110.682 28.782 115.731 27.45 cv
120.78 26.118 127.026 25.452 134.478 25.452 cv
148.554 25.452 159.561 28.854 167.508 35.658 cv
173.518 40.8038 177.253 47.4179 178.716 55.494 cv
120.972 55.494 mo
99.2588 55.494 li
99.4259 55.2098 99.6035 54.8981 99.792 54.558 cv
101.781 51.417 104.841 49.842 108.981 49.842 cv
113.454 49.842 116.937 51.084 119.421 53.568 cv
120.008 54.1546 120.524 54.7969 120.972 55.494 cv
gsave % PSGState
clp
[1 0 0 -1 0 305 ] concat
/0 /CSA get_res setcolorspace
[89.8704 0 0 30.5194 89.118 249.264 ] concat
snap_to_device
Adobe_AGM_Image/AGMIMG_filter currentfile /ASCII85Decode filter /RunLengthDecode filter ddf
<<
/ImageType 1
/Width 375 
/Height 127 
/ImageMatrix[375 0 0 -127 0 127 ]
/MultipleDataSources true
/BitsPerComponent 8 
/Decode[0 1 0 1 0 1 ]
/DataSource [
[AGMIMG_filter 375 string /readstring cvx /pop cvx] cvx
[AGMIMG_filter 375 string /readstring cvx /pop cvx] cvx
[AGMIMG_filter 375 string /readstring cvx /pop cvx] cvx
]
/NComponents 3 
/HostSepColorImage false 
/SkipImageProc {false}
/Operator /image
>>
%%BeginBinary: 1
img
JieQGj#d3%rBL6Lr(m8trGhdlrLs2!r6,&lrT*qArTrJ0q_!IQJhH:?r@e+(rAFL9rCHlhrFu4XrJg`F
rM]\!rNuO3i4&@hJe!ABlONk(r=Jl?r>,>Nr?2%cr@@e"rA4C1rAWLkmlQ+_JiiWerB1$CrC-W[rEfGB
rJ:EGrO;^JrRq/1rTX:Ii9fb]JhDX-q_%h#rA"7.r&t!LrE0#4rI"R'r1*_arNQ7-rO1XnispYNJe%_h
r=Ai<r"K#Er>Y\Xr?hInr%S(*rAOU5gc4+OJiecMrB1*Es$-HNr(m8trGhdlrLs2!r6,&lrT*qArTrJ0
f.MY-N\:8`rA"7.r&t!LrE0#4rI"R'r1*_arNQ7-rO1Xnd11a<O:M4"r=Jl?!#GPLr>Y\Xr?hInr%S(*
rAOU5gc3J=JifD_rB1$CrC-W[rEfJC!-.snrLs2!r6,&lrT*qArTrJ0JhDX-j"C9`rA"7.r&t!LrE0#4
rI"R'r1*_arNQ7-rO1Xnq[S2fJe$lPr=Ai<r"K#Er>Y\Xr?hInr%S(*rAOU5gc4sgJieQGmlUJ1rBL6L
r(m8trGhdlrLs2!r6,&lrT*qArTrJ0mk02EJhH^Kr@e+(rAFL9rCHlhrFu4XrJg`FrM]\!rNuO3i4%q\
Je!ABpC@-4r=Jl?r>,>Nr?2%cr@@e"rA4C1rAWLkj#_iSJiionrBL6Lr(m8trGhdlrLs2!r6,&lrT*qA
rTrJ0h(F:3LbAWZs"XO.rAFL9rCHlhrFu4XrJg`FrM]\!rNuO3i4%;JJe!YJr=Ai<r"K#Er>Y\Xr?hIn
r%S(*rAOU5gc3\CJif2YrB1$CrC-W[!+,Y2rGhdlrLs2!r6,&lrT*qArTrJ0b:\B!RP+OlrA"7.r&t!L
r`B/&rFu4XrJg`FrM]\!rNuO3i4":JJe$ZJr=Ai<r"K#Er>Y\Xr?hInr%S(*rAOU5gc50mJieQGkr\i+
rBL6Lr(m8trGhdlrLs2!r6,&lrT*qArTrJ0oe(hKJhHLEr@e+(rAFL9rCHlhrFu4XrJg`FrM]\!rNuO3
i4&.bJe!ABnIGL.r=Jl?r>,>Nr?2%cr@@e"rA4C1rAWLkkrXJYJiiikrB1$CrC-W[rEfGBrJ:EGrO;^J
rRq/1rTX:Ii9fPWJhDX-r@e+(rAFL9rCHlhrFu4XrJg`FrM]\!rNuO3i4%MPJe!GDrt#,?r=Jl?r>,>N
r?2%cr@@e"rA4C1rAWLkf/nRGN][2%rBL6Lr(m8trGhdlrLs2!r6,&lrT*qArTrJ0d4U#'PV2nfrA"7.
r&k$Nr^cuirFu4XrJg`FrM]\!rNuO3i4$l>Je"(Vr=Ai<r"K#ErYkhVr?2%cr@@e"rA4C1rAWLkJieQG
j#d3%rBL6Lr(m8trGhdlrLs2!r6,&lrT*qArTrJ0q_!IQJhH:?r@e+(rAFL9rCHlhrFu4XrJg`FrM]\!
rNuO3i4&@hJe!ABlONk(r=Jl?r>,>Nr?2%cr@@e"rA4C1rAWLkmlQ+_JiiWerB1$CrC-W[rEfGBrJ:EG
rO;^JrRq/1rTX:Ii9fb]JhDX-q_%h#rA"7.r&t!LrE0#4rI"R'r1*_arNQ7-rO1XnispYNJe%_hr=Ai<
r"K#Er>Y\Xr?hInr%S(*rAOU5gc4+OJiecMrB1*Es$-HNr(m8trGhdlrLs2!r6,&lrT*qArTrJ0f.MY-
N\:8`rA"7.r&t!LrE0#4rI"R'r1*_arNQ7-rO1Xnd11a<O:M4"r=Jl?!#GPLr>Y\Xr?hInr%S(*rAOU5
gc3J=JifD_rB1$CrC-W[rEfJC!-.snrLs2!r6,&lrT*qArTrJ0JhDX-j"C9`rA"7.r&t!LrE0#4rI"R'
r1*_arNQ7-rO1Xnq[S2fJe$lPr=Ai<r"K#Er>Y\Xr?hInr%S(*rAOU5gc4sgJieQGmlUJ1rBL6Lr(m8t
rGhdlrLs2!r6,&lrT!k@q<[20mk02EJhH^Kr@e+(rAFL9rCHlhrFu4XrJg`FrMTUtrNuC/jL=@`Je!AB
pC@-4r=Jl?r>,>Nr?2%cr@@e"rA4C1rAWLkj#_iSJiionrBL6Lr(m8trGhdlrLs2!r6,&lrT!k@q<[20
h(F:3LbAWZs"XO.rAFL9rCHlhrFu4XrJg`FrMTUtrNuC/jL<_NJe!YJr=Ai<r"K#Er>Y\Xr?hInr%S(*
rAOU5gc3\CJif2YrB1$CrC-W[!+,Y2rGhdlrLs2!r6,&lrT!k@q<[20b:\B!RP+OlrA"7.r&t!Lr`B/&
rFu4XrJg`FrMTUtrNuC/jL9^NJe$ZJr=Ai<r"K#Er>Y\Xr?hInr%S(*rAOU5gc50mJieQGkr\i+rBL6L
r(m8trGhdlrLs2!r6,&lrT!k@q<[20oe(hKJhHLEr@e+(rAFL9rCHlhrFu4XrJg`FrMTUtrNuC/jL=Rf
Je!ABnIGL.r=Jl?r>,>Nr?2%cr@@e"rA4C1rAWLkkrXJYJiiikrB1$CrC-W[rEfGBrJ:EFrO;^IrRq//
rTO4Fi9]JVJhDX-r@e+(rAFL9rCHlhrFu4WrJg`FrMTUtrNlI1i3qGOJe!GDrt#,?r=Jl?r>,>Nr?2%c
r@@e"rA4C0q)@4kf/nRGN][2%rBL6Lr(m8trGhdlrLj+ur6"ukrSme>rT`>-d4U#'PV2nfrA"7.r&k$N
r^cuirFu4WrJg`FrMTUtrNlI1i3pf=Je"(Vr=Ai<r"K#ErYkhVr?2%cr@@e"rA4C0q)@4kJieQGj#d3%
rBL6Lr(m8trGhdlrLj+ur6"ukrSme>rT`>-q_!IQJhH:?r@e+(rAFL9rCHlhrFu4WrJg`FrMTUtrNlI1
i3r:gJe!ABlONk(r=Jl?r>,>Nr?2%cr@@e"rA4C0q)@4kmlQ+_JiiWerB1$CrC-W[rEfGBrJ:EFrO;^I
rRq//rTO4Fi9]\\JhDX-q_%h#rA"7.r&t!LrE0#4rHnL&r1*_`rNH1+rO(RlispYNJe%_hr=Ai<r"K#E
r>Y\Xr?hInr%S(*rAFC0i&KOSJiecMrB1*Es$-HNr(m8trG_^jrLWtpr5eifrSRS8rTN2(f.MY-N\:8`
rA"7.r&t!LrE&r2rHeF#r0mS\rN,t&rNkFhd11a<O:M4"r=Jl?!#GPLr>Y\Xr?_Cmr%J")rAFO3gc*D<
JifD_rB1$CrC-W[rEfJB!-%mlrLWtpr5eifrSRS8rTN2(JhDX-j"C9`rA"7.r&t!LrE&r2rHeF#r0mS\
rN,t&rNkFhq[S2fJe$lPr=Ai<r"K#Er>Y\Xr?_Cmr%J")rAFO3gc+mfJieQGmlUJ1rBL6Lr(m8trG_^j
rLWtpr5eifrSRS8rTN2(mk02EJhH^Kr@e+(rAFL9rCHlgrFl.UrJUTBrMBIorNZ=-i3__YJe!ABpC@-4
r=Jl?r>,>Nr?2%br@@e!rA4C0rANFij#_iSJiionrBL6Lr(m8trG_^jrLWtpr5eifrSRS8rTN2(h(F:3
LbAWZs"XO.rAFL9rCHlgrFl.UrJUTBrMBIorNZ=-i3_)GJe!YJr=Ai<r"K#Er>Y\Xr?_Cmr%J")rAFO3
gc*VBJif2YrB1$CrC-WZ!*oM.rGVXfrL<bjr5/EZrS%5-rSme9jQ+K:JhEKEr@e+(rAFL8rC?ie!*/u0
rHS9tr0I;TrMfasq6/k`Je!ABh[]Sqr=Jl>r>,>Mr?(tar@7^trA"7-q).(gq`BBkJii3YrB1$CrC-WZ
rET;>rIk-=rNZ:;rQtMsrSRS5rSuu"oe(hKJhHLEr@e+(rAFL8rC?fdrFZ"QrJCH<rLs1hrN,gujKS(_
Je!ABnIGL.r=Jl>r>,>Mr?(tar@7^trA"7-q).(gkrXJYJiiikrB1$CrC-WZrET;>rIk-=rNZ:;rQtMs
rSRS5rSuu"j">p9JhI!TrA"7.r&jpJrDif.rHS9tr0I;TrMfasq6/k`h%##HKF\"mrt#&>r"ArDr>PVV
r?_Clr%@q&rA==-i&91KJieuSrB1$CrC-WZrET;>rIk-=rNZ:;rQtMsrSRS5rSuu"d4U#'PV2nfrA"7.
r&asLr^ZoerFZ"QrJCH<rLs1hrN,gujKQf;Je"(Vr=Ai<r"ArDrYbbTr?(tar@7^trA"7-q).(gJieQG
j#d3%rBL6Lr([,orG;F^rKdD]r4DpKrQtMogtDQWJhDX-kq;ofrA"7.r&jpIrDWZ(rH/!jr/glGrLs1d
q5<;PoaZQ`Je%)Vr=Ai<r"ArDr>GPTr?M7hr%.e"r@uq\mlQ+_JiiWerB1$CrC-WYrEK5:rI=d3rMf_,
rQ+rarRTcWkq7Q?JhHpQr@e+(rAFL8rC6`arF5_IrIb$0rL3\YrMB=fjJ_)KJe!ABr=8c:r=Jl>r>,>L
r>tn^r@%Rpr@e+(fJD>FJiecMrB1*Es$-HNr([,orG;F^rKdD]r4DpKrQtMogtC:3JhE'9r@e+(rAFL8
rC6`arF5_IrIb$0rL3\YrMB=fjJ^H9Je""Tq%*E9r"B&GrYGGNr?(t`r@.Xrr@n1*rA34cb<(;;RQLI1
rBL6Lr([,orbMRNrI=d3rMf_,rQ+rarRTcWJhDX-j"C9`rA"7.r&jpIrDWZ(rH/!jr/glGrLs1dq5<;P
q[S2fJe%#Tq%*E9r"K#Er>PVVr?V=jr%7k$rA+=-gbe[cJieQGmlUJ1rBL6Kr(HujrFc(TrJgcKr3-(2
rPJNSrQ='Amk02EJhH^Kr@e+(rA=F5rC$T\rEfG>rHnHtrK-uDrL2N3kmi:TJe%Yfq%*E8r"ArCr>GPS
r?D1er$qXsr@e+'gbIhNJieQGrB1$CrC$QVrE0#2rHeF%rLj(lrO`$FrQ+r[i60q/JhDj3r@e1*s"XI/
r&XdErD<H!rGDL[r.k64rKdDNgmlt+Je!eNq%*E8r"ArCr>GPSr?D1er$qXsr@e+'gbI2<Jif2YrB1$C
rC$QV!*K5&rFc(TrJgcKr3-(2rPJNSrQ='Ab:\B!RP+OlrA"7-r&XdEr_NSkrEfG>rHnHtrK-uDrL2N3
Je!ABistkqr=Jl>r>#8Kr>kh\r?hFlr@Rt$r@m"]q`BBkJii3YrB1$CrC$QVrE0#2rHeF%rLj(lrO`$F
rQ+r[i61dGJhDX-mk4PlrA"7-r&XdErD<H!rGDL[r.k64rKdDNgmmgCJe!ABoa^d.r=Jl>r>#8Kr>kh\
r?hFlr@Rt$r@m"]krXJYJiiikrB1$CrC$QVrE0#2rHeF%rLj(lrO`$FrQ+r[i61.5JhDX-r@e+(rA=F5
rC$T\rEfG>rHnHtrK-uDrL2N3h%##HL^s:mrt#&>r"ArCr>GPSr?D1er$qXsr@e+'gbIDBJieuSrB1$C
rBgERrD``(rGhdfrK@)OrMfb#rNt@hd4U#'PV2nfrA"7,r&FaCr^$KUrE0#/rGha^rIb'*rJTHjb79+6
RL]-(r=Jl>r=o5I!#PSQr?(t_r$M@kr@7argan%=Jii!SrB1$CrBgERrD``(rGhdfrK@)OrMfb#rNt@h
q_!IQJhH:?r@e+(rA4@3rB^BTrE0#/rGha^rIb'*rJTHjoaZQ`Je%5Zq%*E8r"ArBr>5DOr?(t_r$M@k
r@7argaqnUJieQGofN+7rBL6Ir(6idrF,YErIY!2r1O"frNZ=.gpcN#JhDX-q_%h#rA"7,r&O^ArCd)k
rFGkHr-SBprJCK2gl:>(Je!ABq%*E8r"ArBr>5DOr?(t_r$M@kr@7argaq8CJiecMrB1*Es$-HKr(6id
rF,YErIY!2r1O"frNZ=.gpblfJhE'9r@e+(rA4@3rB^BTrE0#/rGha^rIb'*rJTHjd11a<PRdL"r=Jl>
!#5DHr>5DOr?(t_r$M@kr@7argapW1JifD_rB1$BrBgEPrD3Dr!*]>6rH8'jr/LZ@rL<bWrLi)BJhDX-
j"C9`r@n1+r&=R;rC6`^rEB/1r,)CSrHS9erHmIMq[S2fJe%#Tq%*E8r"8l@r>,>Lr>bbXr$)(br?_7d
i$\1ZJieQGmlUJ1rBC0Hr($]]rEB/4rH8'jr/LZ@rL<bWrLi)Bmk02EJhH^Kr@e+'rA4@1rB:*KrD<Gr
rFGhCrH/!_rHeEhi-ac!Je!ABq[WE4r=Jl=r=f,Fr>GPRr?(q]r?V=fq'P#Ij#_iSJiionrBC0Hr($]]
rEB/4rH8'jr/LZ@rL<bWrLi)Bh(F:3LbAWZs"OI,rA4@1rB:*KrD<GrrFGhCrH/!_rHeEhi-a,dJe!eN
q%*E8r"8l@r>,>Lr>bbXr$)(br?_7di$Zo6Jif2YrB1$BrBgEP!)NSirEB/4rH8'jr/LZ@rL<bWrLi)B
b:\B!RP+Olr@n1+r&=R;r^HlWrD<GrrFGhCrH/!_rHeEhi-^+dJe$fNq%*E8r"8l@r>,>Lr>bbXr$)(b
r?_7di$\C`JieQGkr\i+rB:*Er'gQVrDWZ#rFc(Kr-J<krIt3*gkbVUJhDX-mk4Plr@n1*r&+F6rBU<P
rD<Gpr*TD4rFabsmgapZJe%G`oags4r=]&Cr>,>Lr>YYTr?(hXg`boDJieQGq`Fa=rB:*Er'gQVrDWZ#
rFc(Kr-J<krIt3*gkauCJhDX-r@e+'rA+:.rAsmBrCHl`rE/u)rF>e=fP0.OJe!SHq[`Q7r"8l?r=o2G
r>GPQr#P_Xq&nH9f/nRGN][2%rB:*Er'gQVrDWZ#rFc(Kr-J<krIt3*gka?1JhE9?r@e+'rA+:.!':*?
rBU<PrD<Gpr*TD4rFabsb79+6RL]!$r"8l?rY,>Hr>,>Lr>YYTr?(hXg`_82Jii!SrB1$ArBU9LrC[#e
rE]A7rGha]rI=d"rJ00aq_!IQJhH:?r@e+'rA+:.rAsmBrCHl`rE/u)rF>e=fP1!gJe!ABmgf"$r"8l?
r=o2Gr>GPQr#P_Xq&nH9mlQ+_Jiiciq)nU=rBL3HrC?f[rDWZ!rF5\;rG;FNrG^P3kq7Q?JhI'Uq(M\#
rA"4+rAX[:rBU<OrCm,crD`_rrE%cVispYNL(=.moags3r=Su@r=o2Gr>5ALr>O0)h)g3MN'$hts#pBF
rBL3HrC?f[rDWZ!rF5\;rG;FNrG^P3f.MY-OtQP`r@n1)r%n:1rB'sCrC?f[r)!>krDrkugfVr7Je*YJ
r"&i?rXo)Br=o2Gr>>GMr>PVRfGr'rJifPcq)nU=rBL3HrC?i\!)3>irEK50r+GtErGVXRgi7ouJhH4=
q(M\#rA"4+rAX[:rBU<OrCm,crD`_rrE%cVq[\8hJe-ZJr"/f=r=f,Dr>,>Kr#,GOr>XB/ofIaeJiiQc
q)nU=rBL3HrC?f[rDWZ!rF5\;rG;FNrG^P3mk02EJhHjOq(M\#rA"4+rAX[:rBU<OrCm,crD`_rrE%cV
kmr@VJe.;\r"/f=r=f,Dr>,>Kr#,GOr>XB/j#hoUJiruprBC0Er'C9LrCHl\rDEMor)io%rEe,`h(O@5
LbJWZs"OC+r%n:/rAaa;rBL6Ir'gQSrCPX6f+3HDJe.bjr=Su@r=f,Dr>#)Ce/-LpJio8[rB:*CrBL3G
!(?fSrCHl\rDEMor)io%rEe,`b:eH#RP4IjrA"4+rAFR6!''p=rBL6Ir'gQSrCPX6Je*GDf+7cjr=Su@
r=f,Dr>#)Ce//!EJinWIkreo-rBC0Er'C9LrCHl\rDEMor)io%rEe,`oe1nMJhQRGq(Vb%r%n:/rAaa;
rBL6Ir'gQSrCPX6mgk!\Je.)Vr"/f=r=]&Br=o2Fp_M?qkraP[JiromrB:*CrBL3GrC$TTrCm/erDrhu
rEK5,fO*YlJhM^/q(Vb%r%n:/rAaa;rBL6Ir'gQSrCPX6h%,)JJe._hr"/f=r=]&Br=o2Fp_M?qf0=jO
MEh&)rB^?JrC$TRrCHl[rD!2drDM-Dd4p5-O>6\hpbMn-r\aX4rAaa:rB1!ArBJdsb7B18Q4NU!q@N]>
q%EW>b7oOmJj8-WrBU<Ir'L?MrC6`VrCd)`r)!>ie5Q6!Jh_j3jY?]hpbVk+rAOU6rAsm>r'('De3N[;
Je*GDlOWV!q%<E8r=d?gmluCgJj8cirBU<Ir'L?MrC6`VrCd)`r)!>ie5PTdJh_j3pG)V%pbVk+rAOU6
rAsm>r'('De3N%)Je*GDr=AN3q%<E8r=d?gh*6KUKKoK%s$6NKr'L?MrC6`VrCd)`r)!>ie5OsRJh`-;
rA+=-r%n:/rAOU6rAsm>r'('De3MClJe*qRoFM!7q@WN9r=d?gb<LSCQ9Y=5rB^?JrC$WS!(QoXrCd)`
r)!>ie5LrRJhc.;rA+.(rAFO3rAaa:rB1!ArBJdsq[\8hJe-rRoFUg1q%EW>b7sV<Jjk8[lUCV=r($QR
rC[#]peC]^e5,NjJi/-;nMU,#r&=F2q)\:5copV*Je<SHl4NP!`tRK%Jjk8[rC-NOr($QRrC[#]peC]^
e5+mXJi/3=s#0a4r&=F2q)\:5cootmJe<SHr"8H3`tQihJjkbiq*t9P!(crWrC[#]peC]^e5+7FJi/iO
q)8.0qD\I7q)\:5colsmJe?ECnIikUqaH**Jjnciq*t9Pq+1HVrCco[rD(j<oeh=YJi2jOq)8.0q)J12
pcQndmh(-`Je@&UnIikUktcn,Jku,:lqmXXrDL[7j#quWJj'&qlot50a$AGoJeNeNrtMOKf2$uoMGO%E
oMGK`rDL[7d63(EO?N2!qEF^>a$@f]JeOF`m1d8KJkptohbWT8rDEMka&DjuJj"]KjZVroq*2nbob2oj
JeRG`WYFntJkptonPALJrDEMka&D4cJj"]KpH@k,q*2nbitI"XJeS(rWYF8qJmO%8mU!Y8f1CQcJk>T+
^IlliJes"TqA6m`b?fd,JmJF`^L)RaJk=*V^InA>Jes"TckjG6oj35VJmR#7^L-G$Jk:Pcge#7Qknepf
Jf!D_^DQ!;JmO%8k[)#2h+<2iJk>B%^Im)oJes"ToG>7Zd;jhZJo\AAb?0?uJlo`hJfK@^L`H;4JoZH`
NcOepJlmV,PZ[AoJfK@^RN1R4JoZH`TQ9'pJlmV,VHDXoJfK@^X;oi4JoZH`Z?">pJlmV,\6-ooJfK@^
^)V`\Jr#5=qe:XrJn^6Zoceu3Jg-F'mtcROJr#kOl"P``Jn^llj!'(!Jg.'9h2$Z=Jr$Laf4fhNJn_N)
d3=/dJg.]KbD:b+Jr%-sJn]gNLhZ`1Jg,djN[".iJt[diPbIPoJpi6!RXOEKJgc4!TIAioJt[diVP2go
Jpi6!XF8\KJgc4!Z7++oJt[di\=q)oJpi6!^3tS]JgcF'qk8V8Jt\3uomMF?Jpil3mjWi;Jgm-;l(N^&
Jt\j2j*cN-JpjMEh'mq)JgmcMf=6FBK"/+rd>ig=Jr[@$b:\B!JhFbiK"-EBLq*>BJrYGCNfNcbJhDX-
PV2F7K"-EBR^hUBJrYGCTT8%bJhDX-VCp]7K"-EBXLQlCJrbMEZB*BcJhDX-\1YtJK$/bh^<;,"Jt@di
q_Ng[JhrECouhs1K$0D%n",-&JtAF&kqdoIJhs&Uj3*%tK$1%7h4B4iJtB'8f/&"7Jhs\gdE@-bK$1[I
bFX<WJtB]JJhr!7Lbnq^K%bh1NnX0+JuXF&PcF12JiA9?RQ'KbK%bh1T\AG+JuXF&VQ/H2JiA9?X>ebb
K%bh1ZJ*^+JuXF&\>m_2JiA9?^,LYtK%c%7ql57JJuXj2of%I]JiAoQn)]/_K&rH_l*>oHK!M&Tj#VcQ
Ji]bih;s7MK&s)qf<U"6K!M\fd5uqAJigJ(bN4?;K&s`.K!L!6LpHn>JieQGN]ZpqK&qUGPi_A>K!L!6
R^20>JieQGTKD3!K'IsQVX!!GK!p9>XL?_CJinWIZ96P"K'IsQ\E_8GK!p9>^:&VUJiniOqs&duK'JB]
osTI\K!poPmlZ1aJioJal0<lcK'K#oj0jQJK!qPbh)p9OJip+sfBn1WK'fl2dC=e<K"/>#b<:G?Jj$h2
K'e0WM!b)LK"-EBNk"aFJj"]KPWeL&K'e0WRdK@LK"-EBTXa#FJj"]KVENc&K'e0WXR4WLK"-EBZFJ:F
Jj"]K\38%&K'e0W^?pN^K"-WHq`TNoJj#,Wp$RG"K'nlkn%"%\K"7>\krjV]Jj#bij6hNeK'oN(h78-J
K"7tnf0+^KJj$D&dI)VSK'p/:bIN58K"8V+Jj"]KLctY'K'n6YNpcSNK"6KDPe$6HJj+cMRQg!(K'n6Y
T^LjNK"6KDVRbMHJj+cMX?P8(K'n6YZL6,NK"6KD\@KdHJj+cM^-7/:K'nH_qmh<hK"6oPofdskJj,D_
n*YeqK'o)ql+)DVK"7Pbj$&&YJj-%qh<om_K'o`.f=?LDK"81td6<.GJj-\.bO0uMK'pA@K"6KDLq3CH
Jj+cMN^!.(K'n6YPj\"NK"6KDR^qZHJj+cMTK_E(K'n6YVXE9NK"6KDXLZqHJj+cMZ9H\(K'n6Y\F.PN
K"6KD^:AhZJj+uSJ,~>

%%EndBinary
grestore % PSGState
newpath % image
59.517 21.6 mo
54.369 21.6 50.058 19.89 46.575 16.497 cv
43.083 13.095 41.346 8.82 41.346 3.672 cv
41.346 2.403 41.463 1.179 41.697 0 cv
76.806 0 li
77.049 1.251 77.184 2.556 77.184 3.924 cv
77.184 9.072 75.528 13.302 72.207 16.614 cv
68.886 19.935 64.656 21.6 59.517 21.6 cv
gsave % PSGState
clp
[1 0 0 -1 0 305 ] concat
/0 /CSA get_res setcolorspace
[36.1878 0 0 22.1085 41.1871 283.147 ] concat
snap_to_device
Adobe_AGM_Image/AGMIMG_filter currentfile /ASCII85Decode filter /RunLengthDecode filter ddf
<<
/ImageType 1
/Width 151 
/Height 92 
/ImageMatrix[151 0 0 -92 0 92 ]
/MultipleDataSources true
/BitsPerComponent 8 
/Decode[0 1 0 1 0 1 ]
/DataSource [
[AGMIMG_filter 151 string /readstring cvx /pop cvx] cvx
[AGMIMG_filter 151 string /readstring cvx /pop cvx] cvx
[AGMIMG_filter 151 string /readstring cvx /pop cvx] cvx
]
/NComponents 3 
/HostSepColorImage false 
/SkipImageProc {false}
/Operator /image
>>
%%BeginBinary: 1
img
K$3E%R[hcqZ7`[?b0-L%igbjqqC[@Pn1KpJfZU=c^mr:pW%Qi6OLOh@JrTMaN%3^7UpnCR]T'+Se1-e7
m'hSUrjRT@k)Go]c7662[^XM@SrMh]L+<.qJt_S*Q@%//XsLb-`hB6&hKt6/p*G;:oHf*_l(OPmd<i/F
\L#ClTqUImM0o(FJgKn4PDIkIX(]:^_]Pg!gPCrIo4W_hpLoL-h]JYMa,%BAY@uE-QQPRMJr'D^KkTU^
SKH-![>;8Ic"N\^jWB4!rGdF/m;\FneQ8ml]c+n1V/b?nNE>flJf=8"JoU$pRTIm<Z5U7lb&O+pi`Ct<
qAOr(n/@KsfNtUL^du?XW"n&nOC%NLJk5W,N"t4bUgD)J]L]4se.n;bls>9Mra(:Lk")$Xc5!`_[SP.2
Siu0JL(aG\Jktc0Q9Eb]XqJD\`_WF,hE?i]p(DrioFcaOktda2d64cJ\J!%RTgdruM)G,@Je7D_P==+m
X#7[M_[raXgI72mo/2+WpGIm@h[lSPa$mWuY;Of@QOrLJJj96!Ke_^ESIWpT[6M)abqYeEjUR"TrBGlu
m6?mkeM43:]ai%HV*EfkNA:,:Je%D_Jir9[RP)u?Z4=DTaul@[i\$'?q@8)en.(XEfK?2e^b3M7W".QE
O?E+eJhHdMN"4_TUcc[[]IpB?e..fTloTe\r]>fdjt<27c476D[QD_dShB+7L(=/DJii?]Q7g]?Xq&,T
`]L"YhCad?p'uZaoF?I7krY=dd4V^7\IQbDTf_6dM(\W7Je%8[P<7DYX"M1?_[`UTgH1KYo.GVIpF_C7
h[ZGDa#gpdY:e<7QO`@DJiirnKeDL?SIWpT[6(fYbq>S?jUR"TrB#Tmm5pUdeLn!7]ai%DV*!NdN@so7
Je%D_Jii3YRP)u?Z4=DTauc:Yi\$'?q@8)en.(XDfK6,d^b3M7W".QDO?<%dJhHdMN"4_TUcZUY]IpB?
e..fTloTe\r]>fdjt<27c476D[QD_dShB+7L(=/DJii?]Q7g]?Xq&,T`]L"YhCad?p'uZaoF?I7krY=d
d4V^7\IQbDTf_6dM(\W7Je%8[P<7DYX"M1?_[`UTgH1KYo.GVIpF_C7h[ZGDa#gpdY:e<7QO`@DJiirn
KeDL?SIWpT[6(fYbq>S?jUR"TrB#Tmm5pUdeLn!7]ai%DV*!NdN@so7Je%D_Jii3YRP)u?Z4=DTauc:Y
i\$'?q@8)en.(XDfK6,d^b3M7W".QDO?<%dJhHdMN"4_TUcZUY]IpB?e..fTloTe\r]>fdjt<27c476D
[QD_dShB+7L(=/DJii?]Q7g]?Xq&,T`]L"YhCad?p'uZaoF?I7krY=dd4V^7\IQbDTf_6dM(\W7Je%8[
P<7DYX"M1?_[`UTgH1KYo.GVIpF_C7h[ZGDa#gpdY:e<7QO`@DJiirnKeDL?SIWpT[6(fYbq>S?jUR"T
rB#Tmm5pUdeLn!7]ai%DV*!NdN@so7Je%D_Jii3YRP)u?Z4=DTauc:Yi\$'?q@8)en.'s~>

%%EndBinary
grestore % PSGState
newpath % image
44.7485 55.494 mo
24.4729 55.494 li
24.7027 54.0488 24.822 52.4172 24.822 50.598 cv
24.822 44.991 23.544 40.68 20.979 37.683 cv
18.414 34.677 14.724 33.174 9.9 33.174 cv
6.255 33.174 3.123 34.164 .504 36.135 cv
.504 33.165 li
2.574 31.824 4.779 30.834 7.119 30.222 cv
10.116 29.43 13.833 29.034 18.252 29.034 cv
26.613 29.034 33.147 31.05 37.872 35.091 cv
42.597 39.132 44.955 44.694 44.955 51.777 cv
44.955 53.0548 44.8855 54.2933 44.7485 55.494 cv
gsave % PSGState
clp
[1 0 0 -1 0 305 ] concat
/0 /CSA get_res setcolorspace
[45.055 0 0 26.9147 .206174 249.264 ] concat
snap_to_device
Adobe_AGM_Image/AGMIMG_filter currentfile /ASCII85Decode filter /RunLengthDecode filter ddf
<<
/ImageType 1
/Width 188 
/Height 112 
/ImageMatrix[188 0 0 -112 0 112 ]
/MultipleDataSources true
/BitsPerComponent 8 
/Decode[0 1 0 1 0 1 ]
/DataSource [
[AGMIMG_filter 188 string /readstring cvx /pop cvx] cvx
[AGMIMG_filter 188 string /readstring cvx /pop cvx] cvx
[AGMIMG_filter 188 string /readstring cvx /pop cvx] cvx
]
/NComponents 3 
/HostSepColorImage false 
/SkipImageProc {false}
/Operator /image
>>
%%BeginBinary: 1
img
!9F+3rQG/KrLs.FrGhdBrD3A\rBL3BYrflc!3lF#rLEhGrI"NWrE0"hrB:*:rA"4'mOj8I!&jd3r@n1#
r?hFbr>Y\Nr=f,@r=>e9aUS=3rRq.mrO;a!r.t;krEfFurC-ZLr&j4*N&q$DrM][b!0-u;rI"NWrE0"h
rB:*:rA"4'V_67I!&jd3r@n1#r?hFbr>Y\Nr=f,@r=@cqOU_BPrRq.mrO;g#s.T@HrGhdBrD3A\rBL3B
U-$gc!3lF#rLEhGrI"NWrE0"hrB:*:rA"4'h_(3I!&jd3r@n1#r?hLdruh7Zr>,>Fr=Jo<Qk%aY!9F+3
rQG/KrLs.FrGhdBrD3A\rBL3Bg,kcc!3lF#rLEhGrI"NWr`B/&rCHlMrAFO.r%FEih(A[crA4C+r@@gn
r#kqWr>,>Fr=Jo<cjl]Y!9F+3rQG/KrLs.FrGhdBrD3A\rBL3BP<7bc!3lF#rLEhGrI"NWrE0"hrB:*:
rA"4'cn;.I!&jd3r@n1#r?hFbr>Y\Nr=]/BrXf#=M%8\Y!9F+3rQG/KrLs.FrGhdBrD3A\rBL3Bb<)^c
!3lF#rLEhGrI"NWrE0"hrB:*:s"XO.r%EmZln/8rrA4C+r@@gnr#kqWr>,>Fr=Jo<_%*XY!9F+3rQG/K
rLs.FrGhdBrD3A\rBL9Ds#brrnN-`TrM][brJgc'r+Z+3rCHlMrAFO.r%Gl=Zn;>:rA4C+r@@gnr#kqW
r>,>Fr=Jo<q$qudp'q)`rRq.mrO;a!r.t;krEfFurC-ZLr&h5G`&dt'rM][brJgc'r+Z+3rCHlMrAFO.
r%IIjLFrQbrA4C+r@@gnr#kqWr>,>Fr=Jo<V[gfY!9F+3rQG/KrLs.FrGhdBrD3A\rBL3BkrXhc!3lF#
rL<kIrf-l(r+Z+3rCHlMrAFO.r%Fs#c7T)TrA4C+r@@gnr#kqWr>,>Fr=Jo<h[YbY!9F+3rQG/Ks.TId
r.t;krEfFurC-ZLr&g]8dlRQ6rM][brJgc'r+Z+3rCHlMrAFO.r%Hq[Q7`.qrA4C+r@@gnrZM4`r>Y\N
r=f,@r=>8*fF@oBrRq.mrO;a!r.t;krEfFurC-ZLr&i[pRl^VSrM][brJgc'r+Z.4!*K1jrB:*:rA"4'
QnI2I!&jd3r@n1#r?hFbr>Y\Nr=f,@r=@6bTFLt_rRq.mrO;a!r.t;krEfFurC-ZLr&g0)i]@.ErM][b
rJgc'r+Z+3rCHlMrAFO.r%HDLV(Ma+rA4C+r@@gnr#kqWr>,>F!"f,@r==_pk7.LQrRq.mrO;a!r.t;k
rEfFurC-ZLr&i.aW]L3brM][brJgc'r+Z+3rCHlMrAFU0s"XF)M(\-I!&jd3r@n1#r?hFbr>Y\Nr=f,@
r=?^SY7:QnrRq.mrO;a!r.t;krEfFurC-ZLr]L3CKKJ]c!3lF#rLEhGrI"NWrE0"hrB:*:rA"4'_(N)I
!&jd3r@n1#r?hFbr>Y\Nr=f,@r=A]6Je%Ja!9F+3rQG/KrLs.FrGhdBrD3A\rBL3BYrflc!3lF#rLEhG
rI"NWrE0"hrB:*:rA"4'mOj8I!&jd3r@n1#r?hFbr>Y\Nr=f,@r=>e9aUS=3rRq.mrO;a!r.t;krEfFu
rC-ZLr&j4*N&q$DrM][b!0-u;rI"NWrE0"hrB:*:rA"4'V_67I!&jd3r@n1#r?hFbr>Y\Nr=f,@r=@cq
OU_BPrRq.mrO;g#s.T@HrGhdBrD3A\rBL3BU-$gc!3lF#rLEhGrI"NWrE0"hrB:*:rA"4'h_(3I!&jd3
r@n1#r?hLdruh7Zr>,>Fr=Jo<Qk%aY!9F+3rQG/KrLs.FrGhdBrD3A\rBL3Bg,kcc!3lF#rLEhGrI"NW
r`B/&rCHlMrAFO.r%FEih(A[drA=I-r@Impr#u"Xr>5DGr=Sf8eIJ5^!9F+3rQG/KrLs.FrGhdBrD3A\
rBL3BP<7bc!3lF#rLEhGrI"NWrE0"hrB:*:rA"4'cn;.I!&sj5rA"7%r?qLdr>Y\Or=]/CrXno9NXk4^
!9F+3rQG/KrLs.FrGhdBrD3A\rBL3Bb<)^c!3lF#rLEhGrI"NWrE0"hrB:*:s"XO.r%EmZln/8srA=I-
r@Impr#u"Xr>5DGr=Sf8`X]0^!9F+3rQG/KrLs.FrGhdBrD3A\rBL9Ds#brrnN-`TrM][brJgc'r+Z+3
rCHlMrAFO.r%Gl=Zn;>;rA=I-r@Impr#u"Xr>5DGr=Sf8rXOMip'q)`rRq.mrO;a!r.t;krEfFurC-ZL
r&h5G`&dt'rM][brJgc'r+Z+3rCHlMrAFO.r%IIjLFrQcrA=I-r@Impr#u"Xr>5DGr=Sf8X:E>^!9F+3
rQG/KrLs.FrGhdBrD3A\rBL3BkrXhc!3lF#rL<kIrf-l(r+Z+3rCHlMrAFO.r%Fs#c7T)UrA=I-r@Imp
r#u"Xr>5DGr=Sf8j:7:^!9F+3rQG/Ks.TIdr.t;krEfFurC-ZLr&g]8dlRQ6rM][brJgc'r+Z+3rCHlM
rAFO.r%Hq[Q7`.rrA=I-r@ImprZV:br>Y\Or=f,Ap^`o*fF@oBrRq.mrO;a!r.t;krEfFurC-ZLr&i[p
Rl^VSrM][brJgc'r+Z.4!*K1jrB:*:rA"4'QnI2I!&sj5rA"7%r?qLdr>Y\Or=f,Ap^bmbTFLt_rRq.m
rO;a!r.t;krEfFurC-ZLr&g0)i]@.ErM][brJgc'r+Z+3rCHlMrAFO.r%HDLV(Ma,rA=I-r@Impr#u"X
r>5DG!"o2Bp^`Apk7.LQrRq.mrO;a!r.t;krEfFurC-ZLr&i.aW]L3brM][brJgc'r+Z+3rCHlMrAFU0
s"XF)M(\-I!&sj5rA"7%r?qLdr>Y\Or=f,Ap^b@SY7:QnrRq.mrO;a!r.t;krEfFurC-ZLr]L3CKKJ]c
!3lF#rLEhGrI"NWrE0"hrB:*:rA"4'_(N)I!&sj5rA"7%r?qLdr>Y\Or=f,Ap^d?6Je%Ja!9F+3rQG/K
rLs.FrGhdBrD3A\rBL3BYrflc!3lF#rLEhGrI"NWrE0"hrB:*:rA"4'mOj8I!&sj5rA"7%r?qLdr>Y\O
r=f,Ap^aG9aUS=3rRq.mrO;a!r.t;krEfFurC-ZLr&j4*N&q$DrM][b!0-u;rI"NWrE0"hrB:*:rA"4'
V_67I!&sj5rA"7%r?qLdr>Y\Or=f,Ap^cEqOU_BPrRq.mrO;g#s.T@HrGhdBrD3A\rBL3BU-$gc!3lF#
rLEhGrI"NWrE0"hrB:*:rA"4'h_(3I!&sj5rA"7%r?qRfruq=[r>5DGr=Sf8SIX9^!9F+3rQG/KrLs.F
rGhdBrD3A\rBL3Bg,kcc!3lF#rLEhGrI"NWr`B/&rCHlMrAFO.r%FEih(A[drA=I-r@Impr#u"Xr>5DG
r=Sf8eIJ5^!9F+3rQG/KrLs.FrGhdBrD3A\rBL'>QTO1g!3uL%rLNnIrI+TXrE0"irB:*:rA"(#e1RRM
!&sj5rA"7%r?qLdr>Y\Or=]/CrXnc5Oq-Xb!9F+3rQG/KrLs.FrGhdBrD3A\rBL'>cTA-g!3uL%rLNnI
rI+TXrE0"irB:*:s"XO.pb.UZln/8srA=I-r@Impr#u"Xr>5DGr=SZ4aptTb!9F+3rQG/KrLs.FrGhdB
rD3A\rBL9Dq`KZrnN-`UrMfadrJpi)r+Z+3rCQrNrAFO.pb0T=Zn;>;rA=I-r@Impr#u"Xr>5DGr=S]5
!"X\lp'q)`rRq.mrO;a!r.t;krEfFurC-ZLpcPrG`&dt(rMfadrJpi)r+Z+3rCQrNrAFO.pb21jLFrQc
rA=I-r@Impr#u"Xr>5DGr=SZ4YR\bb!9F+3rQG/KrLs.GrGhdBrD<G^rBU9Dq)n1/N&q$ErMfad!07&=
rI+TYrE0"irBC0<rA+:)q(Jp(c7T)UrA=I-r@Impr#u"Xr>5DGr=SN0ljf-f!9F+3rQG/Ks.TIdr/(Al
rEfG!rC6`Nr&sj<W]SZk!3uL%rLNnIrI+TYrE0"irBC0<rA+:)q(Ln`Q7`.srAFO/r@RsqrZV:br>bbP
r=o2Br=G>,fFIuCrRq.mrO;a!r/(AlrEfG!rC6`Nr&sj<i]EVk!3uL%rLNnIrI+TYr`B/&rCQrOrAOU0
r%Rq"TJ#%Q!''p7rA+='r?qLdr>bbPr=o2Br=I<dTFV%`rRq.mrO;a!r/(AlrEfG!rC6`Nr&sj<RlfUk
!3uL%rLNnIrI+TYrE0"irBC0<rA+:)q(LAQV(Ma-rAFO/r@Rsqr#u"Yr>5DH!"o2Br=Ferk77RRrRq.m
rODg"r/1GnrEoM"rC?fPr'('BcTJ3i!3uL%rLNnJrI+TZrE9(krBC0=s"j[2pb7[\ln8>urAFO/r@Rsq
r$)(Zr>5DHr=Su>_%3^[!9F+3rQG/LrLs.HrGqjDrD<G_rB^EHs$$BELck2i!3uL%rLNnJrI+TZrE9(k
rBC0=rA44&`@nSO!''p7rA+='r?qLer>bbPr=o2Br=Jc8Je.Pc!9F+3rQG/LrLs.HrGqjDrD<G_rB^?F
rB7PN`&n%)rMfadrK$o*r+l76rC[#PrAX[2pb;7lLG&WerAFO/r@Rsqr$)(Zr>5DHr=Su>V[pl[!9F+3
rQG/LrLs.HrGqjDrD<G_rB^?FrB9O1N'%*FrMfad!0@,?rI+TZrE9(krBC0=rA44&X"VaO!''p7rA+='
r?qLer>bbPr=o2Br=IisOUhHQrS%4orOMs's.fLLrH/!IrDWYdrC$QLrBR5Edm!i;rMogfrK-u,r+u=8
rCm/TrAjg6r%n:,j"ZiS!''p7rA+='r@%Xhs!%C]r>>JIr=]&@p^j,0fFIuCrS%4orOMm%r/1GprF5_(
rCQrUr'C9HhERJo!3uL&rLWtLrI4Z\r`T;*rCm/TrAjg6r%n:,S2&hS!''p7rA+='r@%Rfr>bbQr=o2C
r=Sf9faj_d!9F+4rQP5NrM0:JrH/!IrDWYdrC$QLrBQ]6i]dFJrMogfrK-u,r+u=8rCm/TrAjg6r%n:,
e1mdS!''p7rA+='r@%Rfr>bbQr=f5ErY#/Ap^iT!k77RRrS%4orOMm%r/1GprF5_(rCQrUr'C9HcTeEo
!3uL&rLWtLrI4Z\rEB.nrBU<As#'g6r%n:,NA9cS!''p7rA+='r@%Rfr>bbQr=o2Cr=Sf9aq(Zd!9F+4
rQP5NrM0:JrH/!IrDWYdrC$WNs$?TKLd1Do!3uL&rLWtLrI4Z\rEB.nrBU<ArAFL/rA)>HZnVP?rAFO/
r@Rsrr$)(Zr>>JIr=]&@q%*N;K+IYd!9F+5rQY;QrMBFPrH\?RrE0"orCQoWrC41``'j[2rMoghrK7&/
r,2I>rD3A\rB:*>r&=R4nhl1[!''p8rA+=(r@%Rgr>tnTr>,>Fr=Z"?aUnO6rS.:qrO`$)r/U`$rFZ"1
rD3A`r($]Tm6ut&!3uL&rLa.QrfR/0r,2I>rD3A\rB:*>r&=R4X#80[!''p8rA+=(r@%Rgr>tnTr>,>F
r=\!"OV%TSrS.:qrO`*+s/#XRrH\?RrE0"orCQoWrC3YQdmX8ArMoghrK7&/r,2I>rD3A\rB:*>r&=R4
j#*,[!''p8rA+=(r@%Xis!.I`r>GPLr=f,BQk@s_!9F+5rQY;QrMBFPrH\?RrE0"orCQoWrC5X4Rmd=^
rMoghrK7&/r,2L?!+,V"rC-ZJrAjd7rAL0'h),0lrAOU0r@\$sr$2.]r>GPLr=f,Bck2o_!9O16rQkGV
rMf^ZrI=c`rF,Y,rDWJfQVZU:!4)R'rLs1RrIb#hrF>e+rCd)XrBU-Ae30Wk!''p8rA4C)r@.Xir?(tW
r>5MMrYG,?Oq[!l!9O16rQkGVrMf^ZrI=c`rF,Y,rDWJfcVLQ:!4)R'rLs1RrIb#hrF>e+rCd)Xs$6TL
pca[#lob>.rAOU1r@\$tr$;4_r>Y\Pr>,#>aqLrl!9O16rQkGVrMf^ZrI=c`rF,Y,rDW\lqbW)EnP9.j
rMogirKI24r,_gHrDiehrC-ZMpccY[ZonCKrAOU1r@\$tr$;4_r>Y\Pr>,&?!#1&!p(IGfrS.:srP&60
r07/0rGMRBrE0"spe\@o`(pB=rMogirKI24r,_gHrDiehrC-ZMpce73LHPVsrAOU1r@\$tr$;4_r>Y\P
r>,#>YS5+l!9a=;rR:__rNQ3jrJLQ"rGMRHrF5\3l!B<T!4)R)rM'@Zrg3S?r-A6VrEoM'rD3Acr(<kY
c:J!rrAX[3r@n1$r$VFer>tnVr>GAIj;3pp!9a=;rR:__s02O-r13eDrHeE[rFc(<r*Q1)dp<$[rN,sm
rKmJ>r-A6VrEoM'rD3Acr(>j<Q:V':rAX[3r@n1$r[7^nr?D1]r>Y\Qp_]P<fG=PNrSIM%rPST<r13eD
rHeE[rFc(<r*S/aRpH*#rN,smrKmJ>r-A9W!,MO?rDielrCm,]Qq?+*!'1!:rA=I,r@Ijor?D1]r>Y\Q
p__NtTGIUkrSIM%rPST<r13eDrHeE[rFc(<r*PXoia)VjrN,smrKmJ>r-A6VrEoM'rD3Acr(>=-V+CYI
rAX[3r@n1$r$VFer>tnV!#bbRp_]#-k8+-^rSd_,rQ5#Kr29L[rJLQ(rH\?ar,^&%WcA*GrN?*rrL<bH
r.4fhrG2@ArEfM-s'#>'M-0+H!'1!;rAFO/r@\!sr?_Cdr?2%[r>i]oY8dQ+rSd_,rQ5#Kr29L[rJLQ(
rH\?arcA*\KQ?U'!42X,rMKO_rK$l-rH8'SrF>e4rEB,%_-"'H!'1!;rAFO/r@\!sr?_Cdr?2%[r>k\R
JfOJ(!9jC?rR_"irOMj(rKmJ?rIFilrH8$ZZ#[d'!42X,rMKO_rK$l-rH8'SrF>e4rEB,%mT>6H!'1!;
rAFO/r@\!sr?_Cdr?2%[r>hdUaW(<ErSd_,rQ5#Kr29L[rJLQ(rH\?ar,_+CN,ep)rN?*r!1WtWrK$l-
rH8'SrF>e4rEB,%Vc_5H!'1!;rAFO/r@\!sr?_Cdr?2%[r>jc8OW4AcrT!k1rQkM]s24cBrMTUbrKR8A
rJUT2rJ@D-dte"2rNH1!rLj+Ur/CT*rH\?_rGMRMr+l7Gj(Xfn!':'<rAOU1r@n4&s"40ur?qOir?ION
fHL=[rT!k1rQkG[r3cL$rLNnOrK$o8r/1H0hM@YW!4;^.rMfagrKmG@rdb'#rH\?_rGMRMr+l7GS8$en
!':'<rAOU1r@n.$r@.[mr?_CebT`](!9sIBrS%4rrPSQ@rMTUbrKR8ArJUT2rJ?ksieRTArNH1!rLj+U
r/CT*rH\?_rGMRMr+l7Ge7kan!':'<rAOU1r@n.$r@.[mr?VFgrZd+@k99ojrT!k1rQkG[r3cL$rLNnO
rK$o8r/1H0c\STW!4;^.rMfagrKmG@rIOomrH%pTs(q^Or+l7GNG7`n!':'<rAOU1r@n.$r@.[mr?_Ce
]csX(!:'OFrSRS*rQY8XrOMm2rMognrM0@cJt__.!4Dd2rN6$qrLa"SrK$o6rIb'!rI2D-[!_p8rAjg8
rAFO0r%S(%r@Imsr@.CfJgg=@!:'OFrSRS*rQY8XrOMm2rMognrM-Hf`1[1=rNcC(rMKOcr0RACrJCK*
rIFiql$\>8!':'=rAX[4rA4@*r@\%"r@7apUF=54!:'OFrSRS*rQY8XrOMm2rMognrM/GIN1g6ZrNcC(
!2famrLa"SrK$o6rIb'!rI1Jhc@#[RrAjg8rAFO0r%S(%r@Imsr@-JLOXL4prT=(9rR_(os3:JZrOMm2
rMognrM,pWe"HcLrNcC(rMKOcr0RACrJCK*rIFiqg3o98!'C-?rAaa6rA=L.s"XI*r@Imtr@4$\fI6gc
rT=(9rR_"mr58KDrNQ7#rMKOgeY/J+!4Dd2rN6$qrLa"Srf7&?rJCK*rIFiqPC;88!'C-?rAaa6rA=F,
r@e+#r@@grbUK26!:0UJrT4"7rR^tnrQ5#UrP/<DrOVp;PITV^!4Mj5rNZ=&rMKLcrL<bPrKI2BrK-r<
d#Or_r&aj<rAaa6r&"@.rA"7)!&+!uN\9KI!:0UJrT4"7rR^tnrQ5#UrP/<DrOVp;bIFR^!4Mj5rNZ=&
rMKLcrL<bPrKI2Bs,d8Br/Z\pm#M!*rAsm:rAOR1rA4C,r@mjs`\+GI!:0UJrT4"7rR^tnrQ5#UrP/<D
rOW!=s1*fmn[JS-rNuO.rN,spr1O"XrKmJHrK7&?r/\[S[#Y&GrAsm:rAOR1rA4C,r@mjsr[rdTp+?@2
rTX:BrSIM)r6P>`rPSTKrOi*?r40)B`4,fVrO)U0rN6$rr1X(ZrL!PJrK@,Ar/g?-LQD?prAsm:rAOR1
rA4C,r@mjsX=hUI!:BaMrTO4ArSRP,rR_"srQtMgrQO?GN6;42rO2[3!4)U0rN6!trMTUirM'7`rL]gU
cCP"urB'g9rAa^6rAOU3oebP^OY[")rTa@FrT4(:s53b.rR_"srQtMgrQLhUe&qa$rO2[3rNcC(r2T^n
rM9CdrLj+]g7FV%!'L3Aq)\I6r\sj9rAOU3oe`$lfJ<NprTa@FrT4"8r7_,$rR:_lrQbAce]XH*!4`!9
rNuO/rN6!trhfaorM9CdrLj+]PFgU%!'L3Aq)\I6r&=R4rAF7)cnh=N!:BaMrTO4ArSRP,rR_"srQtMg
rQL;Fil_>3rO2[3rNcC(r2T^nrM9CdrLj+]bFYQ%!'L3Aq)\I6r&=R4rAFL0qD=$bk;*,*rTsLJrTX:C
r8[b7rSIA*rS,?GWnRB\rO2[4rNc@*rNH1%q5aOqJu\1;r&jd:rAs^6of0WDY;ZIKrTsLJrTX:Cr8[b7
rSIA*rS.>*K%fbKr4)^6rO)U0r36.'rN5mr\>lp9r&jd:rAs^6of2V'JiEB^!:BaOrTa@GrT=%<rSd_3
q:tr'XP1VHr4)^6rO)U0r36.'rN5mrjf4*9r&jd:rAs^6of/^*aYs4erTsLJrTX:Cr8[b7rSIA*rS-De
N8"3>rO)^6rjD^1r36.'rN5mrSuU)9r&jd:rAs^6of1\bOZ*:.q<e.Hs6BXLr9=1DrTF.AQ0$KV!4hp8
rO;a6r3cL1rNjeTQEp9Jp,i:9KK@aH!:K[MrTjFIr9=1DrTF.Ac/kGV!4hp8rO;a6r3cO2!4;^2LU,aA
pc\73]K;cJ!:K[MrTjFIr9=1DrTF.AL?7FV!4hp8rO;a6r3cL1rNj8EV6]kZoK;b-Jii-W!:K[MrTjFI
r9=1DrTF.A^?)BV!4hp8rO;a6r3cL1rNl7(K!OaKpc\73XZN^Jr9j7Fr9XCJmcoDhn`p%_n@8G+XL>LE
lTO>lJir`hr9j7Fr9XCJSEe&Xr42=,rO:IgLUR+Dn3)staZTLhp$M\DrThtuN9^>Or4)F0rO7rucF3%%
b<1nLr9j=Hs6]aNrTfI.e*?kAn@8G+b-mVEm61J4KKRmLnF!sVS*f^Uq7)$dh70=FTKVf4o^.7tipH6G
ZFHa@hE?HRk<8>&XmN.Un@@hoK"10WQT_N8nF#E*K'i*qn@>=([(+FFJj&fjnEuM-`9m')d("k@r&oWp
aZ[6'N:-GNK"91;[69X8o'V+te*aHNQFZBGJj%aLX6uJFkdc;Uh79CGTKV?'K'qXdTt.#1hEHNTk<>F(
Wp\QNK":6YQThT:eF%qVna;RN[(4LHJj/llK'pSF^U]-1r'#]raZd<(N:-GNK"91;[6B^:o'V+te*aHN
QFZBHJj.gNX6uJFkdc;Uh79CHTK_E(K'qXdTt.#1hEHNTk<>F(Wp\QNK":6YQThT:eF%qVna;RN[(4LH
Jj/llJ,~>

%%EndBinary
grestore % PSGState
newpath % image
10.928 55.494 mo
.504 55.494 li
.504 43.947 li
1.269 43.659 2.133 43.506 3.096 43.506 cv
5.751 43.506 7.821 44.253 9.297 45.729 cv
10.773 47.205 11.511 49.275 11.511 51.93 cv
11.511 53.2403 11.317 54.4282 10.928 55.494 cv
gsave % PSGState
clp
[1 0 0 -1 0 305 ] concat
/0 /CSA get_res setcolorspace
[11.5034 0 0 12.4961 .206174 249.264 ] concat
snap_to_device
Adobe_AGM_Image/AGMIMG_filter currentfile /ASCII85Decode filter /RunLengthDecode filter ddf
<<
/ImageType 1
/Width 48 
/Height 52 
/ImageMatrix[48 0 0 -52 0 52 ]
/MultipleDataSources true
/BitsPerComponent 8 
/Decode[0 1 0 1 0 1 ]
/DataSource [
[AGMIMG_filter 48 string /readstring cvx /pop cvx] cvx
[AGMIMG_filter 48 string /readstring cvx /pop cvx] cvx
[AGMIMG_filter 48 string /readstring cvx /pop cvx] cvx
]
/NComponents 3 
/HostSepColorImage false 
/SkipImageProc {false}
/Operator /image
>>
%%BeginBinary: 1
img
!9a=;rR:__rNQ3jrJLQ"rGMRHrF5\3!FE)1XSnpmQi2d=H2VOW?i="':]3ub8c_LDrAX[3r@n1$r$VFe
r>kqXrYteRp_X#Jkl'K=fDWhi\brB(Qi2g?JGjclFo6:]EjP_IrMKO_rK$l-rH8'SrF>e4rEB,%!E_A\
3;k`51&rs+0)R0s-2f%d+T3A[*W$fVkl'K=fDWhi\brB(Qi2g?JGjclFo6:]EjP_IrMKO_rK$l-rH8'S
rF>e4rEB2'"'Jc/3W1r92>o</0)R0s-2f%d+T3A[*W$fVkl'K=fDWhi\brB(Qi2g?JGjclFo6:]EjP_I
rMKO_rK$l-rH8-Us(hRCrEfG+r)j&&3W1r92>o</0)R0s-2f%d+T3A[*W$fVkl'K=fDWhi\brB(Qi2g?
JGjclFo6:]EjP_IrMKUas-rtJr.4fhrG2@ArEfG+r)j&&3W1r92>o</0)R0s-2f%d+T3A[*W$fVl2BZ@
gAT@r_u-q@Vu<1bPl6[AMu8G5M7!5brMfagrKmG@rIOomrH%pTrG;CI!GX[o3;kc61]9$*/c@-s-iG@i
,PNA^l2BZ@gAT@r_u-qAVZ<XnSc+fOO8Y"7M?/R@rNH1!rLj+Ur/CT*rH\?_rGMRMr+c=J3rM&:2Z5H1
0`3O$.K(Xm-2f(_+opm+j8Ra4gAT@r_u-q@Vu<1bPl6[AMu8G5M7!5brMfagrKmG@rIOomrH%pTrG;CI
!GX[o3;kc61]9$*/c@-s-iG@i,6/q_+opm+j8I^1ci(cZ[Jd$%Sc+fOO8Y"7M?/R@rNH1!rLj+Ur/CT*
rH\?_rGMRMr+c=J3rM&:2Z5H10`3O$.K(Xm-2f(_+opp,k5F39fDWtl_u7.EYl1U#VZ!:eT`DM!ZMgp(
VZ!.bQi3!DM>`)*JGjroI/l>,3W1o82>o?/0`<X&/H%'s.JG4jlM]lDhu21*c2>KX\c&c2Wr8gnU\g_b
[JdE0Xo5-qTDY&SO8Xq6KE$K%JGjroI/l>,3W1o82>o?/0`<X&/H%'s.JG4jlM]lDhu21*c2>KX\c&c2
Wr8gnU\g_b[JdE0Xo5-qTDt8WQi3!DM>`)*JGjroI/l>,3W1o82>o?/0`<X&/H%'s.JG4jlM]lDhu21*
c2>KX\c&c2Wr8gnU\g_c[Bfe;rN6$qrLa"SrK$o6rIb'!rI4Wl!'C-?rAaa6rA=F,r@e+#r@@grpF-+-
rT=(9rR_"mr58KDrNQ:$!36!prM07`!4Dd2rN6$qrLa"SrK$o6rIb'!rI4Wl!'C-?rAaa6rA=F,r@e+#
r@@grpF-+.rTX:BrSIP*!8%.prQ5#UrP/<DrOVp;!P#T:[/I9.XSo$oT`(AYQi3-HOo:C>NrY4<48h5=
3;kc52#T6/1&Wfu0**]krTX:BrSIM)r6P>`rPSTKrOi*?r4)j<[f*T3Z2Ld&VYm+cS,J]PPPpXBOSk.>
Nr2!;3rM&:2Z,E11]9',0_@"!0'iK#rT4"7rR^tnrQ5#UrP/<DrOVp;!P#T:[/I9.XSo$oT`(AYQi3-H
Oo:C>NrY4<48h5=3;kc52#T6/1&Wfu0**]krTX:BrSIM)r6P>`rPSTKrOi*?r4)j<\,E`5ZMgp(Vu37e
SGeiRPl6dDOoLOBO8t@>48h5=3;kc52#T6/1&Wfu0**]mrTa@FrT4"8r7_,$rR:_lrQbAcqo\uLrO2[3
rNcC(r2T^n!2TUirM'7`rL`tY!'L3Aq)\I6r&=R4rAF7)q_J6>rTa@FrT4"8r7_,$rR:_lrQbAcqo\uL
rO2[3!4)U0rN6!trMTUirM'7`rL`tY!'L3Aq)\I6r&=R4rAF7)q_J6>rTa@FrT4"8r7_,$rR:_lrQbDd
!6k>`!4`!9rNuO/rN6!trMTUirM'7`rL`tY!'L3Aq)\I6r&=R4rAF7)q_J6>rTa@FrT4"8r7_2&s4@4u
rQtMgrQP/^!4`!9rNuO/rN6!trMTUirM'7`rL`tY!'L3Aq)\I6r&=R4rAF7)q_J6>rTsRLs6BRIrT=%<
rSd_3q:tr'qqCtXrO2[4rNc@*rNH1%q5a7ir&jd:rAs^6of2\)!:BaOrTa@GrT=%<rSd_3q:tr'qqCtX
rO2[4rNc@*rNH1%q5a7ir&jd:rAsm;r&OF0pGW*>rTsLJrTX:Cr8[b7rSIA*rS.5'r4)^6rO)U0r36.'
rN5mrpT"0S!'L'=rAs^6of2\)!:BaOrTa@GrT=%<rSd_3q:tr'qqCtXrO2[4rNc@*rNH1%r2]gtpT"-R
q)eO9pc8",pGW*?q<e.HrTa=FrTO4CrT<_5!4hp8rO;a6!4Dd5rNuO0n$;^NoK24s!:K[MrTjFIr9=1D
rTF.AoAot_q7-C4rO2X3rNuO0n$;^OoK;:u!:K[MrTjFIr9=1DrTF4Cs5rq7!4hp8rO;a6r3cL1rNksu
pc\73k;r\3q<e.HrTa=FrTO4C!9X:CoAot_q7-C4rO2X3rNuO0n$;^OoK;:ur9j@IrpBXMrTie7r42=,
rO;+$lTOMqr]L,Hp$M\DrTie7r42=,rO;+$lTP,-m6(=7p$M\DrTie7r42=,rO;+$p-&+4k</\1p$M\D
rTie7r42=,rO;=*qmPfRk</8%ipH6Gq7,_"d67!eipHQPppoCod67!elg=K7n@@Pgd67!er9`\7n@@Pg
d67Eqp$Ui,n@@Pgh*(EodI,DmmQKVodI,Dms#ngodI,r'o"!.2dI-P8iOR?"dd@,'dCIXgj6lC(dCIXg
o^:T(dCIdkrBAWsdCJC'lorhbdCK!8gHO$QfX^jhd6>tGl+-&hd6>tGqRP7hd6?=Qp[6G>d6<'~>

%%EndBinary
grestore % PSGState
newpath % image
222.747 55.494 mo
212.518 55.494 li
212.559 55.3862 212.6 55.2782 212.643 55.17 cv
213.462 53.082 214.767 50.652 216.558 47.898 cv
218.196 45.432 219.501 43.38 220.464 41.733 cv
221.436 40.095 222.183 38.637 222.705 37.368 cv
223.227 36.099 223.578 34.911 223.767 33.786 cv
223.956 32.67 224.046 31.401 224.046 29.979 cv
224.046 25.731 223.083 22.464 221.139 20.187 cv
219.204 17.91 216.414 16.776 212.769 16.776 cv
209.565 16.776 206.883 17.784 204.723 19.791 cv
202.563 21.807 201.483 24.309 201.483 27.297 cv
201.483 27.963 201.672 28.305 202.05 28.305 cv
202.266 28.305 202.473 28.206 202.662 28.026 cv
202.851 27.837 203.13 27.405 203.499 26.739 cv
204.399 25.317 205.776 24.606 207.648 24.606 cv
209.655 24.606 211.221 25.173 212.346 26.289 cv
213.462 27.405 214.029 28.971 214.029 30.987 cv
214.029 33.084 213.372 34.758 212.067 36.027 cv
210.762 37.296 209.025 37.935 206.856 37.935 cv
204.471 37.935 202.518 37.125 200.988 35.523 cv
199.467 33.921 198.702 31.851 198.702 29.313 cv
198.702 27.072 199.206 24.93 200.214 22.878 cv
201.213 20.826 202.617 19.089 204.399 17.667 cv
206.343 16.173 208.449 15.129 210.717 14.526 cv
212.994 13.932 215.811 13.635 219.159 13.635 cv
225.495 13.635 230.454 15.165 234.027 18.225 cv
237.609 21.285 239.4 25.506 239.4 30.879 cv
239.4 34.983 238.464 38.565 236.601 41.625 cv
235.926 42.669 235.35 43.542 234.864 44.253 cv
234.387 44.964 233.676 45.765 232.74 46.665 cv
231.813 47.556 230.508 48.735 228.834 50.184 cv
227.325 51.491 225.303 53.2613 222.747 55.494 cv
gsave % PSGState
clp
[1 0 0 -1 0 305 ] concat
/0 /CSA get_res setcolorspace
[41.2206 0 0 42.2946 198.4 249.264 ] concat
snap_to_device
Adobe_AGM_Image/AGMIMG_filter currentfile /ASCII85Decode filter /RunLengthDecode filter ddf
<<
/ImageType 1
/Width 172 
/Height 176 
/ImageMatrix[172 0 0 -176 0 176 ]
/MultipleDataSources true
/BitsPerComponent 8 
/Decode[0 1 0 1 0 1 ]
/DataSource [
[AGMIMG_filter 172 string /readstring cvx /pop cvx] cvx
[AGMIMG_filter 172 string /readstring cvx /pop cvx] cvx
[AGMIMG_filter 172 string /readstring cvx /pop cvx] cvx
]
/NComponents 3 
/HostSepColorImage false 
/SkipImageProc {false}
/Operator /image
>>
%%BeginBinary: 1
img
K$2ZeYFMM\gb474q(IWKbfdJcT:FsqJhQXIP0:ee^RUX\ln<rDkqALK]Z\?cO.>hqJhQ(9U=lp,c_lPr
r%`jZfeTS\XP)4'JuAUGKeh%2ZIu&,hku((p8<m*aYLH\SD!)'JuA%7Jhkh2YM#i,go#b%q59**bVHZg
TB,(:K!4^JOu:08^Z:aBm&u#El*$O5]J[ajO6#r:K!4.:U,B;8cfBlBr3(^UfrqD5X>SVoK'E:!KsT15
Z8SL:hs#aWp?@RCag8Q:S2TQpK'D^fK!Wt5Y;W::h!'FTq<<dCbd4c:T/PcsK'`$oP-r69^GhK<m-K>j
l0OkH]X>d=O#Q^tK'_I_U:%A9cSpV<r9T%%g$G`HXL6Y=JiEZfL$d:TZF6R;h`$-Gp,@uuamH[JS@7T>
JiE*VK'h(TYI:@;gc'gDq)=2ubjDmJT=3f>JiE3YP3p3T^UBK;lo0MTkr5'u]^<bJO1+[>JiDXIU@#>T
caS\=r&93dff,quXR4WKK"(`gKf@C<ZL+IThm\3Hp:$#?aZ$fuSF,LKK"(0WJiD1<YO/7Tgp_mEq6u5?
bW!#uTC(^KK"(9ZOuUB>^[7BTm'hSUl*m*@]K!t!O6uSKK"'^JU,]M>cg?MTr3q9efsdt@X>ni!K'iR)
Kt#I=Z8eX>hsH$_p?djKag\i@S2f^!K'i!nK"'7=Y;iF>h!K^\q<a'KbdY&@T/bp!K'i*qP./B=^GqQ>
m-TDll0XqK]XPp@O#Ze!K'hOaU:7M=cT$\>r9]+'g$PfKXLHe@JiN`hL$d:TZF?X=h`-3Ip,J'!amH[K
S@@Z@JiN0XK'h(TYICF=gc0mFq)F9!bjDmKT=<l@JiN9[P3p3T^UKQ=lo9SVkr>.!]^<bKO14a@JiM^K
U@#>TcaS\=r&B9fff6#!XR4WKK"(`gKfII>ZL+IThm\3Hp:$#@aZ-m!SF,LKK"(0WJiM7>YO/7Tgp_mE
q6u5@bW**!TC(^KK"(9ZOuUB>^[7BTm'hSUl*m*@]K!t!O6uSKK"'^JU,]M>cg?MTr3q9efsdt@X>ni!
K'iR)Kt#I=Z8eX>hsH$_p?djKag\i@S2f^!K'i!nK"'7=Y;iF>h!K^\q<a'KbdY&@T/bp!K'i*qP./B=
^GqQ>m-TDll0XqK]XPp@O#Ze!K'hOaU:7M=cT$\>r9]+'g$PfKXLHe@JiN`hL$[4RZF6R;h`-3Ip,J&u
am?UIS@7T?JiN0XK'_"RYI:@;gc0mFq)F8ubj;gIT=3f?JiN9[P3KpL^U0?7lo0MTkr5'q]]mJDO0nO<
JiDXIU?T&Lca8J7r&93dff,qqXQe?DK!bNaKf@C<ZK.hBhlq^:p99N7aYp`kSE/k;K!=[IJi;+:YN2VB
gouC7q65`7bVlrkTB,(;K!=dLOuC6:^Y+t,m&5N7l):%,]JIU]O4j0(JuIY,U,0/4ce4*,r2>4Gfr1o-
X>JP^K%^.VKrECtZ8A@6hogVpp</GcadfpsS2'3MK$3T*Jt1>\Y;)q0grk;mq9+Ycbac-sT/#EMK$3]-
P+9I\^G2'0m)t"(l-#Nc]U["sO"p:9K"'^JU5cO>cRai&r3q9efsdu@XGtg_Jh6mPKt#I=ZAkZ>h^j@1
p+234ag\j@S;l\_Jh6=@Jt^\fYC*6qga@\$q'V&nbb;LnT7#]IJg^(9P+fgf^O2AqlmIB4kpMpn]V3An
O*pRIJg]M)U5614cY8/Kr#pY8fcdAOXGGJBJnb3uKd"heZA><4he@[Vp1]L0aW\6OS;??BJnaXeJg&Ve
YApI[gfT/1q,iLnbT"$2T5ipoJlqPFOrVC[^N#T[lr\jAkuaAo]H"t3O)aeoJlpu6U)^N[cX2H7r(;Q5
fh/7\X;BJqJm\LaKhB`bZ59;Qhd:tBp0WeOa\',\S/:?qJm[qQJkFNbY8=)Qgf&f'q,</9bWrWOT+p?b
JlD2<P!HrN^D*"Klr/L7ku4$9]KjLONth4bJlCW,U-Q(NcP2-Kr)82Gfi+n9X?bAOJe\1uKhp)lZ9>!H
h\1STp(NE]a\TK2S3?$KJeRPcJksllY<AdHg_58Qq%JW]bYP]2T0;6KJeRYfP#K:t^He,NlkG$cknKRb
]Mlj9O$N=OJe[/XU/SEtcTm7Nr"O_sfbCGbXAd_9JjB<#KbVoKZ<sD7hb&Jmp.C;]aV_TrS6tGOJkGH'
Jf)uSY@"27ge*/jq+?M]bS[frT3pYOJkGQ*Or2+S^N,Z]lr\jAkuaAo]H"t4O)jkpJlpu6U)^N[cZ4e]
r)ePQfiY6oX;oi4Jo^j2Kil`)Z5fY[hhZl?p5"]Ba_A=1S0I-PJr&iNJn`_KY9Kkggk^Q<q1soBb\=O1
T-E?PJr&rQP%hjK^ET!gm%K$)l(OPo]R@gKO!sXoJt_.sU4'CscR=Psr1S_9fqGEoXF8\KJggUHKqZnf
Z@/Nsh^O.+p*kupae?:oS:0QLJgp+:K"0=?YE#N@gb+12q(@Q7bdb-BT8qtbJhHRGP.8H?^Q+Y@ln3lB
kq8F7]XZ"CO,rocJhH"7U<Bpec^oo`r%ip\fe]YOXNT4eJtDt5Keq+4ZHK&ehk#Fkp7@7"aYUNOSBL)e
JtDD%Jhtn4YM,o.go>t+q5T<2bW!#bTA&A+Ju\@@OuL<<^Y5%.m&GZ;l)L12]JmmbO4s6+Ju[e0U,TG<
cfKrDr3Cp[fs7V=X?+tpK'!!nKsK+3Z9+jDhrTIOp>q:>ag/K>S3,oqK&uF^K!Nn3Y</XDh!0LVq<EjG
bdOuCT023"K'MmkP.&<;^H@iFm-92fl0=_G]XGjCO$*("K'M=[U:.G;cTHtFr9]+'g$PfLXLQkFJj')r
L$d:TZFH^?h`ZQSp-"E&amH[LS@I`FJj&NbK'h(TYILL?gc^6Pq)sW&bjDmLT=ErFJj&WeP4$9V^U]]A
lofq`krkL']^EhNO1FmGJj&'UU@,DVcaehAr&oWpffcA'XR=]NK":lkKg*mJZL4OVhmn?Lp:6/HaZd<(
SF5RNK":<[Jj.[JYO8=Vgpr$Iq72AHbW`N(TC1dNK":E^P!6fJ^[@HVm(%_Yl+*6H]KXC(O7)YNK"9jN
U->qJcgHSVr4.Eift"+HX?P8(K'rX+Kt5UAZ9G'JhsQ*ap?mpNagnuHS3DH~>

%%EndBinary
grestore % PSGState
newpath % image
246.105 4.959 mo
245.565 4.959 245.295 4.473 245.295 3.501 cv
245.295 2.277 245.43 1.116 245.682 0 cv
251.622 0 li
250.191 .468 249.048 1.359 248.211 2.691 cv
247.671 3.663 247.266 4.284 246.996 4.554 cv
246.726 4.824 246.429 4.959 246.105 4.959 cv
gsave % PSGState
clp
[1 0 0 -1 0 305 ] concat
/0 /CSA get_res setcolorspace
[6.71032 0 0 5.52713 245.133 299.729 ] concat
snap_to_device
Adobe_AGM_Image/AGMIMG_filter currentfile /ASCII85Decode filter /RunLengthDecode filter ddf
<<
/ImageType 1
/Width 28 
/Height 23 
/ImageMatrix[28 0 0 -23 0 23 ]
/MultipleDataSources true
/BitsPerComponent 8 
/Decode[0 1 0 1 0 1 ]
/DataSource [
[AGMIMG_filter 28 string /readstring cvx /pop cvx] cvx
[AGMIMG_filter 28 string /readstring cvx /pop cvx] cvx
[AGMIMG_filter 28 string /readstring cvx /pop cvx] cvx
]
/NComponents 3 
/HostSepColorImage false 
/SkipImageProc {false}
/Operator /image
>>
%%BeginBinary: 1
img
jiQVJjVHt"nrr^0jVHt"jcedAs0h+!jb;e1jgOZ4p4_TBjgO9)jV7[%l*f]-jV6gKmWJ;IjV$[Ij`TYt
qk*2Hj`TYtje(m^qK:m4jbMr,jU_0Bm>'e4jU^I.l=0[#jU^I.j^R<^pP83mj^R<^j`'E]r_hhdj`'<Z
jUCg$nSmSfjUC6ik#)1WjUC6Wj[J8<o3V#pj[J8<j^.%;!".iqJ,~>

%%EndBinary
grestore % PSGState
newpath % image
266.895 55.494 mo
260.087 55.494 li
259.934 54.4792 259.857 53.5151 259.857 52.605 cv
259.857 49.797 260.451 46.881 261.639 43.857 cv
262.818 40.833 264.708 37.323 267.3 33.318 cv
269.667 29.754 271.557 26.784 272.961 24.408 cv
274.356 22.032 275.436 19.926 276.192 18.09 cv
276.948 16.254 277.461 14.526 277.731 12.906 cv
278.001 11.286 278.136 9.441 278.136 7.389 cv
278.136 4.635 277.83 2.187 277.272 0 cv
298.944 0 li
299.808 2.619 300.267 5.508 300.267 8.685 cv
300.267 14.634 298.917 19.818 296.226 24.246 cv
295.254 25.758 294.417 27.027 293.724 28.053 cv
293.022 29.079 291.996 30.249 290.646 31.545 cv
289.296 32.841 287.415 34.542 284.985 36.648 cv
282.564 38.754 279.198 41.697 274.887 45.477 cv
271.764 48.285 269.496 50.823 268.101 53.1 cv
267.615 53.885 267.213 54.6831 266.895 55.494 cv
gsave % PSGState
clp
[1 0 0 -1 0 305 ] concat
/0 /CSA get_res setcolorspace
[40.9809 0 0 55.9922 259.512 249.264 ] concat
snap_to_device
Adobe_AGM_Image/AGMIMG_filter currentfile /ASCII85Decode filter /RunLengthDecode filter ddf
<<
/ImageType 1
/Width 171 
/Height 233 
/ImageMatrix[171 0 0 -233 0 233 ]
/MultipleDataSources true
/BitsPerComponent 8 
/Decode[0 1 0 1 0 1 ]
/DataSource [
[AGMIMG_filter 171 string /readstring cvx /pop cvx] cvx
[AGMIMG_filter 171 string /readstring cvx /pop cvx] cvx
[AGMIMG_filter 171 string /readstring cvx /pop cvx] cvx
]
/NComponents 3 
/HostSepColorImage false 
/SkipImageProc {false}
/Operator /image
>>
%%BeginBinary: 1
img
K$2]fY+2J]g+It0r%<cJd*&bcUn$<pJhHdMN6BDf\=B1]j=Z$:nh-'6`j`X@RZ6P]Jh$.;QFF]>_Msh?
mOEf<kUN(2]XPq@OH&i]Jh#e1TXVD>b`.O?paUkFhC>@qZD#ZmL3nLueKqAlWM/$mJp[EBLF(:nZ_=1g
hg9s%pNqiFb9aZlT:t=mJp['8OX8!n]ni,5l"GZ^m:_e-_&pOMQ&+jAJnX@]Rif9ba,#h5o4W_hj(P)-
[i`hMMhq.AJnX"SV&uubd>3O5JnW\JXrjVbg2V^ar,IKncr[OlU`/-1JoUO)N*"2(\/LtXjDfckno9dn
``KhlRMtF1JoU0tQ<1n(_A\[XmU(QQk[0fN]Lg-ZO;@FpJm[PFTLlUabSH*Ppg8V[hI!*NZ:WFZL),AJ
eR,INWCbeZJen8"LJuPuZTt<Oh\1STpCiKab>Yo9T0VHNJeR\gO]07u]g/#OknAX^m1Yda_,J39PsFaN
JeR>]Rnp[ma$#MIo+HWfitA"\[nk42M`phJJeHoQV,+Bmd634IJeHTHY"u#mg-($Nr&ofJck<Z`Uf6/9
JjB&qN"aAJ\5T"uj?S;^nj&<N`Y6$aRT&H9JjA]gQ4q(J_Gc^umQc@hkWkUN]G&=mOC.TNJk=uoTGG!P
b[698pdp'/hFXOZZ51hpL0oO(eOcnZW>=2pJm\F_LIoiaZPK>Phd:tBpKrkNb=T2ZT,-L-JoU@$O]TP(
]c*=Xl#D;pm;\Fn_,nJlPoB(1JoU!oRod7(`u:$Xo5TA%j)L_n[o^clM]2AHJr&9>V.d/Jd3")bJr%s5
Y%XeJg)kngr#^]Md"o#AUhJX-Jfj_/N/5Z5\7hLJj<&sqnfO!f`hC(mRX=9FJgKe1QD)-g_L%PpmNmH2
kTu^l]V3AmOF-RFJgKG'TV8igb^57ppa(M<hBf#-ZFA5@L5gd7eLI`2WOLT@JrT\fLFUY#ZaZa>hi35I
pPk+]b::$2T=<m@JrT>\OXe@#]uukfl(!?qm@9Iq_(W[KQ-8TcJt2%pRkME-a30Rfo:1E&j.)bq[kGtK
Mp(mcJt1\fV(],-dFj9-Ju@.sXtlt3g=_)2r7Qk'd&43*Ub^i\K%]nON2Ojs\2'[3jOo.<o%B/'`i$L*
RPO-\K%]PEQD_Qs_D7B3mc8u\kiA5:]W]@5O>ZXjK&ktQTWbi.bVb;9puI%fhW1N:ZEMY5L,FSDe`<m:
WNY#5Ji3H`L[!1MZa6I6h_p'EpGRupbNZOCT<mT:Ji<0XOm0mM]sF06kr+,Om5C9p_<JhCQ*]m:Ji;gN
S*[fSa0h#:o/D7[j#<Xt\*V>HMm`==JiDOFV<kMSdC"_:JiD4=Y3`.Sg9lO?r3_;=co8;uV!['JK!tE^
N&Sp=\F#pUjL0ZKo!XZ>`](TuRdK@JK!t'TQ8cW=_X3WUm^@_UkdHs>]JmmuOR;YJK!s^JTJs>=bjC>U
ppPd_hR97>Z8^1uL@'T%e[M\?WAiPuK'iL'LUYX>ZT"[=hsH$_p[*pKbI=u?T/YiuK'i-rOgi?>]f2B=
l0X)imHp4K_7.9?PrJ-uK'hdhS%$&>a#K/?oBh.sj6`MK\$sR@M`CM!K'hF^V73b>d5Zk?K'h+UY.(C>
g,O[Dr&BK!d-\0KUpo5@JiNKaN:"gU\@8*>j>_`Nni2d!`pLIKR^_N@JiN-WQL2NU_RGf>mPoeXkW#(!
]^<bKOLOg@JiMdMT^B5UbdWM>pc*jbhDhA!ZL-&KL:;aoeMs`!WU8EKK"(ZeLH*X?ZgFRUhm\3HpU?)@
b;d$!TC(^KK"(<[OZ:??^$V9Ul*l8RmC/B@_)T=!Q0n"KK"'sQRlJ&?a6euUo='=\j0t[@[lDV!Ms^;K
K"'UGV)Yb?dHu\UK"':>XuNC?g?jLZr9]9Kd'p>@Uc@9!K'i="N47!>\2^*?jR%Qdo'MRK`j`W@RQ0R!
K'hsmQFF]>_Dmf?md5Vnkj=kK]XPp@O>uk!K'hUcTXVD>bW(M?q!E\#hX./KZFA4@L,aePea9NKWOLS@
JiNZfL[EIUZaZa>h`-3IpGe-!bO)gKT=<l@JiN<\OmU0U]sjH>kr=8Sm5UF!_<o+KQ+-0@JiMsRS*dlU
a1%/>o/M=]j#E_!\*_DKMmrI@JiMUHV<tSUdC4k>JiM:?Y3i4Ug:)[Cr3qG@coAAuV!R!IK!tE^N&]!?
\EojSjL0ZKo!XZ?`]1ZuRdB:IK!t'TQ8l]?_X*QSm^@_UkdHs?]K!srOQlADK!aRFTJs>=bit&Mpp>X[
hR'+<Z8^1qL?X;se[2J<WAiPqK'E3tLU>F8ZT"[=hrKCMpZ.:;bHSK7T/PckK&lL`Og)j0]f)<;l/[HW
mGsS;_6Cd7PrA'kK&l.VS$9Q0a#9#;o@\`Kj4U*(\#@M,M_k.]K%]#6V5U\ud5-M5K%\]-Y,J=ug,+C<
r%s2^d+Pb(Uo<0-Ji*3YN6BDf\=B1]j=u6@nhH9M`ll&cR[iUsJhcXIQHR+f_OQm]mP0;JkV8RM]Z\?c
OIYnsJhc:?TZagfbaaT]pb@@ThD(k9ZFA5@L5gd9eL[l4WOLT@JrT\fLFge'ZaZa>hi35IpPk+_b:L04
T=<m@JrT>\OY"L']qLmgl$S)1m<k3I_'d*nQ(dVnJpcd0RjYira.\Tgo6c.;j*[LI[jTCnMkTonJpcF&
V'iPrd>3O5Jn`bLXs'bfg5(?:r.p,BctTg0U`nWOJr'/WN+pIL\07IfjG8DDnq`EB`bE+0RN^p8JoU0t
Q<:t*_AeaZmW!huk]*(o]NE2oO<!k3JoTgjTNJ[*bT)N\pi1n*hJoAoZ<5KoL)bePeR,IOWCkk\Jf">$
LL8D8ZV%#ch\Uk\pD8cqb?qbOT1\/\Jf!toO^H+8]h4_cknepfm2)'e_,J39PsFaOJe[D_Ro?sua$>_O
o+ZcjitS.b[o:L9Ma7%OJe[&UV,OZud6NFOJeZ`LY#D;ug-C6Tr'6#OckNf^Uefl2Jj&ikN"aAJ\5/_m
j?8)Xni`*K`Y6$]RSW02Jj&KaQ4q(J_G?FmmQH.bkWPCK]G&=aOAka9JjA?]TG4jLbYsEupcsErhE[nO
Z4t\bL/W[heNg8OW>+&bJlDSGLHs3OZP92Lhd:tBpKrkOb=]8]T,?WrJm\(UO\3Vc]bm1Tl!K$Lm9c/O
_+MQ]Po/prJm[_KRnC=c`u'mTo5]G'j)Uep[ogioM]DM4Jo]^gV-($*d2[l\Jo]C^Y#qZ*g)P\ar#CK4
cuQHpUfcLoJfOM)N/5Z5\7qRLj<B1"nfj3P`e_<BRVD"1Jg0S+QAEA5_J,9LmNR6,kTZLP]SOUBOD4;1
Jg05!TV8igb^GCtpaC_BhC,4oZD#ZoL4+Y%eL7SoWM/$oJpmQFLFCLtZ_=1ghgL*)pO.uLb:0rpT:t=o
Jpm3<OX\:!]ssN@l&L@Um>dJb_(NU7Q+67BJr]&TRkD?+a1.5@o8\E_j,Tcb[k>n7Mn&PCJrecLV(T&+
dE@9fJtCMaXu!%5g<5)kr6'ked%7R"UbgoOK$3o3N1S4a\20a5jNE.uo#m/e`h'k"RPX3^K%fVGQE%d$
_Dd`=mb39Hkh;N+]W0"2O>ldbK%f8=TW5K$bVtG=ptC>RhV+g+ZDu;2L,X_Ge`Es>WNt5=Ji`fjLZQnE
Za-C4h`HEOpH+>qbN67>T<dN>JiiNbOlaUE]s=*4krXJYm5pX!_<SnGQ+$*CJir6ZS*IZOa0q)<o/qUe
j#j""\*D2GMmiCCJiqmPV<YAOdC+e<JiqRGY3i4Ug:2aEr4%MFcon`&V!['LK"1QbN'5?I\F#pUjLBfO
o!jfF`]_$&RdK@LK"13XQ9E&I_X3WUm^RkYkd[*F]KO='ORD_NK"9pPTKTbIbjLDWppl!ehRTIGZ9?V'
L@0Z(e[_hGWBJu'K'rR)LUkdBZTb0KhsQ*ap[4!NbIP,HT0D?(K'r3tOh&KB]fqlKl0a/kmI$:N_7@EH
Ps4X(K'qjjS%62Ba$,SKoBq4uj6iSN\%0^HMa$q(K'qL`V7EnBd6<:KK'q1WY.:OBg-1*Pr'#o(d-e6N
Uq,AHJj/omN:+mW\@J6Bj?A/ZnihR~>

%%EndBinary
grestore % PSGState
newpath % image
253.071 18.9 mo
249.615 18.9 246.789 17.739 244.593 15.417 cv
242.388 13.095 241.29 10.098 241.29 6.417 cv
241.29 4.221 241.641 2.079 242.316 0 cv
245.682 0 li
245.43 1.116 245.295 2.277 245.295 3.501 cv
245.295 4.473 245.565 4.959 246.105 4.959 cv
246.429 4.959 246.726 4.824 246.996 4.554 cv
247.266 4.284 247.671 3.663 248.211 2.691 cv
249.048 1.359 250.191 .468 251.622 0 cv
257.364 0 li
258.813 .387 260.037 1.062 261.009 2.043 cv
262.629 3.663 263.439 5.931 263.439 8.856 cv
263.439 11.88 262.494 14.31 260.604 16.146 cv
258.714 17.982 256.203 18.9 253.071 18.9 cv
gsave % PSGState
clp
[1 0 0 -1 0 305 ] concat
/0 /CSA get_res setcolorspace
[22.5275 0 0 19.4651 241.059 285.791 ] concat
snap_to_device
Adobe_AGM_Image/AGMIMG_filter currentfile /ASCII85Decode filter /RunLengthDecode filter ddf
<<
/ImageType 1
/Width 94 
/Height 81 
/ImageMatrix[94 0 0 -81 0 81 ]
/MultipleDataSources true
/BitsPerComponent 8 
/Decode[0 1 0 1 0 1 ]
/DataSource [
[AGMIMG_filter 94 string /readstring cvx /pop cvx] cvx
[AGMIMG_filter 94 string /readstring cvx /pop cvx] cvx
[AGMIMG_filter 94 string /readstring cvx /pop cvx] cvx
]
/NComponents 3 
/HostSepColorImage false 
/SkipImageProc {false}
/Operator /image
>>
%%BeginBinary: 1
img
UW_Sc`14RpjY!=Or1'^UgFgT#]$'B^UR_'2XY/26cF:3@mu=(lo!bp6d>cV7YU]8pUUTWM[uJT]fIEr2
q7!,YkUO4pa._=_VL/;hUF"ro_4e_mid7FHs.Q9_hL!7h]d;hfUS7O2WdEDFb9aZSm"hEMocL@Ze;2J-
ZY8lBUEAu][#!%AeS)*-p)g&cUM/R-`#laMjbT[Fr#_jZgMt>T\l\/uUDilHX`;onc<%Clmi%s@nlN+u
d2LIPY]9;TUK?h$[i3ItfO([Nq+7=sk[1u0a%>)YVAB.HUL3%Q_+DKZiYJ:rs%0%YhA4*H]i4)mUHnYh
WY=&ab>Yo9lp.<Zoi&%me3MAGZP2jBUJpYIZp;qNeJ#)]p.qGHUCuK\`)"-2jZT@Or(j7egHEYA\e=9@
UJLVIXZb5Jc4[N`mo,uHne8;Bd8SLmYX%hGUD*#n[o:L9fKcJNq%KN%kWldG`tR8BVI0=0UIjJ]_%smp
ia8HPrt_FHhI"90]h.BYUDE]5WaFFNb=T2ZlkZ@'ogu>Ye/$CHZZ5MTUK?q'Zl781eT%`np/e"-UN,3n
`)j\ljVjn6r)]gugD\0P\qoX-UM0BDXWQ,McA8lAmqAI<nqaT-d:h!BYTNKZUPS;N[qNu-fH7/fq4XR1
kU!kfa._=_VL/;hUF"ro_4e_mid7FHs.Q9_hL!7h]d;hfUUU)ZWf>[]b::$2m'iaLod[-pe@3f6Z]4L7
UFPcB[("A@eW$^]p*ui\UR^6q`%SmKjiaEhr%G!%gWR^^\t&&UUG)AbXio:ccCD9qmk:Hhnu&dkd5'0+
YhA[%USmK7[kc1\f\*='q59uCkh3W%a/@akVDA-+UY4\*_5G.*i\I:is0&9&hDN;1^#\A;UTaMOW\rJj
bN-1:m'!0Ap#N=;e?@6&ZSh81UZq9S['S(:eMaSpp?A?YUGh&p`9G%Cjg1^?r9:0EgU##.\i/h3U[7`_
XgQ_=c8W/tn*HgWni*j5dHo?KYdO,2UGqT,\*V>HfX7b=q)>)9kdJ.4a#Dg5VX=BMUUK2A_)K6uipEML
s#6c5J,~>

%%EndBinary
grestore % PSGState
newpath % image
314.709 33.9365 mo
159.393 33.9365 li
159.393 8.5 li
314.709 8.5 li
314.709 33.9365 li
cp
.490234 0 mo
.490234 42.4365 li
473.611 42.4365 li
473.611 0 li
.490234 0 li
cp
.85098 .85098 .85098 rgb
f
grestore % PSGState
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse

%ADOEndClientInjection: EndPageContent "AI11EPS"
% page clip
grestore
grestore % PSGState
Adobe_AGM_Core/AGMCORE_save get restore
%%PageTrailer
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5
[
[/CSA [/0 ]]
[/Gradient [/0 /1 ]]
] del_res
Adobe_AGM_Image/page_trailer get exec
Adobe_CoolType_Core/page_trailer get exec
Adobe_AGM_Core/page_trailer get exec
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/doc_trailer get exec
Adobe_CoolType_Core/doc_trailer get exec
Adobe_AGM_Core/doc_trailer get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 12.0.1
%%For: (Alice aus dem Wunderland) ()
%%Title: (Quiz_Jeopardy.eps)
%%CreationDate: 4/12/2007 11:11 AM
%AI9_DataStream
%Gb!R&Bic6FZS$PgpKIM;j;H\p=4WI5A[%.`b[;A/4HDf7O:`+k7/--D_ti[YSgUfJ0mB7rn*YP$AW/r9B4T5KFluMJF>DY=&,5Cb
%s*@pQ0GUc(`^(p?U>LI4F6@iK9lDdk_Q-/4AX]C^a\ct9h&MKe]ud'))N;\"a-FYOSRLVKB4&C;<'L![K@-<VqOl;#PWH5&k^0p+
%kd<q@UX$5UWuci.G?0/SO]p05rc[e]@<Z[rgY7th^"q3`q0p2!ipZfLeXK<FJC:L7Lu,5_)^gj6k_MqqQJphkqn1UM9R>.Ipol^T
%H64GKX&f,Ql5b)gSS<R1Pd[A*H04229!c"Y3>kM50U8Asr&MGt5nabZYDrXOYa1Q7$m3eYqT1!C+F@Y$(Ws_Bre8,c8l,i%T?YV-
%qXCnCPtd(qCYr,GB0$$'Ne>7_DYK0O#G#Ri]BBK#[a@LWr%@r='pYn@kR`)@j*MVW&60rNrj#s1:"(quKV=aa-ubjR8&+f]j3$t"
%B=BgC>?r1D\,-,e/M412i&<$9hY?KB5BZj(>>95r?As&SK+,cbm6Luh>@&HOFsXRYj8Ih6:j"TS_-T7,,[U3#bEJ]\c<n8)WKUE(
%^#A\K*='/`+qO:%.\V^"5p0rXYT1AO.]Fer@s,10@8bh)XDtV#G-W/um*qn?jK!9M^H[+Y?kQVS,d&IcC)t<sN;L3j_T%$Nd9iD?
%2(AJsZ[ZlJZ3o&pDjX8;ptm#DMO$B.qI0j2[t_MSd1NehLZD4D-R4bk3>h.qDi5/(:7=.&FqZ(Xqob+$kRZ)1n%ZQcmum./K+n'$
%ANW"6?6/HnIfF8f[QE4-<OTr=Y*?$#gA0Ffb,Lc/m2U=F-G<jPc\8Kbrj5booT/HJdFr2FH6@m82r'ss5%1kXrh.m3*h3XmS1K%K
%R<5>+3?%:V%&Cg2s,Z$R9S%!Q1@:'VYD1cepgeDAfcH+WH'^1;JFpk%rSaP237VNP5M3)[:A-0,H_&uB?"\1]0('"IrVrme7V=F=
%muKQN#Q=(94foOXpWi.\/$P@is1UEUr(lcls#StSFh)YXot5G&qbOs_34IAin,CiX$A0!=>g]bH^7Kf\ic$S2F4bMX77;aM46^Ad
%#`-aeSH2[_qEs3J'iKXr-a\s"_U3_Zs%IbSa9;&c.^W@;qP7WeYG7Z9TKbFdeuT#%^TZ1L&DD--=;-,dp4=deL3nPZp[EL9CsX&C
%`YErbNsULV<elsjTkni6E8(>eEmttg>,$C_qI.2T.Ct>L$e[.rjb8EGIl!AdYY;K,`gtr";#SG"\[TIbkGYjofls*HO`o$&$IA5m
%p"eMTqu$>09>CMhQ%.!]:Jc@bH1X&p&*58?(;Y_)7i+AZKhlag,;%pTR[;/qj8V"2.=:?5SH%*b513p1WH#o+]^fc^/SVJ4q1E8N
%g=_'iIsGmZoIj/>Oj,NYTQK]?*l%>X5NTZ'568K\(4H!/R&PAY'3t+hV:aebX*_f1/S=C*=$G5SnXQjkZ]B/KC%6,&ihE\@/^C$J
%DkEp:B.GO(,:eiS[W3!iL\56V0&p]$N=N97[O<3Tai5<?r0C.&-PbST^[]h/;o^,(DOQ;B:%u$i[.24(@b>P,W7at^-fbs9OZ`E^
%nqhc,S+56/pr%X(VrjS*4EYq<HlDGQVVh)OGT7lAk6pP7p[>l=n*DFGT?'1#4BA&,J)NuT;p1fEHYPhKO0mOFRebFTT$V=Ld$=iW
%ItrL;.Cq247%rg1paqOY4\>Xk@9Rtl1J`G]Bk3:3fEb]ZSp'@4SKYi3e.^%gEiN]WFI9DlSG-MHG`qVB/XAW!=$F$m*bhnW\ae"<
%dMZ"Z(HNV&nn`lg[n0^)Ss<DQ#gPh*ro"Qu"o!H)3Uf'Q%MNaa^BIsJ:CXQ`EYt]V#-;PQB**i+M?PlH[nZ3t^,mLi)64UtlIDW?
%N4Xd6aFTIkJ_$MG]![BSD/*jpDB&.'D9KA)>:*k@W/2iB8$S%`q3T$6>`3/.j*KL:S+<p+Zc-q&:irbt7"8rC?2c^EB$uj?:%De=
%A-8Q@PY/E!SB;\t6r`K@4:OKV[%4XZ9P*;'-Se1L).Y>],7UDmX]DLGdu^J1CY.8cCSi`:."hSU&k`ngASQ?*F?Pb9WB@+YY;bNV
%\u/hPkKFkj$cE1')2AA7/kWZ*N_I&.'B1.^Bg$t8e!-aV:E'h$.YsZ/+clcYTOsEQdUH,j]?,bCas&]A4uGM@<29*L:Q&#\GVV")
%O3G2s]-f!iHG$"OO*+6Gk"1G#>1C=8F.V+0;nqs=A<4+M\Am"1qV`=aGRW?gT@O0Ao7El[p5p-\J,R6^G2\XVs%&(C5Ioj306up;
%7p7H-79;V1Pu#aB_#hA)IJdkCVKen*F6V^js3XOToXSpncTKhUOVZ:?\HW+AN0sFuf0T(F4I7+Xb7EG5O0n\ClCHPTe)CcO-`p6,
%604;-i-H8^Eu`DD/An%,hTtQ4m-Ku?.9TQ#V5,XeE[5ocB-i6L@8p.(`7&F*N[SEWW';.3cFARkBHbqn_EkI@pF%K"m`>`_kakHl
%biI2G.X(Bl/srl2G.t?frQfpJG#QR+a"b]%oSN0pr1&_HOB`,10ZY>#In]+KFkIY\-]9S#<L:C%H:kiS?N-qK4R((RA<4*bO?o3T
%47bk<Sl:eh4d^Yn`LuXko9aTjo<`pJ#A+8=n%[+pDI*&pYBm"`o&n"WInF@X`NrY/GtWD),+^@4AWLK&a\u,Z-RIp>#^I<sn\7MO
%#F6lh-cG8*(_!KG9Pk@llbpTW@9Z.$;CqBp.ntd.2=@p>WU,Q)mKIJ]4KbO+^+SDM9$o7,5qetZ(PqPc&^V3Nd@u<D&Cc9tQ\s-<
%&uc.t<^]LbP_"XVcpBl=0pl40#6I5j'GZ0u,hU%mJ-o.2T[7Er^'ZRrZ"W^Te1'>,UgXsmfP<nU%OhZNpOpQPO`\!Ub]1SdO@pb?
%;O!1nINiN@&@-^7ZqNl*B]C4Y/Wp8W7NaH#&L];hM!6XZ+T,bb'Js3Ro:fNh=sac9M(3I0Hn5mWYDQ`SPX@9X+"3>Q>T-U'*?tgb
%"#3[T5il"q<i?n9ga9SKb:-8O;r(E&<)6RQg8WVMPb^>D>a1XGY*@OZ2-lL@,Zj!uZ0mJ(;s;3'1KXmX7K"[:0jaCoL_d+\Vg7RL
%M;7R7jaWmq)Ve9'qV`;#.sJ_Za0_"U<A+h,;t6l=p#76MJ'LhWj3rFCqBiN;fi_BIeB$.VN>m-Xj*>;C::fooS'BG1YlB$7^oKq2
%!fq`[n15:8lHR2#SCr_%FSD>AEPA/BWo(YK48ipp(]C-%iTST25?/cB/3Y$_moLRDll>[JoCDQTs6+^SbJ3d$YHYg::F7,`6r;d!
%d__hd9e%5G.$cm*5Q$42C\$(QJc/^X.k`BE^Nu1$hrVI/>4TS6FL9_`YuVWis/kjjg"XCdk7+O;G^AK@YWZD?6c:'54JF7u8cNuF
%c<`ZDrVr`,I,:<8L:a#Hmal5*:ruY=97jmX6D5'bgZhfmQHqirN4/G(`bmCM4&Jl%[tKQ=A+XAGd$mdW3r[BplO<Q16jY7>iBLGH
%e"J+X?27PT`f^#hpQ!`mIkmSNN3fk@1B6hL)c+4JB,R07IknMjFrG[(%rTm"<(O>Om=7#VaoK3lI-c%hXjJ$djT$B/CqLbTp@Qhh
%X^,"50Q(Ye7Ynn9IiSuQ;IT[Ai68bC1q`GYquV@i"t*Q1[.7m13hH.rqU]`\oqU5cgc9j$8%iVL=(^rO@MIrHO5c5G\DPsW+Ok,r
%Y8PHs@j(eYYK(*LWdE)7m#L&:SNdpc91:p@)8XV?'Z6Knn)hrceDj+*1_jZcIpfJ[`nX;u*7ZBss1!BfF*ED'n$7/$`='hSL[P0Q
%CeHLJo/;D3??;E<7NqcCk;iG01/.Z0\08I9\GVMjF61:+oGML\riN5%T$2Hc1)P-EHb7msW5s&sXiLJ:,dU)?pZ'9N3D][(Wc@tP
%41,K\]g)O0\`mYOn,D4`8i`ZKdE/oQ@gMtHG]K]O^,)2bhq7/[9f7t+l@I-_lD)bb?Zm^?cJr/iHM-nGU8jP^Ol>3i3rcW[rn$tP
%3p?82&$@'!#KB^f0DKb:/Xs\('E#2O4$C*"IUVMCrTITK4#_f`-MQ-B'D)3gF8G4[`j:B(rSPJts3G_ds)ZX;)+nM/6#G/>b3$2m
%l&G`,<OR8S26F6/qpWhcJ'ag"Qsug=Ltq:I<msZR4P^lt`k.KgF.Q':S-spM(>U),nl]4#Gc02Bp]Zh=bPJ%i>ZnErL+<Z#SAdaX
%RuTSJa`0hZV#-K8f\`f)qYqubr6k.JCL?=%7`_cr-@8^"/h_W4'FB,.16pE.*.Fcd=4u&ETAI(%jTbZlY;2@`]OoR5F?DV.OX.u'
%_qOBfB.QPpg)EgGS*e5ZkdWG9T0WbK(1X4hlY*2OjIs9dTXWeTldE5hYTVeu58p+shjIsB&,P+71JN2k<lgHc7RQ;e<AlnUrKGNU
%YHg/Lc54e$?;?NcJ$2VEa0N-l3lnAds$p#]MYs];p!-Tad@2+\<FtUio?fk-;ENPNHjQmFS.,/,QDiP`")d:K_im'^]KA]#411!e
%fpNlZd2O1F\=2l^='D,7Pq`NXn40ZD(!PP!$p):Dmim@(MO\SW#1#A0)>D.LgDOCH',ER"pu\E@_6DX`.9le#)qI#kI7eZHHP4XK
%F]pfn*6Y]9rM,QBVmHP=jq>7+V4ju]35`/[j*p[n;GW<CB+@dOd%?h_*H`]a)5>al:Q@NK-*=\c.[Vn1j[diNDj".g_=k!p*C55L
%8@J+!k&ell3jl$E62t&Q#St8V&gFiH7+8eul(U6Xn+LqN=ddF-Q_Wg3pK@JeZb>jG1u@]foVt,G4!W!VSOI#&Z8UFY&mNNb)^dX[
%3)aXo=F`p7IQ!/=<b$80M4-2a>rmu5K[3u\rVUX!rKDSdSIb=-_;/0#p#Y_ddD=lAiJk8=NVU,3NIIcd\S^4fDqS?UQf"r.I1\Yi
%]^b+?MrjJ#2f?,&(Wd[2L:99`deqeRTD*4V07Krc=C.F\Sh*[grC>;\o&@ZKEF.p@H"eu/hQ4`kH4T>:o\79[GIne_6ViJ]k'oL@
%C2]ZMS)Nc/oq-k`0:KSrZS:)/FgPK0?9<Ele)&fc^An-(#.dqEIskL,3c':OIQXSN4`&F$3GHgAm-\kJc1Ub3O,\e<:Mut\p1WoH
%epcCkG(qO9gPrnSca1<^XmY/O]@)Zk`pGbAMr25Ir2$jXGl4u!C[9f3kI&jBl%.(;p:YY@kK0Yc2u6sOH]N&,>O5&8(5pb$VA@d%
%J*aT_^%?_9r3V!fiI^@!be;`V=u(RiOsXBlCSTkR!N'sgH#[]k_36OsXe=?OqKB3Rrk@6-s*2q=>$M$r](*<'r`3NSl.NbfLWa$@
%-B%6rG:-D^r8##mErTdIGF(=i.jpBah5h'tpPp:Y=mt-L?Kt=ubDY+>q[]<:^:mr(^DH8/+8<OPmFDMdT&$I(\=:4=G-/Mt[hh5W
%nln$glAlF0],dHjLX+k:k$G7!Zi'7Jgf*I7\`\A\b(@o7=,q4ee<ZF:ig\3#H]9X*;L^S&Hsf1lr@bHB9>?dB4mVf$FaP-#h1rbl
%m_g]4pMn^<gKO(_G9.jEp$fk&H[._;GRK1Rr8RZ2+OoR"lAodt5(,+l+ITUf>":pq+2>B.j9onhk%^h`T"_3pr(HPk9eAPVE\c6a
%%SY^ED8o*Ip=<9W^,GW5mYk\iVDi'fV^FosB(!d1a>MXW$FB`tCO,s;>i?4R)h;d\^T.7$[.iKZU]9E>='`0T?E<sC*&Ufp+/[]6
%+dVT_@_6^E]<:cR]DJT#h)p'4lVMpSkk>"&U]8e,>223NZS-"i^dsYbJ&LlHh%A8MK[m7a*ir!nmH4B'F^9U#pMR<@]shpXa48cP
%T=sRgb3#.7ro%+YS([&#[4OBoY8Ym@VqnlcZdRKNm'XSZ#@-ks+%u"`hqpW^k4B-I4.)P.?)k;lQ.ksidsTYJ]"@V(Gk":NDK!3l
%o9QgLq=efW>LJY(>)ne*Bs0[DQ^NA`"8h5bol-\[[SP@ZS'19OQbK'YB(J#A6Q2DCYr$+-`6I.kk5O%S]iWI%Xk@KmfBk_hp&-hW
%D81.aZf-M]mb?mq_7R\:a_7m*TCcuADrL;b\(:E+\>l(g!]aVIq_FZX5Dld89\X=LJpqRd[U8AbD#a;01i:f&546[u_bk:JrU"?@
%mGY1nU]LqAq/&(%]mJ'/OWsh$EU`)0j)jm1rF=m.iQ@2V2VF)C!4mI*Gracr5Fp\KR(#SLp5K=KM=gZDB=9#]?WoPJ;O"GY2sp>5
%q_o!i%m17E+-=c#c$t,L;N&<GR+/dH-ZN!Y\nUOoqL#o`3WJG%..iF#7W@75].eK71k2S+TshX_GJ:utN43lV\i8FBS?L&^km"`H
%&Ffh(:++a=At8"JTAD]o>g-bQo&HE[b?h[.mG<`ck%*tl[e4.4iP&$%5F.Y-2l]d:a#iO_[b]`K>;r0L^=Teg[_nh)?N+V`gjOQO
%<r\@JF'@a6/NnI2(riflG&M6OWI*rP]CO-eQK?_<bC.&'lj[X^qHTq!5eOLc:K"1aiL.KAg\M(^Y$;082nQKG[qga@QJK#`7DC_W
%g,6LQT5M5Ik%DSsRetc#h=\@O^<2<a]e27H__8K'DD^f/Do`nij7hkDj`qka/@gW,Mn.0[b&`ra>*:(JT?4:_2/hm2m2,WH[:48d
%g5V&n(jUBpkj-]WNH5o\_=ei)7^)VTVfYcrnsdNu:U4!^,Z./MrYq1#W9(bTg?=nf4EY/n6?5cRDRS-8kch5VL,0ipY?^b56QMXK
%<K8B'#E9W=PA>3JH"KdH7_UekZ<o9RdKShpdq_f*0>\V`kf_XmWSMBSB5f-NTR/>qO'4Op`tI3tWt=B%/90u*jYh;&%REagPMp9`
%e%!NsobfUcQArP1bM8%cWJZnjWEj`OPR8,rHi#Y;)^<2QNF1Fco?=>q:?1l0=<^k)BkfRsXg80dbgaVIn^(Y+il`X[O"l()7#pJ#
%^%i\%qa#)rh>4@hI':$8>i"6-9?N/(d:)FehYr7ccQ=5:?`G/l]q*28`r6`kMic:J>^h1gm=(i1mCQ_eF3MY"U,QVqqt55\KCX_$
%J.Uu(iVO"IL5"B9BMpMr14kqFil+\4m94IRHS'[gGe:<Knfd\,A@1L<XbHSaYdsc"=8d6sB_g'1k4?.BXkNWlXWdLAVVapqc5/Qk
%rHueFl47f%[A2-h,TETDGu,3u;N0fkjX%%tm#/7"g6c<4DMXBj36KdtgV7KmX7s@cGJ`4f3Gk]EqXEaO`V2EtEW>`nBJOs6^P7PJ
%8=fcK,/:RBMV7pr-lKROb/lZsgcYV"X.kC:QIuXr!a@SU4Ys\8`<WkuZ7OQjaO03#KuR%aPtCh\hHjrFWTIAaF`I0=bAWAmplftA
%2b)\^JT5VRXNfA'$eYpZf&HJlfA:gpn+C5g;1IFJ:)q6S"97Lric=q9_b]=a1kJYA;qd^W+WL#);8qDl$liH`]lU\=D>sHZ%7)&U
%diIH=;Dn1bmQXW<Gocf$M<b$<W.&tU4g#m`g%p@N/JNHqo_dG4\NTq;>Z[_DkJ/q^o7OE^;BOO=mu%e2l,Jo_p#k(RT:Xo%F(BOq
%riO`6Vn,V6Hg?YX-AN#CnhK!bTsf?p?O:)0DYNf53D7'-l_XGcGn>4IO5H"#,jY-DlfR'YLFY^Ig.hVHDG04[18p5*S,'Taao`+3
%p=n$O_i'U(DL_Q[i)[HI4S_i8&+d7PI88ei``i?6k-E4nj3^NU>lWmFS_ECr>OS5!Am`VsAgj;XI<`'(l#!Nj*9VqJ;jjLgE(2<8
%o]bi\oo"T$=#N9SBCot>aD#e1Ie_p]m>"IrpBn9T$nVXM<^65KgaKn[=b?BmpLrKA3cA>6bs0nUp@[nsG"li@D"$!BHKP?M[N."S
%Y(+)5CB+::N8N]U^T).Qm/E6_Gr#)[hqgn^I<[MkiqItJHhp0+@a`lFCo!P=*GJo.de\E/G*Ws%hQ+pupD(UuYC(ZgA(7)S?g5J@
%ZBhPYJZ*$nfm&A2>6?/^So8Cg*@9%515/:H?$Nri4M(lM=uin>b5CeS-`DV-R_A69hWo#B=j2jXXcdGlC.$'Q`d)d"hg-O/be;a)
%p:%`Ia2OFmN>kolP2G.f?7-gZ/hcUF+3DaPc9_*nQ,>\si]me\=<F%S7"1G1(V!;l0"3puCu=+i/?6kdo]+O.Y/o(!U11mi^G04!
%]6@.GG)l=I(+0L#/_rZnrn-#,hM;kCSudo!hWj9hV4;n?*h+h;T3L26#@"SpK@-9+m:5n$','kVCRq#2B)[)?adBLY5(E,LKW&3J
%%$+c09tn'MJ%P=*%C#hK/nZ./q'L$ql?Pl8,@.Eg2nn[;ZMgaeWudK&J#86282_Fa#P%[-a'5l*NY[V@Jl])JmFBL+&IfLSl![A0
%n;#ke=u_k_QLV[b'Q7:W_6)gqB5d5s=-*3Mld<<Te_9<oS%*"4p1F21Hf`Pqf=69CG/n1%?MVj07mbrh*n91&aVu!-_Rd*shXH`r
%]=59'hf%?LLqOkZ#KcB/k1\Vh\J]ItOq+gJk>9ML]t(XsHgBU[?:/-hD^MTA&+!V*Nf[TUa5?4?QJ^Mi:@kVI*^3`a^B#%9DRA<N
%U[@?`b]if!3':Rf\L<(r5CW-DDsq]GhWkuc2oGGp]D;!mKC^EkPiJJIUPFb78"[P$=A"I`HP!sY0"sAHA?kmrraB=:TJ_#mEdt@O
%RNHr56EMG1gPX]l=,s-gm\/E3=DhjO4G-;9%VroQ5uW)Sd;84:I=G-=;ah;7K3,oI][s:RqrQo2qKnG%:II/+-N,s=pYfA)]\.aR
%(R2\^>e@9(S_Hm2l/^C6%6T%X[VF3r4W#>.2:I^n-,7/.,Eb3>[T_ClVb_,*m!6lR2k8[`YU$].IHi]d:S&ln2tk(ik5*]sTO#=k
%]o.q8Ii.8.7GW5D=_Ot@I^i)l<?K'>lVB0&g1f&F6QRVY52Ea;m<r>dn`[rY?VsR-0]Dh)qn`5V9?52]&9>h^J<#6#?J9h:4?iT!
%8Z<f2C[tcsT]is4?G1T4hl@7la$3=73jY_!'Nu"5%Z(+tZF&SZ[/*4.d-6C]G&U)"nloGfc"LV@S:C3I2l"`T-i(@QbYa8Rghh1P
%g96a7#<0Zi<q>DCR=i)aF]dC9L:;kEHoZ"m)nepL3t&G$(ER8eoQ^+_YccM\V_H!0cioii'%Z\3&XKYJpJQ%;h-=<:DP2%Z=7.nl
%eI/ua?bHt6O@#RlnTh+X@C(@Em)#r"EM-i8T0N)s$blJC(lfg9h36l*4Zo]jZuUu@?ZLLteBqMVWXl,362fumc"5;%?Vc@[cF'"1
%2nuOK^Y<)^@)%^eTc^Y=G?8]n?*BeUX)E.tQ63m>H!$RL[qON:'Sh\%`n&sQAO8Aj[0o*eQbE4OD)]$rVG-^7:8Shk^"qN4p>_Ls
%G#$aU^A18YSrLEr612tn<86+ehGXZ?s.oCt[#k:Q\\><Bm5L#kc,lm'628.-\:2'cV:i$->q:l<=lD$CjP\XRg8h[j9fc<cioe\c
%7G6auS+Z:2gZA(jgr%I]MdP?K$]/4ToR[<hp[-)g2hG%JhTfb$Hs0_HV3Skn[cMIP=&/8@(AZ54W@iPh[+W'24:c5u4&H!krDQ(*
%d[C#5aM1L8'YM,)gH*aJEGKuJZ$oqUfJ@hH:[k-3j`c&il];+,bJjjt#S2Uuhg\U`Spt$/@t&BP,3d]@X`&(VD=.#Uqf=GNSSPB&
%2W7]D<FP3#^=S)iD`d?_'f1(1Hu1GVM`b.u>ttpEe-=8*_@K@L>hdH:/e\=&)p=<"s6@YnK:jS!i91Run>!m.p#s-gjGm*L>P+rP
%W/G?d,qL3@XP&6>F]/LlgL%CagE5^amu4>h]=>]*0!P<Bg#;MMe)Qe&[u]+,>!)JQe"uUZmmK(J5CmWWS"]T&Dm^OlYP[m+iHr2I
%q8,A*S&tU!BOUeKSAN5Iff-87\+s.a>5?tO!a4HXXS(%p@]R;?#OV3O`^)H;Cd.]8r1O%1HIOT,rXU9O+"-=8g8D-nKJR'Nh!#m5
%@_$Q`mfnL)g=Gn;^U\R_q&kO6Msk@n';9%04=SR-_6(.h[NF:A2sTW0kk$O)S&bIsD;=FSpcMX7eaE!"F8sgXO$`-p\ui-K^Jsfr
%XrX&FT\fP$k1Ya&+2A[."LUItbT<P"FD%RBYktEMrU=ig[(SZ-++?&uSch5&kHE.Dm9t.'$9Y)?YSM_:][l@;YNKR,3\0q1K7>cD
%*iCZdmq_QB7`.1L@BHqCMpjW^Z\Qu6>\C3b@dPh47a(>>Dbl_?2hDtp+.0fgpYh=60:+j.1LEA7d60EsIYbJJT+#L>[i/&2qiSS&
%1k5(mDkI#TcoQU#EjWp8/NZu#5YXik0#onZZ&9sRosM!mho&a2USX79gYWbRn"$`l^[kj>5$0Mn.j$s'(cM+p:J9j!1.V.dEZglj
%ocDZ$g`ah>Dmb(BheIcU/:5i@/Qo%/'M3-"]hmRpF1'uPr^7UTVmS<T$Bpq?;"nSVI4+%G[hBps+,0E,^HUVcN^C(fqqCbuGe7(l
%oPjWhL.qU1rJ[Ruo2E=#j1ST%4SC*ZDs?BRkmaZM>M<sYkWe>bc$s!%f95s[-]lgNUV$KYkht!Dip9sXqUl)7b3&]-hQ=IpJ)6k'
%Mj<dE`q9+>X8B.,.^7QN5Pj&\eG=Hgh+C39f!c.pDadE)pc.T"[ED2Nm9@]5Q(PH(NB];TajX&HJ[8s..;[THlE>!4D*=Bt+fE<L
%p@3EG?55G(h34=KGj<`k.C(WWfqqEtIf7*0nF=4DhnA9R%bV3N[$.!:+7Ib#pM-JWhHY?&Mh\sJ\(])t:];emZJ`Rs^'LU"#>+j[
%a`ESDmT.Y<$+dk,T_jds:Mq2`jdVBT9-%o!?Mi195._cUH.^ki\!g0!\+BT.Ja&)>K9cCYm<.Ha-k0N*'8F3R45'N\8CmPeFQll?
%]IYF/d7EQ)gT>CLk!6;,p:Y'bq#*SOli,KTXnf0hT4kcCY-nVPV&g.K[gg(E75/(tPi9Fh?F@PYg[$ip99Vl"Lqk1@n#gIH?RHa@
%h1%YT\N\&nd<3q%htVRp\463oe%<:IUj1qF:%cWaQZ$4HL7Y<$]gji<l"D4J8:(f&mH.W?7dg)skEDgJh;.[P]RR\J^NT(5./j.L
%p#9C04k+rg@6HeWrq5XW]DqO\%oPM)Vq5H7qmA`pZWP[H7G.F2mSPhL:E<.?HK4nS.b[&^.uU8U+q;_,a1LA'<>/u&Qq3414B!eh
%O.8lrl's&H6c>YcSdI_7(]1DrC3MN4UGncZaRgc1(.ClIfI"2&kl1A4GiSCQNmAD&GOEL4o./rTV'`n?WIgsCkL3uQn>;6&'eKnh
%Q]^9oQg1.KqS&W\Yd`MXpA_X=Z1j"%lL*ST]Jh<lTC'11fKVEuihh^WBQ((8*?AM%n=[6lRaD;8"b1j1ZV=f%n8-Qdf)ULBqRk8p
%?b5qZLqmB6c>jcoKk6<,qn;uJDj6M;-"!2l]A)(-Z9UD\lMSQAdQ^5`e,FH.2HTJ9`-@4Qdson]B@#bOle3BJ<Y5O#kT!\(\8K-!
%3p(h&8'so;1[*pP?<Jst0fkB@8ZCatUjpA_TU7;*n\Jo:T.DE8^8Tt'N-h"rg@FZ>>g7<mG49gS.gfprmW^S%%..T/X),*ug$):n
%3lfi$41\nAo7B%V*V\!F]=gdcIs>]/cInoOj)O`WNngFSkuhW/5He4--LW\Zj(dYIH\eJ2+"s:eC8Pd$,"Y`sTDIX1a6!#qiT5b$
%_NS<VDMd_Ma6ZWA='oZakp`2t#OW-F+(*#M;9lRN'YLqI.<@?"m1%@c\3<h.R*lr"-95Eo!j.PslBH4g3j02?^OmTHT2L9Y27UZM
%?MioD4W$aT:WU.;ULf+GCRpDSa1]X\euMDQe<u1Nepb$tVWPo8bli&fq=L5e;GmdYJ$fj=)%K0'nLbQm:57SPV-ikm_AC3.k=(r)
%G@n0pc]a/Sa1E^#Q'bh07X&srH9do4@[naQS4D2-aD<'NKlW4c^Yra^084S:&sLFI(Pl5-5C.r4KVHT1cK)8eY(BSdX03\Kbb4Sc
%b*TC+@e"%m\r:J?/RH7!PQ@<eOY:NlJm6U)@)LImTLdHmpU$%PGDDC*VQ#90#Mm-I><:m.qpuBcUsQqhh$O+qnd&aEXuKd!ED1Ac
%RUKMS)G6u,In==Ra[J=,L93pZ<5"BoQMWghUSZ1nZFH9746&67>#qq,8jE5$at?^.I%iF19!B2Vd2c#/BQ&8)?D6TDY^\40g@0-:
%R*q/eFP3SjhRTs,V&lh0.aN)]4k*G7Rp.L*n^0Em%'?/!B;O["P^_`bLUYRT+3r%eOI4[>M2?._&ehI4,E!m$98njgb]2ZEC9*]H
%U-(IP^3UDCG3L!LjCqaIf?E\X/&P5Hc<KNDRFV\@+hn>ZS;s[fDdX?gn['L'N99S9T#Btr2S8(9eMOE(N.Jf0Vqs;BUUalXOOr^`
%b1+qelN<99-9/5MeGB&PXSA,)LjOVEH9:S7@[NY0p@mrokP4gM;c$LM'-&[#N`\*%Xb22<R:V.TPhrq*1m"!aX&/,K>6hI>gZ/:\
%$]'tt-nC*[/pb?#P_Rp7*aX22gH!HlXPHt20t>5BnM\qJ_O`Iu)-_qk;RlcZZ9<Tm)%Z7DeB>eB^QCg3Jc4s3G7@f]*7rF-52UCJ
%/^]L(E7@#fO,eP2d@We>5OuAfi*tpbONu2(3(&hDU"UIqqRL9Lnr#=W6rprZ\<I,FSnaM_k^)37SRF.@mHW-Q(.n/BTeBBH$Ti.t
%-I]\4&n_!NX;AP"=8m,FDUHOfe60=`#;R;:l:,8gZm#e.kT&o2/,btK?*Gqt88.6pV5lE'qnn@"SYn2Q'BJF;B\>DPR-3b+q*Cf:
%Ub/Mi<<(:lpomH60&LZ-oQhJE&EN1H,F=OK[N)4>]cCq,5FP-"aBl)kViK'uX+$U6YDK![e!]J_TO#8#MNo\%l8:Y-!JqB=\:&=:
%Znq(@#FEU$1GlXk9"DQE68Y?c4)>^703q=chl(8cYEtTFC!(+><L-qeB@_\T5Ep!,pF:<NKn'P)hPZe'qm&,#3UZH_SVJ;.ms="Y
%q,Z.j<kh]J3G?jAZma$%.DX]:/,qUiWjKbKaJV6lpK;E:.;n0ZNXg>C9Q)nO(+OZUVs]q%ie>L<mQl>Me/?ChA(CR-DnaY'GTfUS
%)<$Rd]:Fem9m.r5k9"S,e&n;r0ubMe5jM#9eSHM[;a"1lZ1,Z)PX"GkrhLrJ3>lS^>rUIrI'%`AWd<Cj!GWXr+8\5![C8*=qlO2@
%TS4e<a8P$2LUt.r"["7rDs)H*b,;m3EN?=.eojNnql(jiSn@EB\eAcJAu/g:D)JCdX^1Fsk3ApYr936BQI+=L$]X&?QXNlpGhV'@
%(V8b*$SY4ocHP3uW`NFkof)Zul]Y*>JuQLRa\*i>V/t]H]k!K0c3^*`n"kD(=(o3f@9D*QIt>ghcAnD4m,)$A)%(j&8b7O,_CcS8
%:+boP*4h*hSL:(rM!3a5r+gCuC8fbPWAP`XEXk:bGl6Yr5p,X2o,5.=j\'GEW4WiO?rAJPjAN_8M#3Ml>J2Hg5q03ae.E`UR8tG1
%o"(Xg046hB@.*+LYf4bT5a:XnE\7(9mM?(udl3(gD"H=475^Sj^KfL8N6S3KaPo4KId-MFVd9mR#;;I[NG6.o?;a(_8mh:#gj;!L
%4&.;f:A*En&YL()^]-4Dg(Ets>Ko*]ZoZ:u3:A3;\#[crj,00%/u@*uk'`TUo%!\JT\o8t&AFFj_k6bZ9s4M:'sDZMqeop0=-M9(
%Xc:c,^l.^8iu\@T/YD>jR-XupCA03W2mWp!V8!!,D[Tm:YD`seXg"7kBiGCKlT4-/^8W[A`BkZ,ZI2%'<"bCLeM)g)/T04&r)&]Y
%GQ1EFp$;A6(QG,L4fh,dY-6R,(F$EOp;<hDV*-7\[=ct<JH8IC0I_O$BWJjc@R<a."GDGBBF)H?ZRT6[[+3e5=tDQ5oY\1RCmk^L
%<.c;c$&MO(Y6J<B.sUkiQrKj%6[qDPL,'E,9WM3K^hH2fmgESC)0s$BD<MO*&k1KVqk6\Bn1C,#&fXmPM,U#e`I;2e!$`_t<X5/2
%]P?L4(nF3,ejSW!T3`\?-\il<X/V(h5]JYPP7[&Gpf/u1!Z=N_1CZ\H*)tBh(=,J#-kQgFbF4g:7mg,tlRL*:Mhm@HMe'Cr(fu[D
%L!2b_nLA"c.LtN>df_=96Q,2mq&IO$`X+iL^]G#S'r@#JGnT2a`"tP"X[t\2O)/CUJS]mFAe]SX`QH&BThMF(R939ZWa!<E0FfRh
%Cn=?q`MQW[1G[C5TQ2$o8d[bmO'OA(&B[a/8.o"+9i@s^YaJI:L]o4PXJEn59Y![uSL1X"'u=YFJJqNe3>?HZQ*QuUF>bI"<DQfF
%$(1e^r6jF7fi"MOEY9!N>a+HWN@u;!1$BN^28gXV'3:=HkI0;Cgep56#-sKh^7F+ah=(eY`?]dJH8\UJA40B+6atpXLOk_&EFP)5
%p0ECj!OlUC"mJpQS"'UT/c1J1X<n-BQG_]3??oU/;Y8T!_%uCEJX9j;dR<"`,uBE,SL#"2)CCXC=IdZ--=..0?eVl=I+Df:IPm9W
%%_9?QJt[t*7e/S0jK&W>O:bUZ^O\h0!k`%qj=I?$E'=IS:'*GSdQllk^r"I>ed&KhM,8dPP0W^LiQQR&T#bAYQ#*s^T-fgt4$=f7
%@)a43+a-/?o"5j6,W;dC(lXP%flSd(%,&NQa?IbU!RFpR&<m__YF%]h00ud]BFR/Z<5:JUOd8eMTF<W:A=KAV]S.:\0ifu/55VT)
%,FQ(r+YKOpeL6Gd:9DNU.RV(0Qh)Tc/.$jV@F^^D$cs/F(ItRdK2,L$b(L@]@ANcgp.VENOoK":Yu$6K+;bPk+uO2e-F-j@5]AbX
%Z+H]pq$+-[3&!]!n34dJ0,*rbL9tMT)29,l1pHP#<Tl[L)Hd63cT_c%M,I\r3"U6R'uD*0!>@d/.9ouXI#KO1h`*;P+TW':Fod7u
%VC'2ONRS60$^m=mXUs]4cptlGQ"<Y*3942'C^SVl5_t,q.WA2'0.8%^Dpp,mfo8S"AIkhdTmKlBogJ+HG_6\3Saisgfk8ZuC1'q"
%Kc);(1T6p55Dk[&F'SD9+:PYM"qmM?;'beI&4\Ac)CY5DRPGq_>)HbH8-ne]-6a`C,0PP6YoGKdDAW[3:?9o6^p;_3gN4pNm@K@B
%nj3B!B-6;+4stAiMU*GJU30HMA?-sbZ5H!;%5?W5+J#h0Eal86*$:$.F=a?/QgO==<GY/*^+>$j`:h9X(uYe8$omaAM9C&f5VJn^
%8ZJ4IM?XVNKN^ps&.DI^+m9MQ!1Tg80F7jBO<m]<7V"W<#M(Pd,=F7#g)\58+`/T-E)a'sO6&J0mZPeIJ[,e0bos5`(A@)BY"Dgh
%0KD-AS:Q&_5[>OgGRt9-+F/L4'anM^'q#cms!Xd"M'7Mm7OEipRWtEP[R.<PL^,mEaW,u]J-C1jDR!TW02!r#%D]/Wfm<b0fgh0`
%4UG).nF8D()-@Mc<<Lr)nE_rf]]T[-bX"#-3"eiHJ9-@8b.'_GUrh-M)LK9d=LaX3'$g[/#`UNc(:'&2fu%0Z;3=I7i/O!k.C:b7
%9`U#K_)*$*&r67LU;$8^-;j;9R8=<.c9Ra`.OR&J<T6,8M]IM;NL-t!F@3bWi]qr@gg!Z"LDdqY`5oHIi"'/+.M-:s'\CF[VNJc"
%_$=D^'f7@e>jt](fh9HHAcG+ohZDg!S>?3pLd$'$h@tYH83;*P?7\H?3NO'a#b8c9d'XfR"P#2`/(sR#c_uOR+_7EK81$sKa`d0R
%9d=>D$N@@n]Ub<&J]3H^E)_,p6dTF2;Mlid(30[UUi@&!J<BD41aQtE]N-1N/p](NBL"j>.]kcB<5P3Ip?'m(\QoB=q[k*&TOhr)
%o4C6rIO57n_?ggZ;0\$B941%h@[5_r*2_)Ek)6=6`82<cOi^.t,5cd"8<@4\`0I75/>P=^OA-'tojo5'@bCFn"%;W9!HBog%7W$6
%Q89DU>#A=&KPg*RBQQLb07kGlgq/H1*=G94k-5=_1h?`]rmI%T6HF.7\J3c&M!7f*cB$&P8IA`,;_gfQ[\tcTLh-l9N=/Sp)BGWA
%63HA9"6?Q\&N;S&$2*gdTfT0NHl;.%QdhmQ`+;C9!:NF;+u_V[=HDgJOPqnQ'L_MV8qImW)?RU+JVMN'15J"7Z?eg9Qn4\rO-E@a
%?q:LG.n(&?M)a#H2i;0u^f:uT+BnZ(@AFr(JMh"0W.K3_=]e-%\d!00,;(:(=qZ!*>X,'6(IE]5+>&6e6gRFUYs;j4Xd?>[LZ9\t
%=TW&u5u:A&>TeVj\X71a-nSV[5ikn[EQg!IqAH*Y,u\O#@]ML;i<us"$/T\&<AfK--iaT-!/LiGDZE`[eSk\S;aJdOl,p;G+TS,,
%MpJ=)":`7HR1MEIFqo?^.KLY$X"]jWA6K9f#]WeOaqn2=Lj_Yeiu.3kka956orJH$J<p;977`?HN3S(e+I[!iJt/"aKSRl>\8O->
%Y&.K=&CE`]Pa4ER@SD=6:N3c(fZ,J3)9Am.cU6t::d0]4*[$%?0hu$b#pG'lMHU/pP)%s7+>K^W!$\k.#RPlSO$oL?f:QH+-hJ?;
%)1X(964(TN3V3DDHt=%@BSN7tC-<)"(5`D)`9PIT'CAuS`M[S^.Z)sb_AVQA3O'Cr&)pT^*$*`]V*#W`9S#$&A=sL'mKG(2FHm0l
%4lIT_a^L1!<gl@7:>PED%jJp7+/1IpDYjk'9h[m<C=3T^M_q0j!G[Vs<BtM$U?qM3R&N-7)k7.6":HNr*BVT!.gj"Pe[$Ha:Tur)
%iA#K\_hrl)q*;A3S<N0Vi$g"9X`<[k6bWU4K-^SD@f4#!00:9PS?f3sKR+jJ:D?MdYJ0>XnDn#4fV[:N;h1qT>]eaTae_M/Z:lJk
%(J@bg"XJu1BE]Y]HJMR-,mPbGfV(-eOEemWdMR=_/[Vg;(jdf]Lis"/GlcDN:_lE4^f#%_#WXX@0R4K`OOd950J0M2=hZ<Cnj."+
%\h2E'(,WC0LrdGa)?EGq9D+_=&;%S6$V#`s"W[8!h0POB\nW<aD)PE08T7X"NWEl]+:NO]+AP2q&90K4j#E5QFR)g1,Z5.&XQZ_e
%O;Z6)EpB0RcqBg#*'7g!U40WK&>lF(#Vi2j96=_W&Rsse@)/JqRS6D25g5ujedHI`YYP7NC'h9fY]]3_#LA:/Fstg8@<oX3Pc[Q7
%jco=i\)Rqe15$J[5KFANHdr2&*_AaP(HQ7X(L[@mrh#Ht<!&5ZnUOM$pbW*lfUueC,LBX,iJ#R30ENMm`4cN91nmhsLeE7NX_G(M
%E<3CJ8rsa#!n'[Lac.;E&87a.7F2dFF!286qu@\*`6be6eH.N,m$]\Z/lMfBeMnM#3<_UkUG*TOEq^31R8ZIlGGmH89be)!j-?W!
%'auJNS)`%d.[kl:!=VL,43_0I0KoT>C?RJ`N'6j,kF>jM?!r&PGh<&]O6dcSkX=Rk;^.9f9))@ME9)NnZt%%19E:X*+OJ/FUh765
%(tbX83CY,'75ege2P_0U>8-;<D@0kX41*LZ%B+;@;+bgZ9QZaQhT%+idl:*<&%Jhs9*jKOQuraM,;NqhXAR%bKET6t+B\]6O9g%B
%=p"T-dOq?1cr/S:!9"6pEh:/kKsE3p)3:ed.%qeECC9#9/0\%_M#iJZA7;YV"A`"F&Kr$,/M2S4d)<F&_"Ef\%_9"rKN/]b+O+"\
%eDptB)A'BKJqCD-r[jTS^e+cY5Qk'6;k6Xa!!rDje8A=&@V9e5nIM@3!bq^4^d<j6.!F&ZcOhK\%:KQWp(;RRfSs^785()+IMD[4
%6K\@"!rJ%qU(B65_!W.$K`tp,`15=UZ*U->R*t&[%4Hn3:QC#,BRU)7*fU;#I#qkhmm4<V&j8bsL#n9i!8%E2$F2DQU`$sn-'Gb@
%"2I7Y:LKcJJ=?RMK[c`$/VT&4@-Pkm3L&&b<7?In8Ia0o19jfTFDQA=+VT*g3#+`P:Q6:4D6.cTkGLTHiLWUqC=[Yb3K>A#BSpg4
%1bA&'H455`2,M5Ajs!q3QqIk=-IQ]["#4cEA,r;'4Pd*&_;o.3iE0Yp3#k1)jg-=F#W</p;Hu.8/:N2-Xs::Yi[8Sg*,hW:/GVNQ
%%Pt=0LJ:5Z_pjJk==g`(AfEucLj^#tD5sI:ecJUC1pOqI,:`u37^gZ10#OJ9p"'1=QQYi>V$aR@(-I1,B.:jTMX1Wi)Sl3f(Q&NE
%`D>9D$0.B$-bGk`6q.&1JE=tB>RQ)K=qYCh#_IKJ6F?sVL1DlfY"`/t)"peYd4fL!%sk/sX!m$CqD]H\Fi_63HFDa#'SKire]`:'
%>IQ^YBKSZbRAGZp#lQMR$ipq17/E\*a%BHVlsg;W9LM$u>=0'HW9Yhj^!-Qf")Uqf!C0Sg!%@FRJ1)3satOG9!2-el#6D1_q8`X=
%eJeFmL@Q%@?5$!^$&n.P;62SJ?ut@Y%K2u8N,Y<.LP<u$EPlE&HaG!fU_Ws?&=fjdLIGs*UIln,"7rO9/aNHuS$2s_HW^Z>6BG1A
%$k97&aHX]md%^pbWa.0/[,k+Bd1[D6bn=I"^kI>e@5_2rX<QqVJMVJ$.mo\VZ\AsA`!P3e%1$&YOK`'<Wp4A,.F`=q:)9u[1nFJX
%?^6&#n/>K&ZraJ#-7e)c,)*gAfWh^+FN(,NRWW-E;@cs%a?V$#(++@&a$,2p,\R_K%SUn,R'=XG63bO&Zd1D=e4+>'$;.#d^bD!>
%\-GTWit?+i)%"8R/od[N.heqd#_G_3p4[S+,<`s/!;2:N#K711QKI?17gicW;,IT+8Pj.k\/gn\l\jpEeiY@B55g*j&Hq0+;#P36
%!%cA$I`C%I$V4jYXJ1G'GY+m>a!Io>M(;lWFLB.c\tCh#@aWmR!#h4J>5C(j3<5FRihWU`-7gR*dZ!Oj`Q1h.V-@A!YSLOh=DYj1
%ZCugaLDJ/`E+[?OU_m(0TRrME7+KgRTEU.=/_`<b/5V$@&H+tVJXU0odX-;'KoNqmQ>20e7Oc4kZr%Psn=\rpMZ?JN8qq)l;8!r5
%)AiHgYDls*$_34bBbj$"&CtAX(9H]HG!j/;"If[U3"]GPZ62F3&k)^qD5Dadfd9;V*]+TKILUr:$p\*XJR`h?S?V4pp.@7GAn,hr
%@76,D*p&=o:,IU5Ko'ODc&9^?"^tlmP]>gn3[E)pgZD6j#m'lOaUkgV[8I1$c]GC>L`AcmWN]h9KI!(4\qPGgARu9<6hD5E>tKC)
%Va^d2T0?=U\qm<s#BU5:E!dgi#pX)m+s9f(Bfdb9Jb7FF'WSt`+p2h::>:k]'*-HuXJ<X_"epHUg?7F*#BHUM&qsb_mt>jt\?,bp
%:-^C*<T."<N!$Rn?4->L$i):3ZgBT,b7NXZT!P+*5XYolD^#>d&B!Y.o;17N-qrlYog#B:7J8!KbNZnR8BZSWF^l7=PXDqi6F#J!
%0,4Rt"q!q#H4WKEN>#sLiLrQVe5n.\N_'@(\]A".'$CX0(6CmOcH5^G&l:Po9O`R?J3_A,l3^,cqRM0(Pi5o'[/SL,Jch@VN+pgb
%6JTP<\33Mg:u.&":FHBPjGAE<bI@Zp6&]&ZK*Xq18F9!AAh,NW,R/PtI%[i(d>'"n9Kn.%or("`g_]K,0X-8VjHDP2!DIP`UN(5q
%GQLU6;(p]2%kS)D8R10_:.YFg!?NVo"rn50W#6FR/<=0K0e,c)PN77c1MeC%Xea=II4RG[,4YG-Ye:IOE@ddudkK$X:M@\o&0)Xq
%-$iWj.bIVX>W<$">-*$=jFo$S6^Yl.ppQ\1Q6F%K4nrUDiD"8j;tU508;^M80+(Z%TgVV.KLI>F3%UmA4&[]<Yf+B%&car8O>(Y$
%*+^78$:#5>@qVQ,f@WM2W7N_X#1:eTC86LNjCp'>Afc=kJI[8'L7s$X.6&6!!][SIIt9:9"KSU6^+ofqAQR3o&p<Z<FZDgDRqQ;n
%_$$?h`-GN,Fskp<OEpVS+nu+W6c`+i,;lVJb0,jq+."t1/)=jj=6&W[7V"((46bTqSU!?+R@D88Zbbl>fKK1,2M3>J$`+BF:D9JM
%6OP-F2,65u[5AQp<0;7Y@("H[NN`WM&4Ut1E4/t/`JO[md@"5O6j?;]U"(,[&g=W,06A`M#3@\"S$:2<:U^=g<-WdXL_?@'LrCf/
%P%kc^;?3E,Z$G!@0eUBN=ic&)U`bq_YXP,hd',%JDK;PN"^tCKLkcDVLHeBAO&;JXESB)caU@4'J.@`1$""L:gLnH25ec.V+B-SK
%?bdcl,tTD$#3V#E/F+bl8REM$kAWZq..Fh<,'jmLOnkM&J0U'Y+WG^#e5PCHif4RaYm;!/aXIdolASH$i@mY,=Qm[#$-\._VuXUb
%(oJ7O&ggNf)!$?^XIR4VEDhl[NE+1<&1l!1H5;G*\6?-HVma_cQbhWIAZjMh(uPgf.OeaZc:9!#;OT4D"R%>u92ob[q))&9)Fu(k
%#(pPVpt!dnL?]J'87a4!b$guIC5QVV8W(/YlH<8CgSIKs%EM@)/Oh9jc_-PN=q8oUc!8A?#(nESEj_jRMFbPH.<]:Q#U/38#=BlY
%,H=`HgIS7UFf:1<!C2I7p/Sn9=p\<S$fTj_<X4&h@T6[NLu/01[*C+j<Mm,:Vmf<C&Ku`ch[k^e*"[f1^'k/GMDc\%I98!.O-8t.
%Oga\E!+"T:#kpWa&DTmW!^o.YU`ceCBU;V[m\9BQ4A&sp`'>g<,q?:".?FQo6r*hd8/7FR`"Kjk?soTcNYdMm-YtSlM';T.l!q5r
%>qM+g&ZRPkFVdnJ"5+6A&(bk'J3'Yr=98$C%hG3W@K7>%=I>CohA`tQ64L8UTT!:Zk)!'[W(?bJ/aUD"NdtTe.?soR8jafDb=%.4
%=,2qDCHQP;1^$8]UXfuYG@?lSE#:YA1^P#kM5^8Y(-jUTbCf(f6Lg`VUDX7s5fnYF'@CM;'NGu:NCM%]5QrWPdh^.Pk@/*QkO:#`
%c%5rFK$9[J$i+Q.Tmcuj%C$s/j4"7jT8$jrG:rQ95R@'1VYY7.F59hY&O;E^q7=Jb5oBBe!,UZW`K4LJiRl]'@Yg_]U`<f?-u^)C
%#j63lZcIGY<lZV;)2*lT1d4c78/1\5(pm['"ccIld%t-s!c]+U)[dL6B#WDCOl\oB(sE#,Z9fW_F^>@G#S']4(b?fnOm[kH6hMY`
%_IVkd1J11^g2:<)91kh91)WTg'F&K$bbOVEUB$9n2D.H#k\o!BM_IT@*JhOd*<G"E0Rr"p'J"GCYp^f.bF(8kOt]pj"Yj_k`j*oL
%.LemUaj>C:6T_-_nl7plFl>#Sb"5qlJm#<[#f/8MhKip5LG6U/!-f]![6qqAW@s`L,$8suZ"\0$>P6CZVI?,[7>Zag_]to0Si0Yt
%[^=t+SK+Gc7/F+:qbDke3mRf-2Q9[a'98MY&48:4dD48)!)ZeHBZ+j#SWd\(c2cuRic>BbOObL\c,#dTk@JD16bq=t+IEGAk)c#M
%5?"lu'6dP7JE!2/S!b^9Bc')c0RB&d%("Mg"Ut+2/6<#Up!"[Sh<Kef\f.ZhiQ+;Pi%g$'6,JW`jXpOXN7\CmI*?RO`mmM/1A?mu
%5(5tO6iJgifFq?*f>mq1LdR/ma6*R,3S5`.0K(ZnQ(N\K`e6Wk"QlO7Rfbm6;$9YQZtH1B&8'^fl7`&IbVTU#<"[N5`u61[+<8:5
%B\[$Z+[t$RlRRIAOB.GSTt1!7/J*C3,$,"EEd%j=&k(<=74f^.j:Fa4EsI6J=)2Ob4+!;_Q_M8/Yo1s)YdYI"1rPVu"J*Xp8t674
%pd3cOJg8?UM%oZXi\M!f:4k0,(c-4JkW;b-PYfOZEeoT#Du_A+71>!KR2Rej+g'6(7b9JQ5$$>DU*@B</N'M2TXtV?$[lJ^aug@P
%'$3iA&)i;_k89nSM6#]F:@Bi>Yo7pcF;:c>!4B-&6r()77gqmN(gT>-%++*8;_Lg:Ki/@Hct761Oi#-:6"a5n4TVpSm4fjjKu$8O
%/Ja85KQ.kRF3C;p$6[W&W$VTROkC?Ji#rJ=Ag(_f#SeagRl4#?g5j^PQLCYj86E$C'fAot>ZcMSaE,Y@i_qADJIE7NH"qpGjX!V6
%2;V._L>ES?Fn'U$T_F+S(.qIN'!R4<``[S,,2fi)r;iKkR!qp=g>Jt;dcH^"_IoKcW`;sA&jXC]Lj\lIicD2`4'G-?<jU@b<^X;)
%R5<&*E$<&a7HF2"bW1CS.osJ8L"]/L%?l`<[@G&nmXr\p!/I2*T[!p6#^fWTMihk\<?tEgQDc58H<fO3V*'c:lIT_O9L*Pkie8[D
%XCa)eQ,?#62,jeoX"f$r#B)b?]5T%$EZH<OFR"XCjj$X5@U_Sdkl1p)!RMk\(poSF_M7>g_;X%c:$=cCfFrs]^_)oPmb)hqbEH'$
%(dG=uP,5mj-&`47^qrUAJ+.9jP=?o,S4/6]"+[?[)*f]@ett6W1p@Tu62;r3KEfG!/VP@X-6XQY$"G>GNQ,V@1lZnfT)ZU.72RH0
%1(9P1;8mZ=L/Sm2PlnT[<f-L5;BZ/N7V^MIWt_J!asf(l;A\*V+XkI422'rs.>#,2;AXX\5[k1uc"N1?JL!]ZP0D,Q,bgD;&C8Is
%:9S8G71cF'.e^!m/r"QNib*F.j]k(8:_VV^`(.Yn(aD"=BMY)oW8OBD3'U"^<*p8&Vm*Op6D^?K$2SM?XsSl,@,4_'Cb_-PlaVr'
%VBCBhlf1Ot?Q\gt!cS2gNV(5]'h7UiP64s<E@#QtP75#&5c)X6Qif?o(BF:raGtZi0G6f.EREjQ_ouL>^`l>7(_=qAA-)JO5Z96?
%Oq$uDZ'7Pn+^kdg6r8-dU^fQDQoDReYCoHu,)"1_Lee.?J:&S5Mm8HOg;F&=W@7gN9D"=Q<![XTL@G')""aV\!6m8M%!?KU`(7EE
%JZS'n^+o_b_YH_)@T[C#]Wgc?ThQ75@<]e4*.SXM3^O9rV>(aD)N)30@$G=B&-eTK>el"WLCn=@0X:af"5jNOs+$T_"@8TFL&rQB
%,7:t"oYs3,JnUam0,ZgI5IUC0UkJkPkK]dKE!AQEJ-)4Q+308==nE;V8`H]c<YIPXqMeu/\PL'H]<UYBOP[BKW&XnZ,p?h1=UCRr
%%]oAC=SL?4i9SHi7B6FjaL5L3!=UZ5oAYleH41\AZRNc#)^mg;7QD9m+ZKM(FoL/QNQVkjmrpWf^qio+[%O,>a!!`V+k,(O"fMAV
%0ktsS(</[3afW*mO0F=C(ca1PW#QJ7<Kd[8o-7^<Cm6>\T\._,2qVE@8W\ninV-ehKofNCTEN,_6"Zu_Y,H>+HEs%9k9RMak+Gi4
%ZE=B+6bmiN5%'Uu&\)]m8B-9`58tnXGS+PS9dKUp.\Z\To-2I=K-oM)MEtJY9,Qfr6Jqs[Ae!28#.ko:.ThZBUmQX,1<3`38X8Qr
%W\#^O!hI+0>$<Mr]-5iS>L43"?Q9afIVMZ#ViY:'5c@$?4k+d_Fl7;pl1p"G44[A9Qb8$R?2-s-;ujMbF"^9_WK<XT'SHZ&Ae;1S
%r.ADZ!E!0fD-1I6f+ipdXIa*Y*&%cVL<]rC(bLVK6'_W9WNd<Tflo%faJU/UM9>lQ7Lq&efq>4j++t3Q9Z*Y>8_1?FN%@9Tl8Xm/
%);<['bq`kQB6G_V38s%p'37V9l!H<n!=W!s[07H!8Bo3;0jc]XZr8YE$AquK`#3QV6Bu6D]4fruAo4=RFnL=khc&P9CmU:UYZY3;
%:]Pl;A^OZk#/+2B:.u;Y]A1Sc[m15F:]OEg0YCA;9sJl3Rla_kUG7*-@<XQMB)kng>f_%o."kH#4`V,f,XBA^d2fHr=uXNc6$2\f
%5[:"X4Of`IlopEkLaS/2)2pE`+l)iFee#L<d'X]?'>RTK%!9Pj>0CTj>>`J:)$`mRp/:r8FdQho#E.-`K)sADlT:Fq\/dA9&3so/
%&&G,![kf^Q5/Iqe9Mg=2&VL7nLfj$EHDj5`$qc4?B,h;<$DKNRM:E$^`/QIZlE=[.$S!=g#^/S2T"lLK!!;7N8obm[JM+eb@=X=P
%SZk]D.'tcR"'po'1djSK',77_*r;DSN$fOY8ILM=L=<qH+<7`u7f*1Q(S+I6ErhF`XKa\3J-Ok1U/Y2mA<?]3=pPMp+UU''%f'p4
%U<[O_ng#k2k7QnXDWcOu5h;=n*B`A(ZX_B#aQ1<T+'*3=kd)&M8WP6>>T$E@[LBp#!=4oNBrr@E].;kVC$\1cE2<5HfZ6uL)EFu8
%:)if?BVU[N`diFOf5]=C4u92o9f5@GcS,kFEcmJd#Z3]BPe]h[0^DO]1>f$:'cWDl;J/@SIGIRhk.hPT[lFDdQtLu0V%T!rBn!kr
%$,u)W`K$0KLcf4JNlR*u!4`*^Tia`m`]Z7_L"X@C1IBru@pms/CnV0o1O=\VOtfnf+=r^>ko@]U3.@e0_+J#<0L*?Q;A_.t$l:$/
%"[e5?W.6^tBa>\Uq'.G1N/)r)k4A'kae^8;4:J/30)-WuI`Ase_p@rgS1U]4'KVA^Jd?Z`dQNr)md;;k+F"#-O$W4[e5B1?6"f&l
%PCU\>@E#&UO[a(O"sMYW!KBJQ%O*eS>QY1J]&k0ERo$:967"Wa0mQKh$4TqQ>`(E.1l7_BCTK!FW0G8qimbjB6J9=hk\K[:%`"nW
%.U*]C=.KpTen+=Oc-OHQ.[HTp^,jL4OXK9B-R.[l7cWXHK[+/RnI1D3Vca4Oj8KI?N?BX(Bfj`DElZ$RMr2A<&]cU=BL#?Wo.bZT
%OVEP`%"aAX0nP`80BGL;E?R`W9/$s<>"%BJ[LL`ES-G.;$[EKZNmVTs>QiC/:.9.aMph?]&dtZgEL@esKGr5!1RjU@/@^Ha"*@h=
%$a/S>$3dZ>.tG_M,tO[U6<DJ6?$I8kf5gs3?,VO:(j$UV(TNC_.r)B2+1P8o/gts.@XNFr&2liY\I=()\EJHDPe<AZDjAY'kR^)g
%T<+*nF(EZ?8/7FZ#W5Z$@t)+6DAbi?60TpCELPWA90`V?+uEUK5&XW@Bu\<lLsF=`-WZLL!3Q)@Oj8X,U`_IAK)cka#ZlWHgjE-3
%@=Ea?0P]hXI,&$DA3mQC+TS:'PO?ZGOCSH[!JO0qkeuBcMj_Me6+Tq[ZH.8tMn4&:\2`C?eUGJ"=Pf?ui'ED9*EJp:Yo,1L*1gd`
%-U^`[Zj6_`>m\Q).4bn(">UYkgf*@`'+1CjNCQWrjqLJs=!7U]4<'9Z;Wc2u8S7<N6OJV1)\r@>CkSL;gh0/-YmWMbot!+T-BN-G
%84bsmB0jEZ`&:L:S5X%5>\8LQK1d#J]hP4>Ws&bZl34g]_*K'01*L2*=Mfl7bap7n"XHsQhGqdNRe-\ZQelMAl;_bQ"Hg;'K_`;(
%(sJ8=XR*"^(6HlugDV\",fF*[FOBoXqDGlgd0/ki(#Iuf7!M2"qCXmN#*NSt'a9['ASn&7;'m@%98Gu_Ag?nrOZ;Y]<Y%+KCRLCf
%;3\oKM!\g*;NTS"RF.rR!iZS1Jn0!]+Yq7<k-[h&G%?bma[13_H8cuF3[VI_!""'gEeAEm0o=*LK.%MGE13qA##a]CBRePo#?++J
%-+rp]!58+6^7AAc-[t,oa.Y!gd5&d(FOhntGGj&DO9o,ujW<!2*SZ.")ea[HrIo"Z_5St.M5jrhc$E>36:QMZE47SO2>,KDmPC",
%ek=(eer>m&E8W,e?58c'+.'k6Fpn^7Z#5JT\;hQg[[m/"Q&7jQG/a+5'Z7O0;FW,?J]huL71%>Sfcu.\hft$G+Qe"7",,q^;.Ati
%o--nt7-Zd(&@rI!.FC+lAA=m.3>kHEZbRKONj_J'=.(e$DD\)H@=a8BL3OWfhUO#Q"[[i-2A]'PO``teM5Sar(>]SUnm!pOj$4gu
%@R:%t-UXX1'"]BO6em`XPfO9MFb*F0V<)0(q.L;ZV03u:8q*U$+U$Mkn%!+ELn[Rq04^[P)OJoNOGZ[jQqY7N]OFVAi/obr]n%=/
%OpCR[-)^EdG3=/'H+"><NFD#f_N&p-Q-&AUSkF4O+`NTt/giH1=cG8])a[(Z!n6c/@)d5Cl\:YncBt8f%ltk\Y2hB[T,h;"$-\80
%^>`kddPAq!&JL#Rr$5#n^)o';Qs);%O&bR:PIe*Hcnc%*UfTX/h]k?*[jraj>$;a)$8?2-[!Y^#ES4'kb)g>Yf(+e[ZX:;)DbIRL
%qY?tuo)Gk+MNtaLPn3>SCjbYnQ*VZUOG)mhA54c@kKs\l;4C;\V#^u5;A-p3!*>=+*Z%D#SoVUHq?]e<)ZZiq!K&\"%H8jT0FAYD
%`>]@.";Tn(@S0a"/C]Jn5e-Ri06r3ZQV^D;_#XY.!gjRXEA>\^<sXt%!a8*']j6L#\Z>CN9iE9D%VV2>emtN7:nS$iUk#\<E<5%[
%@Qs,"mKGqLb()%P22=JTLZ:F'Un+SEDLLH>5F=*`90Vjqh%:F@:17[&-'0#1)8jYV,;C39S_+e9As#Hj&]fYq\o(h*71c5&9*qd?
%VO&@p>8$,eiW/seR/2(I"]l_9EM'^D+Spm/1C/E_.bU/=OfC$ai&X:RT$lX@n.Hu$N.^FgHp@'sAr*QS!%!e5&VRsK#;ZdlUd,\D
%9PD(.b\Df5^eejo!m@&Q;U.fF"Gt_#dAVPLRDgfC%*QHaGGZYGcEVmV"fVJm?PQuhCZe(L#F>n4CdB;RH\'Z:nl;bQ%A.&-1fst;
%>u2=+?5pJ5^:Ta4!Xg[G6pQ."QU1i]pF$#Mk.rT6J`bSd5VDI\@TRLT%5WVM+q_$$EkV"O?/?gGgBs.[m3pGr'u8Q;8>q,VPi.O/
%-I>d)VZ@(b#>d'W+L)&!n-=MJ7GPIN2?\:7@4DYP9TuLU!icJ*A"PN,_b].$OI(e]24jP%U$W^gS=6N[%SL5h%hs3sa2Ep+5U_q\
%]GnPQ'17S>:j"[rMh&=7XP-r>DJdOr+hjulIEJntDZB76R'-j*UA5'NO>tAO,m,>[45md2/iKT5@u::Wb3V(Df3phOnVK_0kag2@
%C?RRL?:hs5#iI^S?sMhZ]<=;H$)2!^Nk>BG5Sc3'*hk%Tdu`0_-SF(R9n&dK*'o.a-ps+pJHjZrD@OfDUu)\aLdn@56F((=kQ@H^
%8JQX6/PWll"[T5`B9c-L3WS3@RL:6dblA)JNhfdY2r$.d3Fu-GqGVBQP;I60lCQ2OJOLO_P7VaLo?T_%+i]ci/o6%Q1E[l"(^,^1
%2;E92o6(GY;8^qP`_%7=kGdI`E!s55\-j;h,!I0DAe"s:VS)XIK=JVXXVdmDJ^ZW4BShCsc$.PZJ5EEo\PM#.A/9J;?ka3ZhMl,+
%Ot/li"C:aGbu>p?A$Q\pS=i9TZ=KReLI5br1I=EXjC3$/lZa7K/:I$hKi-3]6nb#^6!sug*HDt38<X2(5%Ru2^@S?+R%L@[a%#Ng
%FX*_c"b`D>#FnTl[O5oI9aHr[JsA]*0iaLE.$cNZF`LfM,r>Did(?CcgnbW<;fF65_$3A*;V'=fNs]"jNH^UEh&W1Z9(!O(T**Jn
%dW]%SlThEopa1E8U9)JVTCS]_gqrCKJp>4Y7V\2rR!Sjb)oQ$Z?34<D];oTP``h0AO`uU3&m]a+0e?QqNqiQ^kf2*8WFCT"`%aeP
%,o"<r5D((1*]+YX@GHm%*])[l#S==W0J6],L?%8^['&+=&3+r8&h\]R)$rW-FDuu$Cpah_`qsPoMi'Tm![t>Ld\hE7IVF"$DrQ8)
%"RTp[1f@oC;E?;F6Ii9MD7jq[1%SgG6.i#_-gGPk&t]QJp@K1um,a3i]YiAB2Yuo`#g];h`i#P5W&Y="D\':05QcHliJCom2d.S3
%'Eb]0MLODO!9XY2H3"uu=#-1p(Xo1KFCdU+:,"sX]F#2gnc@-7_@2$R&Pd.M9?!Y';Eh-ij<Y)eVd<\,JVXMcWec5R"2kIN,a;]f
%E<:3JhHU_,"=pc1RYb'JXK$S;XX!ce^)Au"6(E0eG<f#af.Ft1(;UrnLmq)MNEdm)6Y]>qO8/,KEattA+PIjP_?Ia,\3AKd@%LuC
%"kgkjYcZ@$#D`Zt-33YDkK'/_Mn.1B9BI=3<[t1kN+rY9^hVAu@P]l4:0J3UlD:@HM&LneIWMe'MUet$2c./0<.];u_*1FN#D*?F
%@^q2T5(]V@kcce1+n!9IqHZ4-E>FQ@]lE[niY"^s"(hEFGJLi0<$*oKEZ)n6`9s@"6jP$c-jRgA(hVojP/=<O->1/+LCeW;0aqN8
%W@Oh4.-JDTQUAQie_rb7`=O6DB-Xq:_"lt`8G"`3PSZ$(I_j>E0MEmN.JdIn+oTPdfE4PDf]&$EL+j&*+nA3:p>?Yp:r/;;s6S*p
%f-:u@X<np;,BN[$!$]bf>SbRlbhGQB#m=#AhEW=iJ-Ql,>ZhL;`d$]s7?Wj@4qo3d46/io\."u'E9Sl<Z92a7GS+u_DU5#BK]EUo
%.rV'&!NG(H>78=Cp(UkZ1>fQk&1fK_Bn`78Cf.fdU+ujJBQOeTJ<Pg_?k.15)-'>)6.dFh7,1a[5W??`&F#^,cA+$d%Vu8'Wa8>L
%XR+GnO\CU-on!9P<t)o#<G/5WS;tr!)R0?6CZN*,5MhXMk^l>mT0d$nc3F9(R?8;tj=A,,j02^]N1WBJR!K$.#d0,\0,9pdM!M5^
%E<l)biiZ\]h0jK,dZc(Gf_G+\Q[n=3"TZ"o](]5>5bs;mlPBetDb"4[#L_^-UriaufP31Z_WZ-C^d6;HRR)q%H'/_4adAJ>O[1a-
%8Jq>q'n``S\en(O$j^/LXLcPB;ojqPH9DeD*`qtYU<g=li!;?W?j"'E&S.?Rf2Yja?u&T64QPKM]1/*s/%@2FL4?or-42X%LPuK&
%!Udsj!;Bn,9JLVd.0>8T5ltne'f06Zl40L:)ULdbl/KMrr&E3<g(Tg%)=VZKUDJY%cco#<hgkJF:IXkOYNAnOB%GCl.p"-+5^6MG
%<:+V:GSAope;/>DV!_P&T3LF\QloErE^n3n`+2Nm0t8ehj%-.3Y;+.,61"$.N"Yl>-=h-@_^;[7DHstf9#4_V:(go.E\ra'-%gD#
%A:W#=F>mW^q&0L(2hTj"&93m-"\%=FSE9n\>V'q[A/L.jX&]X&/,Pj)NgT4(Q!ohA_Q2E8(u*,@+Tg\qV(f6S6*.;`KPDUKl/3RI
%Td+^a^uf(J3@r<r+7'Od/mfVic&h\B9:3;HjF!LAX?^.=GN.+irAR9b\9s9;.jC3%L*,Gh"piN#/(kPp8`^[3.Bg4?FbLYj&\@^o
%+?Ct5SPjc6(@Ga4^K0?qF1;72(Ifd+\IL<;_c'kkFFde4aJW`/eCTML5MiIBO"/)?b^\].'t@JA@8lhT#Z-F<]js'HUk'FC2-;-O
%qs:8/'>hrRJM<3j"[ZH_L3_#XULB2M".)XlpqSaoT`e']Z5&CNfD34@@<b-nOqcrtq8dB6/InU(hF`G<74p'r5#T(;`Fl1O-uk^5
%_h&iu!a_8]@!lH&F'_dO(*)lp?ttLJA4Ysq=/+p_*f9?',dnU[PMk<I&d5IeNcl1'?3lp31#@83/!m6\e((D24_lnt*AA5q'6g&P
%+<mb!'Fcf!0M\II8PkpqfR)Q:A7Q/<]S+U/Z.<QT$L_&.arYYBj7FJ4jA@,!4#,*+jr$n-o/+MpCDU0L5plE(_)To4s21L(]s]Up
%LgHF)D;b@i1haj*FsO$Te)*YO%"hqSc(U3VSM*81]a)e^b^k(/4Wq#A&<8Yb5V/ZW@&e3DB6l>hFn0P;48eT</!N*,cP-iX28-H$
%\;68e8[sup&U]*_Fb'`GhVX^1Qm\8SJgAY,;(_l'^thXc5`I@-O>0uaFP-/I#7#6.Wjb?\MpZQ1[jnNrRXp.[Eq!5)gG'LmPNlAg
%\;/!mMXchC[kMshN"fCr:R``H@A6:,kn$g@k.MAp\mk_7i)\26<3morMZBrR/4$S;d1Xf-]o!iic6-HiJ=mUK8R-QL"<H&'95.r<
%Ni9eKbO7K2+k&\pk$g*(/9F'(3&Zah2ku>I=#?)M6BhJT`%)a+2M&Ke3aD_?@Ff!!1/]]SR5N<!"FU7qM-O4hPat1sJ`uYAWG"P$
%e-gES*OC8u?5*]ITIK/?W]&aT"OjoJj_?"J0T69V\!7go.'/crQP@Hh'CfNDNVa)@pnItKoK=1sScdsUI=1QqX=q?kWO"cq9kgpM
%ds68!BXTUBlPWrHnC(m,8a(H7*7g1Se0MlO+;rHY'Ij4UeF>j[`-m<4dK0kX:7XqnMTC"jrfD]n;sdZOc<%9%:MAT.=G$2QQBm9J
%4MipU5,@p9-Vg+`V-4a*_GFsuSZbV^d*NUiOYVGgDa72Z=omUT-tu`.!@*98W$,F'N<B<$,.3d/!\TRPVh/l\<8i(eVsicC4-,=4
%3,l\*BEH=!DI#)S[O@Fn?fGt>oJOrH<TXn*bFVX\S"&scgdtD,E'i_`4<k,Sh,X3KHTr3rILrpL"=-^rc[[:G>X_s6b8Y-FBa,k2
%9,R>IPn_JA9\[BrlM/$DK4+oe"RIh[U`:68/\H?r5-6_3?R@`,Psto43EDmC7Vst:V_gC=EO85WA2>@c).92c29#=()SLH%DfBZ]
%$d[H!9jgrA=V%gZ&uHu7Jsd5s<0p$CZP;V0Y=?ojUaK@qFI:]7Qs!/k0VRqOM]QQ?D0]J`Dr9F`U+_b(:VDsYGM[m]+s`?tmmprX
%;Aencg1`DcM*\?HD[poVfc`HqJM#/j`jfADkXY-A!Du"o$a^Q:Ku&)a*3YRdqaOJ-*F5H^#Z=X&n*Qbs$Q!+4Km6X*Es9Z.Fn(N!
%r_c)#f2*Y,MY:PI\8['/K;3CU;b11HJAt5e>.CIj9Sf:kaK7_b2,F:C][PCBCP=&aYek$dfS+[WO(Y"*f[k?=AS[tmoMq`>f*87U
%?`uJ#D?RW*;4\TGHP?2J@94^RHSisA]RH%<+j_1/f10rU!`2Kd#e?b-54qnIno579TY`C$ntm4fF^VeVCur8s9W07Z8fF$O#BbRH
%b.VkilgB_m&P8LKQIm`9<:@dY!&3PJFVGJR.i51Ll$Fg1'2h,mA&dKm/[a:$Gh7Mo=#P"%1`[gb,$$9\mr!7J[h+L=bKKZ!^h*/'
%'aWrCR;ltumHWe[oL@gE;S:Nk!+*p+F9PujQ3.\\&E['f.Ekp%faM1qAb:+;L.m3)W2;e'ol`UWV1;rY#1_fo8gJ_83@8/+<`0*C
%oqFZJ*_M-j'L&p!=`^?Xna?+,i\o^?]>hmN#?i(lSV`nq"KH3%R]J58fr@ueZ+5n\!_,%<Lp@8(<O6u#&7FQXj[+o`2XZ91AO)>a
%Pa]GD].;Mm65pLgD.:K;8Df5Wn.q4iKdaKtLeJ<^/n'DI"kOc)VXoln#P`f']@p*)Y4C?cB85YnD@EHH9p?S?fMlq(f>mk?(pK44
%,E?I_/X]L/\P/nuCbe^?9dpbgqF:[F<bOeGJ(6aubXa8X=7B:E9\N[=+/P`E@VXVQ'+LBIo?m.lcb&o-GL#hj`g1]>jaErtcKj?M
%m'G9slf7qg*o>GgHTkbh>_pUb&^;o`-7oC8$PbW77U&VjP$!a/m)JM3)'k1@Xqf&=WB&F$<>0/C%Y]Nd>9k+L$"S9OiuWQ?Db)?4
%@ob&#/2?m&Fb0aI_mURI@EOa_[ET`5Ms*SfVKZ&oU$rAX,1CSNP)AfjY_nV7(&JM@9=4E<pPj9NC1`6t1*oBQ##Zce+VkQ1j<sL%
%PbI*Y*.5lY^k&S?IkWk6p?pHgA45`Ujb$#4,+WS@h29?5:2Q6#?Hc5N=4'0M<O/P;caCDpR=?p?-2W_VYLJS;b__YL:lL7=2Tc*E
%8A7[bJ+EZlRf<B21\9Yc4_cu5/N*`NMSkDfabN:/g;/qPMSU5:A$+*8570b"@=S,@@A.V+>kad%!Us?k!Re!F(!fW])-@`a`D<:u
%pgE'?fu!CAAY;;%7!h]2`.TjH;e<.0F:W@-"qe_T#:"T'`(SIj0I2<`PipKLP9qNA-$<MCI<9g,D$>BL?rV#rKf>aWa1fnQZ[#o(
%R5c]l/LAMf@dI&bcY)1ZO5.pmk&49qDc_q?Agee&R!ArrHrc`:1WV(@$TQEu2d1011r[K)1?d$R&Br9VD"KCn+l4)^=B*g;!`(MV
%9]1@#Pt,:TLNO-_%hh;nmNY4H-lUGKZ-4/+XC/S6<$"WRC+Q_H0WLqFjRM7B.&b,TN,aM+',H?H9\@GT$_rlui&h!X)D'%a.^E^^
%L!g<FkX)L,>^U:\qI:m%>VqF.M'*RcSLiso/=hs\aK"c>cn-0XH4om[@"0#K*B(?.4k$[qOB%RE*_:RA;#7n+/dN*,\@i_2i,M]?
%n\j"8>m2"?#M-$PW;5_r28\nigJT=mo!P9MW*c=_.af&>8P7b@;=b+a)J^5g*^5%D<EP.9*3"KlBDi+E!bP>pD6Q4MRRU;,'RYH2
%JdW+\i)1F^Q1i1L`J,fd@_46k>%Z1)h.:"dVqj<N4,RK7lRV1o\>A@Md'LS7/*6&pDIi,cN"%ocGZ:OR;lpV!fW`;W_&Dq7NER.a
%>*S]e82mR]Mq9RSb5LfKc.In//5_=lD$WqNh+5*Y=:4/;;Nd(tF/`clU"c'bOTp'9"C0;I=pb81N2!\5j_Otf!:rn+21ptr"[6cS
%\$^BUM\VU@9rdkol:\(!kEO@Nk!Y4FU1)nt.sCOf$1ghjT2o8U=<p5bPjG-s>>d)-$Z/pt&/+XIaaSaW3;Fq`c@f:ak\OXh7M"=>
%2G#&jK>%pY%aim%L/"+*852+LjFKXD@PfD\I$>6K6-nAk[8;FjBeh$YO$J(0.3annSr#$kpJPOZE2>Rj;a+S-&jJ78lH*&Y4h#SV
%:PW,u)^uj=OYDZ1;eSA#+sVdcKo6pbA/96CV!9K.F/Cn7eP;A0.,mW)!Jonf):\@PeV-H@;/85rhAB4ZNHT#%Gat/;enRW!*SnY#
%*ML4&BLXQ+S>8g_OK%Q%39.g&f_1!8Jn56@3KG&b;Z&gaiJ3E<V>Hsl:MMIg'"X6k78g\J5h%==+W2',V5Y4=<n3&'.DjUK)tSEF
%XiVr%91g):0T@NT>]qi$6+X,*[Y0u<d@"1E+=eaq_;=H@Zcm<s.[l#i<rTPY4._YbQmTdm`C=TcF:9MEF[W4gV-j\4=W3-?gPof]
%7;Bc%U>Kg$X(\L^6^-4j.JYTn3?W5CK=moA*=f;&N5)S6b!O3n(p4e2CA=U$4uA=-7@IW.&f`CjjWp,(A#c8YTG2$Zojj>,0q`L4
%W"VX)<!<]=)1=(gCV?ZW.+1mD<)W3GY]^O\eh!/anoCW8KG<Wj+MB&n")Ym9X,fVKN[=p8.:Eu,#WdYinKG2cZRCr,#RNN`Xdr\^
%/uf+J&gb(J6E7kk)G2;JCeH[R'Le/aM.I[pU5C6p@G$.Hai+1o2?:o<!`uHs7$7nOn=q/+rb?H)BFA:k6:DZZ1`/(\Otg(1<8fg>
%UbHf@b3R%&0-1CsDH?e"2K,k8bcRlg(G2Z,W$IE)02n?[\3m'idi"D04gC5.,.T"c[ZGA=BKO:'P=1.\PG(;h=Z,]$!I%]%DgION
%4*"<p]*sUQM0@KYUIo8dp\-`*eg)<]9!F037V0\A-o/7H\"%h4dLkNKZV3)m9;@s(P+mar?n`!7)+mS%=47-$:&^"1%_KV0S^mji
%ETnsY:ZG7^-/(meEtadmUQX`'g!kj>ako_1)Zr.BBuDdtWX,/qB-LSU'nm#/Aj9=.;_rW%*_kuJ/2KAF;OTr49M`c2)@"J-&=O`X
%VeoD8;S&4&-+.K$C8M.Z/0mu@##)99.)J*;C*cL1VVXp^;4SOLiM`:rC3i,cSrJ#\AO!'8Q'5kr1#Gk_,?%!"EqLFd[>KMJC<#FA
%C_3SaX,Jm#5&(2M29]!ci&hMq,p`r,J<`ku/BgBdG[OE4G%mb#KYo'p#5'[V]*B:4!a;VEeRAY,MbIX8SPGI2<"Qr`5qsrR.MRT3
%Xj)e&590/@#tYctY.3pEBd]_BO==L-2]0)EW&s(qdi.V$:Z^Ls)YBc&.GKECIN-Hl4s]BXhEAblhFI*Q'f=7b]6Q=_K`JrI8H*He
%65dRs-0oG*Ud<1LZm#G_ac!"$V\Qa)P(Qk\8PMu@?RT1tV':^Mb=lMq#a4(ArM)Me*Y%lkVH6N/(g(s_$^.HfU]h.0RT^LGB^di3
%>.:6HJn$@2E_uiZNC'L:#0``g*Y%Ja/FQ9;OU%Iu[9:CZW@?B7E3c\X*g+]>@1m*\#,\Ae%=&"K5[g)gkkf<#WT8%FJ)92&C6B\g
%"/SBT\hq8=cf5?e)L,RidU]Vjn/]KMiDW8Q]]c'JX5GV7;#KfF#j\6rFElf2*qZSn=4t?rYVJCF9K6L=f/Lb_L*^(2)/1?P-knja
%H?%<^Wkhc(^)m<6@mT=<>G0WSjC.R-Yp:nI"Xm:)m;>*-r]oa*ZuN<jTqN9g\uP+V)V%(BSCQ9[#ZEq)Z,MMZT:mN4>1!dm,Y;XX
%2-ETIZ<2h#eE0A]5POiP080PJ`0.OY3b^\[d9LZ+s$/FNF`QHDlWFE6'P<A!$9(;1J.BD@S<_CplDg0b7:]^a/R3TkK8%sFL,$4g
%=lC#(D6/[DkCIB2WN15BU/k!qJh0&#EhL33c[+B$.qVa`(4JrVQGG2,H#+0`<pYaua?0hbduB"ffEN+Lh8]6KjK]DsCQ4^%Q_gf8
%>!*W`e-bj-KrEX6/6VDK)3E/WFV_lSW-VsU>,tMW(:>)Cn_B:N$!sdNE`.i!4WRefAY#j%nPLd\KgQ#[4=Gk5qd[9#Xd,@HXhm9;
%:6*gpSf6l[!-)IAUAp#p?(p+j1o4OF[2V1?1=ThnOqg!?$TT&r5rA=Af9<9_)NtGIRq"BRg/("i_V6pP1Iuj<E,YB2f[`lJ:(BD0
%2PLjYC<]I(*"1D&7i&5r%4f(En@DUhg64D`=@*@T#/1gK?2tLnBG@,rWh:gkn1E0!!C--FiL$(T&la]lR.BEF9Lh`RFfrDQArI'P
%iM.mr:507H^%l3Y6u?ca''Fuj/AS@(bnq@DYbi(L"1QX]0`R;)^R\rp@@rs'mC4Xe%Dnh?Mpc5Rbm1#:<9\HI^rY[3-W(NrVe12^
%%*Y-"N'u39[.(e!5+'H'<ZfBIB5COj=ZSYB9l7SB<#Qd>=oHPR#We*_+_CI/O6XE?j!rT\4Q^]/]ajEP?$(bN;*Ue->FF3\XkB`U
%;sa.'kZ<J7kHg,5DCBcINS.j'@;/mdc@^4;n>$LVj>d[7GoW(t$cO5c#%TF5"t]\@Y2IpW[Y$'H4sW.G<'j)=$&]+PTYLSg!a?FD
%G';S.Aq.%\<cDuOap-/9`EO(eI932<+?E_@]Cmp$"A"4q"Ii+,]e'lu(<%J:KSO@M9@+Qp`"oF&Q7$u2<%+lNFt3'9@-sfr0JsJU
%_)n/jA*cOOF$XQBE*k!]<h!7;8eXi=-l+/LhL*@7lGm<L1GP*jGTK09+%q?J/-/6[qH?H/6#&&b4eS'*Y!B.D@/?sW`<H<`cR+uI
%--J_(R+[-XhFWqek;HGP[P`XQHt+\<447_N:+*f3%[BW/6V=-%,7j!D/V[E04tTZ@0[GO*=F\77KOiqQ6#W9J3QiUFQWfqCMpEtm
%`sTQ.;JTUC)pO0`,P1<6'&YLiH_0i>d;Ht(E\;s$_R-aO_%1!WHe@[9m>5Y_`.MtBM\qeI]9N[9BM7iV7rqr-Wi'Ejm:Zh)6lg>&
%Jp9("nV3ZhhJ:lJn`rLS5FLoCPX^R53'83*oLYLNadpXZjj9%m>Cf>_1L(&1S*#H=ff3+)T]Lmr.ua&s=]$u>_@,/LU<@MKn+q?F
%l'3T-1P1R!"hG.PRF[.ZMAQYn);FbY#aQk>KGgTO\RA_OEH.e^;G\<]?nmnRP0G[e<LR\#Ue<dgFT0_Iga2')hQ81TVP.In)]V0Q
%>u[+iic_\@ojY?CFeTj/(d4q%KShXW[)gG82#(NnjQFPmK+7!$]&;rh:ftV+<V[OKoM8`_GS[)f#BT"e@8U[\$HVdjMSVERSEP`d
%i/*;j9B6)'Dmf]&-])2h&-IT,=:&/@$:,d?M-d:@cY6j%<392q7C720RqM@.lR:HjgHC4"VX9*X.tjD4`pHbb1,f.Y>uZ,&M\:X6
%e[`3W#@jY=F]bl15W+m#0Y*7E`Tp4,Oi8@)0+.lM$HUY_blm2#cmq,E?K].FdSc\ddP5'/Rl2q.'K&gOZ\bN26P\)u8!Sr_IaR,j
%Wo@@'jH#ItWal.*K$52Y0M8r?)I"pIM^,)+c)CQ+kR+^n.U$f8FJeiOGZe#9/O.!e-O+hO9\!cb9ZAE4kGh4FRh^'>->,V*aBD8"
%%6<,&C-r/rb!H1dIM+0aOoiqn&rX_*<"_,rek7&]`I(4p+N\c(,.Y:<6BY:LnQ_!)WoBF?"VEnABIB+uMG2N;1h39fC1JoX!>oJ?
%[ZdP%`(lnfQ2FJaS6YHI9U4h\m%^gP1)D(U7i=oOTg_;X[0e0\Mg?O&7;%4/1(BpnPc>4-(g'5*8f0sQcU^/YXFleT1Yfn].JUQ8
%3gB0KaGd(C#0l.R*(rVlMI?XI<;POVN>CD^XGq>W7WcLd+._CkAJGKiJd&iiLA[:YPY0"5$3LBji,QT=b!7.Wg:l-#Ap87@NZ9O]
%BRH\G10=$r1/j,U$a"ESiUpg96Z8ed0Mmk;_kt<qSWP*1KsNqIQ8VUcJb^O(1Tk\qMSa>P!5sIus$!E)U4TFo\>7X`b2Tq.hdp3`
%OPNlP%1YEQLfLuei17Q8>uP1<3GK^*A-T8W+mX+b%q0?+MRIbi$']6E@b<u07-(O;"<6M9K[Prqg%Ad?U!)P!'jIfh1VXmF+t@0s
%(/Lfn=!s<3P6t=TH$V2A-#+L..dcAn1U9NC.]/rkW!e]b9Ar65(Pp($g[_)q]1$0LEs/;0d]6eP.O.1rlC=(nPE:j7i?5<ind,E-
%a+9)!k.SeIXs(Dm;IN58AihoN';nVQ;%8.r:`cX0&g@YshWAu".6QNEAssjs)-K?5'<pg16_h+I3Ln\LAJ@fT,_>*A1J+kUHSDhT
%8EXi%9/\LM`#Hd<Mt72m'Sd_@Y>`'GCPGN>%a)91E6c[MJiBSd^#i?]ACUi!9,T7]TboFU[V-iHfPBrl!dki*WT$D42hE(J^5hl0
%V+;<nlrZNn8u'lHimV-e6I=2FoN(Vg>ZGUIZNQ.s+q2PW15&7>O,WmB,!gc%.6S9^7*aCtM4M^<m63<E762ujWDkRLJH_!Gg/.R3
%bN`8(;aK2%=O!6YbfqTn`l_Bb#E-!KaKpZFi%!,p)q<N-h@tHl)qX)=S;15b#aZ<-cH-h+6+5Qd/ameg"3QFT1DL\"b;a*#^:[4\
%7T586P[d"T03ku-9s+R*gdb:3mVNI8@P]DVAMD8gI"]qK'Q+sC=e+ceEAY,b_o4".9U^9cn/LEBoL*YL24B/=/Zo_#=s5'oB)r5W
%dc'+7)1Ptt0M'bERps#]f1'[@HrRP^HMW&Xm-*9dZ#WiBg#6dulL\c3Ep`J<_.`JYj%!ZjL`X8a>@%j//!#BbLML=GoW`$]m6Ku>
%a^Q[`LlP!?i]rCK5gN1m7GXU_#nB%Of%GfMAJPXqUmKBRGT"OfXaC1rG45S`AZZ+5d?IujAnu5#E(nNUE&o/pM9Tpm?OInUCr>Vp
%OHWZTd(=nc6S:H;3q8kuS<9h*>qEWRja`i*B;_YZMnn=l1,Hr.3J\$W9al!fCUZ#:K<5e).:aiIiX$P;'coYWgXnMT3PFpXe?Xo>
%on*i!=\4Xd-Aur\@X9UW_.KsLiLXku%!7Vs`Am)\b6XcGbQlus92WkT:k2mn9028n0du*(&"V-^7gg<\F`,@+2e/"),X.'d5<R;I
%^14WQ=_HU10u=tg)7O=U^i7`c-!;(0.M@2<DdG@YY[L^.I2sr?M^tur@X1_f6&gD9;M"rg<5j^36bu!E;H/gE@ugTtE_:#E)pN!]
%M-qn"X<YrVnI)OH6ubl^dEHL(Kf;I?\`76J%g`WcXXBE\gG78*[U/D;LM]`I)\2_hD4TaHk"<ts8e*)7#k`LW:i<7(kRFg:^A?'H
%/f&dCjhD`ej,DS]i.0uQ9T!\(%%>"uZ<Wke(>Ya1Hq^ffUKDUBj.R.0Qmb'O<cWE$@`6T`&d\!cU/FG-OskB[CWQTIH(Ri5Og-]Q
%-"(<4d_MCa(VWbO_^M["V!Pq@O_`/3KR\pZYRJYCfW%3=Z[&E+[Y@mVOu)16lW>ttP%I>2.4?+69q<4:.f%Q'>AZF8'O6SF^09cl
%.-7n5L?<>(dSg]7C%g]7TJJ<ud?'Xl@5!d[;7cGq'WVZF_f29"_\:#<NQGSDLnY<Q)F3BiR+J?A_ufQo;cT6>i+6qC9\p&k/Mnl)
%W4:3AnsF"Q=ZD!Ip=^?Il'CcQ]k/\u#2N+TcY=7+_^_S3E`*h_QM6B*eTSOA7g7r\n$9;igp"uCIYC3O1_=+aA"r-?6La>!er6AM
%)5JKSEqs.ci[M`,O_BOtXrVANLO+5_S.*eoSgZruZuogqj.R,2c7.[Qb'fs=#rX<!1d9J/=(RR^3G"u%B_BM?rt0rka=bFCfD^l.
%BfZE*;^=Li<,G#!3B(!b6rn`MrN$V957pF4C7CJbqb"R(:b3``Qbg8$Q+9B1Br:eI/V.Yb-ad<Sir^q%*X;aKm&D<OQ;";V][]u_
%0rh;*MS.(-+$j]H3XTIf,"dl3nSGI\>/D(Z`bUj?*7m]b>F@C'/qCPF4*sY:>[<])1ZhVK13_)H;<&TZFc7qBWJZf]?H,LnC27:a
%BL&]je0-)28S@CE67CqgUmpNeV=]DV!7!6mE[`o(o_$$UQKr37D9/$8bQY9nWpa&1d[9/i*uTX5FFN2+;YSGep]HEX2kjEC!N,Cm
%+A/<sUJSA7P*5&gJnM@5H1G@q6W:SuTljq7'MB8nUaO/5%eT:d85[Mtg@C4<A^'e+_h3e,=L>kipn;nt3mfu)XF4JU!KY$*^Co)-
%+B>nTPN@C/`LLb/ZUTn1n]amD)_!/kM6WV6+u74h3?C@Y,FQeWH:4cThA=-#^a'EOA+``/_Y:!L#R\#!J@&`]*Q5.?Q"!!(Smul(
%q=>&lS5afuZMdXpbB5K;Z<1>1-nJ?+:fU3(b7Y&3]8<eU$]V+dXP<qEC"HO!PEb+p[ZMSorgB2Kfh1Z-1prI4CNMJ%,ae0<L,2f)
%*&9qtHE48>Y`g^N[PoTd<Z=F1/4j?k)f'/<.8$%nRE/n@]_mV?(6,/U(X#C`kuBSuZ8/Gf)nQ`%1CJ6J/T`j-Ep"%V%Y0EKU_`H2
%@2DBs3dE38ikEES*-1#f7HG74'[[JK=t,]Nm-S%gXIQ@l+ep\c6ojKe'ia7i4k%?4#Fa_1Yq>3<NL9$nS^D,T[+\#*K>T1"Qp]Cs
%V8fC7T\50?.8/[Be4`:L.\63Ci_iYcGpLan>u^J5Im#8_&V83ri^M9bRlX&b[4l#lb)U/VgQK0JLfX&;AJ7<toN2]A/C5rLkf_1G
%Q+^3$+cIr34jTFVcs's&UUmNFlH9DT`J;;N=;9`m_s>JtpIXmqYkA]g;p7^#(n%A3TS!p>`aD(n`^lD,`nm`YYa>nQ+/UIHZS?73
%;gMCV'+_tTpMnGa.>d\k$Wb;7dD<bqjj]8*ZBS=SRP5Y""<\q4Tb7>Q=fF^C4YtfNM%(blGUW:Rkfc?X"hf+RaC='a)gN%,1%5?8
%77%q?(7XnqGq`RUWM"tP=[C0/,dh01hl*>*?PJJ-$8o0RMb2^;*KNZW1WZ=eN5ufNN-V"('Hh^PZ]!:4#Y)@'f>H*>-`2/:A!BH[
%8#R.4CJa>XpH\7<l`=:T@\p9tH=>(6%EqknUrfugdO"!)=NQU"^Tu@Zg`!Z\n:8`(8b+UE:c2_).uR\q:J_6PqIFP6[Rl&OA0W5G
%P7k09<EThJhIub:PKP_Z/i&tOl#JK9A[BL"YXP#_F#K%EGZ?aWjLTS9eO"6$L+j,#*9?p(do/%(C$Xi6_KO+M4Ig(fDf.RKK.U<m
%4?f*P@D.@fQNjQPYSr^h`-R?sH?3KE4[&ZdM9BGW,XVb6!SH(gQ4_e[Pm/"?VFr:\I7E(;WPq+,+?#Q;[tL[9=OUY&GqG3`i:+Z3
%Q"8FIP1`D_g5Fn:2RW$^26F<o6"d"CZfO!^kbDf9)stb8I>J]T@NsI_2`RI>U`ljo?;L?#HKf`fk31c&qEa<YB0e$CNYb,qro3F"
%*=JAn,RDIlS3RlYUN\d=2dE5h!7)tN.ekn=+3Q##66B>`2`n%_;"'sMebkS0PlCh`rlGR3,VOb;Q7EJO+_UnXGSjP>_5?b[Q)_6;
%O4bWof^Yi-KW)-HT5>a9QPd%lSL!;jE0]jZbfk(G_!i;R2(Ah%;DD-->gnm)!P@;]LMP;0L]^?l>$02c8c2.>fIQP-H/j".'a(49
%jmZ%Z@LbPLa3b6k9ahD:V6XMSYr!gO:O)@Xf&fR5W&l@u.@M=&b$^bXbS-ibf5OTK_`H>Jn;$I3M%LNoV;n[5>.:G1"t_<Va!a6"
%(oVb:5Zs;*5s_*DA9o1K:t[3"V1ZRkg+fmM#'79EW'7mCOP(e76@NYtF],!Z.-3E4R4qK--6BSR#d'iR@aXLI7;&VW<RHJaCsTP"
%5YoaH=:F=W@:tN8ou[>FWFMZP8Zs#+LRi^o/F%m6<qnNi2?<hf)0pjcY>Ui_(dg2^ZcRitUP=Sf@A%QpdeA>N?u=Ee;5></lAioC
%B]VS5$`X2";E<kc,H6#;eLg\'-7:%6N,<10NN\&;f/?XY'n'"3kX#P&,Q(=pCR)N,WVEOUcPq74,g/Z=T[=]&.L$+W'&/p?:pQA%
%"2\/)q+<CU2&D=1S0inKYfjiBZ-p&'N*>]_OGdg%-FluY^Ob,N^"ld',FAs;e$??PS@lK?EN"e)"!THZ;5,P:2D+=4LenR/"A0Xf
%df^_rNZ&KH4$)d`^=.3;^hcj6#tsJ"?d4c/Sliunm>3PI>@d;%6!Q;-(KNmIg\>$Q='EE7m!)1A#[VshZ1,c-3BUWf8OjXS+u6:>
%7$t$;/.7Ek9t$t:R=J-sPT&N&LTm?YBb1oI(bOL#T*38fZ)R"4,<p%m)Tg8O`F04J`Kr[NS4i`USPAcREGP:=?<H)'SWXl<L1H$j
%(H,0$Zr2,iQD25Gi=C"\<`&2%[rF2mj[Mh82R\No9.4NQTM,RY__/N_":)X,,`9QQPDqoO..EWAqo59u!rljY)PepL2TeU7bq;X#
%-`l-;`i9.UZ[%WUI#2$;4G1W_]S0B].)?IL=BcG)`t+nF0=G=i.k+Q"8.QIT]j``=/n5Qh-l&/VUt]A>1@#lNR;0X+d\`gjX\:'q
%U*"J.PJD.A'MW2Od>S1rI42213.^#pV90tdh*P_-Q\^p(/:K,n=fRg?5Chulfs9WC$\)Wd%G0Yr\@@^%\@OSs[A9))4QBUE@bCU:
%O1.5QDR>D!DCdRQ3CI'BGZuX/HR%`(]kIbh#.orU8U>O51g960H:)j]Q:WCRZM:-LD(1uuUCGV2?B^a_Fu\/qe<$Ri#=Gui2/u/D
%,ggI/7*@KJ<!t+miL$N&.i$6!c+R*_EI+&7b425nA[<$'(61W.?,K'mX%KOD-:Hk+f-c\,2l6js#/q;C0!eRK@F;q+%"p2,$fF99
%XG/BcS[;f>'0)!kI!b>_9PMCH7RT^EV7e:2R1[d%k>!Z2\S,AZXXn`K3Ugek9f1qBXDK'#F9rOe>"L$/WfIS*,`@;JnJLk3,"7Dc
%g:Ghb,5ic;(><&(\]4'?ZB^C@Gp%F4ZnJ<A&=4L"H!n]9.+8W/4fP&WC;%]3hdDZe6u=PGreAG2OkS;#7<>4jX=G;&@>ocS7mW9P
%5jq)tr<@Kan-AQUmDUHb$NF1"!)Z)i6_plLoZ(QWH9Fq[aUB"&a"mTM;YS'Qh?.TfODtI4$`4,dNREn;M_n\)9Ws$[>)oCfWN/>6
%B",$@]$\NC<FgoKPqpjSVRrUL<9?em:;aN)O4ja6Z$gI)'ZBU`p16:EWmfpf"UQk7/G$pTI@$gsUk5Rd@km[OUWZUgMp.L$Ca3\S
%fQ!Q.1XNQ;@\L`;3,pfoPu,fs6E3WPPHlbtKo*lmR"@^h.[#OQ#U,qi3"R%tXF;@A:h7Y+MA<t5fR?=o)WmtA$A$](]I^rrCk@]#
%9_opCFq_iS!S%bf0Z.O!d_08>p*?%XPXf.t>&<)hKufn1E1CJOKeA57QXLQaL_Fs_=rK@*+=2QagR4;Y@)9_2=Gr3Z</;]]]pl-\
%8E$I[I)&`a)nBHWMINeSW@Dc'Ui8-XF=uA\Sc!u1_o5Xr@Zb2!#e&tiG3"IF]a8-Ca@Mq#%NnWA_0Mt".0gF-#DZ<a_'-skSq\6i
%C=L2>g*#71\.(nfEY=Lo$!3/jDRW20_A"]b$(Ed3ig-%_SfQ-jaCD>TH%M4q%nh.kPo?OR$Ta3]%)l+`<Z0sf2>&qt2`rXSk*BX#
%]KL52nu.1bUB1td@\8YA*`F>=0T'do-7f@3m5CC^#?-_bZ"CNt>o$BFjKcTGC=/rS&Y`s3RA[Vu.QSec7&DCC<8_n9l88F.9b"Q@
%cIuk<V-oJNYKS7#g>p-:@87Z88ht#&C6;OGQ5-r>:#:a"$^a%F;[G3.Ug8hUOs2d)-r6.0fp8AXC_@;G%ODS9[^IH-E@!0U(Bq17
%@VC_U"6W:X#7YAsH(ZFNk2JrNcG/;hm("0IFi8PDhAVP0Eph=R6c][_1-TeU*`"I7oON72g"(_0eKc#SMDWiPfBR2([5p<loJn4>
%#:!mT[$U\/rPX%!c*R*25J6WqW_b`V>&IL@!rdW'r\i(S*L#NUG/X\E2\rUd4a$hF#7(1Xg0SB=p.b"):]7o?o"dOMoo&P<0:f]?
%KD3$.kPd98mb?N!9EL-qIW]_l[kV&&,D:K&HZ,mOFY1H_ZF9_W(2Ci-c6OM,?f$A6`U:&3>.h50A6LlV?Mp^)4P*;TW7uL@m/5k;
%W>BL(k/N8PCqT%P3#iE`_r5Poedk"*E&\htomkBF%Yqs,2rJbe_r5RY*Bo6?*"L$EiH)NHiGd!]5)hWD%`b[0e%!<SE6K4aLH?Ic
%a5#Y&\AR9EbSi[)3ueaNXPqX<_r5RY)Es-B*"L#jiR><SiGd!Z5)hWD%`b[0e%!<SE6K4aNB8*ia/n7K\AR9EbSi[)3ueaNXPqX<
%_r5RY)Es-B*"L#jiR><SiGd!Z5)hWD%`b[0e%!<SE6K4aNB8bN<upUd<=]Y])SlZ5@i;>9RN,C^<=]b`]"ggi@i;>9QQ0([<=]b`
%]"ggi@i;>9QQ0([<=]b`]"ggi@i;>9QQ0([<=]b`]"ggi@i;>9QQ0([<=]b`]"ggi@i;>9QQ0([<=]b`]"ggi@i;>9QQ0([<=]b`
%]"ggi@i;>9QQ0([<=]b`]"ggi@i;>9QQ0([<=]b`]"ggij0De;eE$C3@atS!Yt"56iG^arZ\D99%YqqVC\TaSE&\iDL/6h>LVki^
%pb_DX3#o8Z:ZDq?__Gs%2"#<B*4(Aqispj^0l-P@mVk-*Z\D99%YqqVC\TaSE&\iDL/6h>LVki^pb_DX3#o8Z:ZDq?__Gs%2"#<B
%*4(Aqispj^0l+G5)lnE-LVr(i>QJ/:_Q'6LiG^ar<rel4*=dj7el\N`I3s.t*0.SfZ?*P%j:6s_0amn<F1BQW%Yqs,k4g%]E1bGs
%%YnO'ECI4C_r5Po*"IbAiG^ar%Ys(o`2`c!%Ys*E(&R^lg[EdA=S1oW:[`eXJV+1<*cgU!/Gf"SC\I5^msY'D*'1b&g*<*=3;++G
%O1]Yrn=]s]a55\IRY-BV>l4B`hXosrDfG%h>lWqF?2+22NuU@YRXN)#IILmQH/f?PHi#n5X5MW'W4(URp:&lI`bU%s@!T6U*B8Gk
%FZ7%@^@epEmlgY6a54Z&pE$s6f(tpr??aZQ"4l0&%iorUNPBGunIn!.IH^*G*.%p7J*=&+'?>%iKcAoojNr?[Yn(2g_`Mdbs/@dr
%q<5j@r59s'HNg$dnDbVhaI,uq^\+-V>^KSRp:^VJYCBc)r7%?&pt<uCiJS5;>u*Sic<,5Lr"jVAMdQ8WB-7'#;oe45]m`??pqDBa
%^$b9sSiH?"?[_aNO$%aVggfZ*F6Ch3]$<:EVQKRU,@CE??TiYr`3!smm^3;Qg%u:$H.+img\Jp'^\kL[cTcF.agK$?$Q#CZi`k=<
%`qf;G2no*i-_=F&j/SS_)&Jl(s7k3[r7R.th"Hae*BCW:S\=j]m:1?go^cF<r5iS(55Y;d_m@Zqr8)Ytj6;&?lJ&@W^!#?g:]9%s
%s7+q6?$pf9)t)]A:Hnd.c[YSiA(tqY[*CjWc1TV65P4J!4ECFhkFR1^a(pGHT)[bjc[PWQV_5(0bPdE=??kc"mlpX(&(e/HSpTVt
%,@C6@LYc6@J'F\8ff+TEG<blA8"[<dr(gXFH/7u<:L8GJ\aOt0>Q=9?s7k6H([!),p5f7O0AlWOpRZa2`O0Nmk:]$hkSG>RqfoVZ
%g=br,k7\As]C>.p0>6r!W[$ksi0@AMHLXKA^N9D?O$*?*^\Q<(mE3b(l#4<,n0;:)s.,'4H>tN@mY,:,S9sH5pUotCcMlnXF&.8b
%a"OXN'/,sQV&+UMn)s`MiNo0Rb[5a4eOS4an>X1tbid88r:fCSr<J84ACV-sKNDLZnb8Y<GP75elg2[=frKS;A\@St+'j9bT-"!t
%:Oh`K&);MXeP<)L3.:5t+9'ojs8(](HLg'VI^4Enr@0l*Yuu5Cb:ikaR=G1hfh_Y$l('p)\:)oqk$>LqN]VG[s4O<rIdLL7q;I7t
%fQ8q9m,sshr8GtMm.>3:HWQEjWWPg+`72HcfPd>[f]O<)r9<CWZi;]JnrJ:ieCX`g1EYI6<o8;b>MlaO&FfmAH0^GKf>i%ur0b=s
%qGTU\c_d1=B7Ks9s7!LIq7rQi](u1]>l2*4kC-+o\ng2BrQXfBo7=[SgOK"l\i/CB3r@%>^@\COmq?Td_i_j;:?pPe_aiR&@ro](
%TDHts2r4Bmqs9rI^-01&g;=.rSZK@0#7b,<eo^fR5@<lVRpTe]SiFIGFbfZtRMWS.m+[$RF`3+XBY+"^p@-"9KD@C\r18.M0YaKS
%h\31&k1=_HHfDHLr0hMP:V8TQ?dm9gM:Vt'CV'=)n_.B"9fKg7?5q+ll/q`YCP2F?h/&\84_RoS\TYFY`ifG"m;.i0>n(E!fcJJR
%3m=k84]CGl0uM<1*42cc*';o]9<T!"lYOld^M<[*Sa@.8=,a[jKQsWNQ"-]!?=(TrFdQSPVq5Qg/S8(VmE>r&"m3h;i1)8]'kYFa
%ibV1N2<MfBj?.*?2-/Nmrrk$qKB<StHPDfT3-=T:4c<n>;J.<4Za^DoZ1EtD=Y00(]99t$`NkYWCP;%[/8KpKqTkbPA^l4Zhlc:Q
%(U:(-j`!1!Ng\n(Rst1)hn*agbg,@jM.<"o2nf)Op$XLan)(\Ubc1It2f@O.pnQ)nT3qM'fXbp@UY>RP`W+[&D3N_Y[J2!?3CNjD
%kC0I8r70=th_"g$M&k@kE5gg$-iRXtj-FGlWqs/<[Sg+Dh*!X6->qF0Wje",DWE]m0+Ns*nj_D\r6inp(k*Ra[WpXCnoh,2Xk8Bq
%$9'WP-e-sqf>hJ[*hOAJAt,+Feg85p[`/"=r,6Ijr$K-qn[![_F/.Fb\XU''gdt^Wrk;n5p[MT/>P\'>T:EL]Q<P,ZRsoeKY#E)T
%hp)K,!3L_%rAtO[g=j+#T$q=qcCFaK`W*;ff6sRb5BH\8;d9!Gi:J,/Jt%K6(;9KY^TtE?T;_h4<W~>
%AI9_PrivateDataEnd
